{"version":3,"sources":["node_modules/yaml/browser/dist/nodes/identity.js","node_modules/yaml/browser/dist/visit.js","node_modules/yaml/browser/dist/doc/directives.js","node_modules/yaml/browser/dist/doc/anchors.js","node_modules/yaml/browser/dist/doc/applyReviver.js","node_modules/yaml/browser/dist/nodes/toJS.js","node_modules/yaml/browser/dist/nodes/Node.js","node_modules/yaml/browser/dist/nodes/Alias.js","node_modules/yaml/browser/dist/nodes/Scalar.js","node_modules/yaml/browser/dist/doc/createNode.js","node_modules/yaml/browser/dist/nodes/Collection.js","node_modules/yaml/browser/dist/stringify/stringifyComment.js","node_modules/yaml/browser/dist/stringify/foldFlowLines.js","node_modules/yaml/browser/dist/stringify/stringifyString.js","node_modules/yaml/browser/dist/stringify/stringify.js","node_modules/yaml/browser/dist/stringify/stringifyPair.js","node_modules/yaml/browser/dist/log.js","node_modules/yaml/browser/dist/schema/yaml-1.1/merge.js","node_modules/yaml/browser/dist/nodes/addPairToJSMap.js","node_modules/yaml/browser/dist/nodes/Pair.js","node_modules/yaml/browser/dist/stringify/stringifyCollection.js","node_modules/yaml/browser/dist/nodes/YAMLMap.js","node_modules/yaml/browser/dist/schema/common/map.js","node_modules/yaml/browser/dist/nodes/YAMLSeq.js","node_modules/yaml/browser/dist/schema/common/seq.js","node_modules/yaml/browser/dist/schema/common/string.js","node_modules/yaml/browser/dist/schema/common/null.js","node_modules/yaml/browser/dist/schema/core/bool.js","node_modules/yaml/browser/dist/stringify/stringifyNumber.js","node_modules/yaml/browser/dist/schema/core/float.js","node_modules/yaml/browser/dist/schema/core/int.js","node_modules/yaml/browser/dist/schema/core/schema.js","node_modules/yaml/browser/dist/schema/json/schema.js","node_modules/yaml/browser/dist/schema/yaml-1.1/binary.js","node_modules/yaml/browser/dist/schema/yaml-1.1/pairs.js","node_modules/yaml/browser/dist/schema/yaml-1.1/omap.js","node_modules/yaml/browser/dist/schema/yaml-1.1/bool.js","node_modules/yaml/browser/dist/schema/yaml-1.1/float.js","node_modules/yaml/browser/dist/schema/yaml-1.1/int.js","node_modules/yaml/browser/dist/schema/yaml-1.1/set.js","node_modules/yaml/browser/dist/schema/yaml-1.1/timestamp.js","node_modules/yaml/browser/dist/schema/yaml-1.1/schema.js","node_modules/yaml/browser/dist/schema/tags.js","node_modules/yaml/browser/dist/schema/Schema.js","node_modules/yaml/browser/dist/stringify/stringifyDocument.js","node_modules/yaml/browser/dist/doc/Document.js","node_modules/yaml/browser/dist/errors.js","node_modules/yaml/browser/dist/compose/resolve-props.js","node_modules/yaml/browser/dist/compose/util-contains-newline.js","node_modules/yaml/browser/dist/compose/util-flow-indent-check.js","node_modules/yaml/browser/dist/compose/util-map-includes.js","node_modules/yaml/browser/dist/compose/resolve-block-map.js","node_modules/yaml/browser/dist/compose/resolve-block-seq.js","node_modules/yaml/browser/dist/compose/resolve-end.js","node_modules/yaml/browser/dist/compose/resolve-flow-collection.js","node_modules/yaml/browser/dist/compose/compose-collection.js","node_modules/yaml/browser/dist/compose/resolve-block-scalar.js","node_modules/yaml/browser/dist/compose/resolve-flow-scalar.js","node_modules/yaml/browser/dist/compose/compose-scalar.js","node_modules/yaml/browser/dist/compose/util-empty-scalar-position.js","node_modules/yaml/browser/dist/compose/compose-node.js","node_modules/yaml/browser/dist/compose/compose-doc.js","node_modules/yaml/browser/dist/compose/composer.js","node_modules/yaml/browser/dist/parse/line-counter.js","node_modules/yaml/browser/dist/parse/cst-visit.js","node_modules/yaml/browser/dist/parse/cst.js","node_modules/yaml/browser/dist/parse/lexer.js","node_modules/yaml/browser/dist/parse/parser.js","node_modules/yaml/browser/dist/public-api.js"],"sourcesContent":["const ALIAS = Symbol.for('yaml.alias');\nconst DOC = Symbol.for('yaml.document');\nconst MAP = Symbol.for('yaml.map');\nconst PAIR = Symbol.for('yaml.pair');\nconst SCALAR = Symbol.for('yaml.scalar');\nconst SEQ = Symbol.for('yaml.seq');\nconst NODE_TYPE = Symbol.for('yaml.node.type');\nconst isAlias = node => !!node && typeof node === 'object' && node[NODE_TYPE] === ALIAS;\nconst isDocument = node => !!node && typeof node === 'object' && node[NODE_TYPE] === DOC;\nconst isMap = node => !!node && typeof node === 'object' && node[NODE_TYPE] === MAP;\nconst isPair = node => !!node && typeof node === 'object' && node[NODE_TYPE] === PAIR;\nconst isScalar = node => !!node && typeof node === 'object' && node[NODE_TYPE] === SCALAR;\nconst isSeq = node => !!node && typeof node === 'object' && node[NODE_TYPE] === SEQ;\nfunction isCollection(node) {\n  if (node && typeof node === 'object') switch (node[NODE_TYPE]) {\n    case MAP:\n    case SEQ:\n      return true;\n  }\n  return false;\n}\nfunction isNode(node) {\n  if (node && typeof node === 'object') switch (node[NODE_TYPE]) {\n    case ALIAS:\n    case MAP:\n    case SCALAR:\n    case SEQ:\n      return true;\n  }\n  return false;\n}\nconst hasAnchor = node => (isScalar(node) || isCollection(node)) && !!node.anchor;\nexport { ALIAS, DOC, MAP, NODE_TYPE, PAIR, SCALAR, SEQ, hasAnchor, isAlias, isCollection, isDocument, isMap, isNode, isPair, isScalar, isSeq };","import { isDocument, isNode, isPair, isCollection, isMap, isSeq, isScalar, isAlias } from './nodes/identity.js';\nconst BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove node');\n/**\n * Apply a visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nfunction visit(node, visitor) {\n  const visitor_ = initVisitor(visitor);\n  if (isDocument(node)) {\n    const cd = visit_(null, node.contents, visitor_, Object.freeze([node]));\n    if (cd === REMOVE) node.contents = null;\n  } else visit_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisit.SKIP = SKIP;\n/** Remove the current node */\nvisit.REMOVE = REMOVE;\nfunction visit_(key, node, visitor, path) {\n  const ctrl = callVisitor(key, node, visitor, path);\n  if (isNode(ctrl) || isPair(ctrl)) {\n    replaceNode(key, path, ctrl);\n    return visit_(key, ctrl, visitor, path);\n  }\n  if (typeof ctrl !== 'symbol') {\n    if (isCollection(node)) {\n      path = Object.freeze(path.concat(node));\n      for (let i = 0; i < node.items.length; ++i) {\n        const ci = visit_(i, node.items[i], visitor, path);\n        if (typeof ci === 'number') i = ci - 1;else if (ci === BREAK) return BREAK;else if (ci === REMOVE) {\n          node.items.splice(i, 1);\n          i -= 1;\n        }\n      }\n    } else if (isPair(node)) {\n      path = Object.freeze(path.concat(node));\n      const ck = visit_('key', node.key, visitor, path);\n      if (ck === BREAK) return BREAK;else if (ck === REMOVE) node.key = null;\n      const cv = visit_('value', node.value, visitor, path);\n      if (cv === BREAK) return BREAK;else if (cv === REMOVE) node.value = null;\n    }\n  }\n  return ctrl;\n}\n/**\n * Apply an async visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `Promise`: Must resolve to one of the following values\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nasync function visitAsync(node, visitor) {\n  const visitor_ = initVisitor(visitor);\n  if (isDocument(node)) {\n    const cd = await visitAsync_(null, node.contents, visitor_, Object.freeze([node]));\n    if (cd === REMOVE) node.contents = null;\n  } else await visitAsync_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisitAsync.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisitAsync.SKIP = SKIP;\n/** Remove the current node */\nvisitAsync.REMOVE = REMOVE;\nasync function visitAsync_(key, node, visitor, path) {\n  const ctrl = await callVisitor(key, node, visitor, path);\n  if (isNode(ctrl) || isPair(ctrl)) {\n    replaceNode(key, path, ctrl);\n    return visitAsync_(key, ctrl, visitor, path);\n  }\n  if (typeof ctrl !== 'symbol') {\n    if (isCollection(node)) {\n      path = Object.freeze(path.concat(node));\n      for (let i = 0; i < node.items.length; ++i) {\n        const ci = await visitAsync_(i, node.items[i], visitor, path);\n        if (typeof ci === 'number') i = ci - 1;else if (ci === BREAK) return BREAK;else if (ci === REMOVE) {\n          node.items.splice(i, 1);\n          i -= 1;\n        }\n      }\n    } else if (isPair(node)) {\n      path = Object.freeze(path.concat(node));\n      const ck = await visitAsync_('key', node.key, visitor, path);\n      if (ck === BREAK) return BREAK;else if (ck === REMOVE) node.key = null;\n      const cv = await visitAsync_('value', node.value, visitor, path);\n      if (cv === BREAK) return BREAK;else if (cv === REMOVE) node.value = null;\n    }\n  }\n  return ctrl;\n}\nfunction initVisitor(visitor) {\n  if (typeof visitor === 'object' && (visitor.Collection || visitor.Node || visitor.Value)) {\n    return Object.assign({\n      Alias: visitor.Node,\n      Map: visitor.Node,\n      Scalar: visitor.Node,\n      Seq: visitor.Node\n    }, visitor.Value && {\n      Map: visitor.Value,\n      Scalar: visitor.Value,\n      Seq: visitor.Value\n    }, visitor.Collection && {\n      Map: visitor.Collection,\n      Seq: visitor.Collection\n    }, visitor);\n  }\n  return visitor;\n}\nfunction callVisitor(key, node, visitor, path) {\n  if (typeof visitor === 'function') return visitor(key, node, path);\n  if (isMap(node)) return visitor.Map?.(key, node, path);\n  if (isSeq(node)) return visitor.Seq?.(key, node, path);\n  if (isPair(node)) return visitor.Pair?.(key, node, path);\n  if (isScalar(node)) return visitor.Scalar?.(key, node, path);\n  if (isAlias(node)) return visitor.Alias?.(key, node, path);\n  return undefined;\n}\nfunction replaceNode(key, path, node) {\n  const parent = path[path.length - 1];\n  if (isCollection(parent)) {\n    parent.items[key] = node;\n  } else if (isPair(parent)) {\n    if (key === 'key') parent.key = node;else parent.value = node;\n  } else if (isDocument(parent)) {\n    parent.contents = node;\n  } else {\n    const pt = isAlias(parent) ? 'alias' : 'scalar';\n    throw new Error(`Cannot replace node with ${pt} parent`);\n  }\n}\nexport { visit, visitAsync };","import { isNode } from '../nodes/identity.js';\nimport { visit } from '../visit.js';\nconst escapeChars = {\n  '!': '%21',\n  ',': '%2C',\n  '[': '%5B',\n  ']': '%5D',\n  '{': '%7B',\n  '}': '%7D'\n};\nconst escapeTagName = tn => tn.replace(/[!,[\\]{}]/g, ch => escapeChars[ch]);\nclass Directives {\n  constructor(yaml, tags) {\n    /**\n     * The directives-end/doc-start marker `---`. If `null`, a marker may still be\n     * included in the document's stringified representation.\n     */\n    this.docStart = null;\n    /** The doc-end marker `...`.  */\n    this.docEnd = false;\n    this.yaml = Object.assign({}, Directives.defaultYaml, yaml);\n    this.tags = Object.assign({}, Directives.defaultTags, tags);\n  }\n  clone() {\n    const copy = new Directives(this.yaml, this.tags);\n    copy.docStart = this.docStart;\n    return copy;\n  }\n  /**\n   * During parsing, get a Directives instance for the current document and\n   * update the stream state according to the current version's spec.\n   */\n  atDocument() {\n    const res = new Directives(this.yaml, this.tags);\n    switch (this.yaml.version) {\n      case '1.1':\n        this.atNextDocument = true;\n        break;\n      case '1.2':\n        this.atNextDocument = false;\n        this.yaml = {\n          explicit: Directives.defaultYaml.explicit,\n          version: '1.2'\n        };\n        this.tags = Object.assign({}, Directives.defaultTags);\n        break;\n    }\n    return res;\n  }\n  /**\n   * @param onError - May be called even if the action was successful\n   * @returns `true` on success\n   */\n  add(line, onError) {\n    if (this.atNextDocument) {\n      this.yaml = {\n        explicit: Directives.defaultYaml.explicit,\n        version: '1.1'\n      };\n      this.tags = Object.assign({}, Directives.defaultTags);\n      this.atNextDocument = false;\n    }\n    const parts = line.trim().split(/[ \\t]+/);\n    const name = parts.shift();\n    switch (name) {\n      case '%TAG':\n        {\n          if (parts.length !== 2) {\n            onError(0, '%TAG directive should contain exactly two parts');\n            if (parts.length < 2) return false;\n          }\n          const [handle, prefix] = parts;\n          this.tags[handle] = prefix;\n          return true;\n        }\n      case '%YAML':\n        {\n          this.yaml.explicit = true;\n          if (parts.length !== 1) {\n            onError(0, '%YAML directive should contain exactly one part');\n            return false;\n          }\n          const [version] = parts;\n          if (version === '1.1' || version === '1.2') {\n            this.yaml.version = version;\n            return true;\n          } else {\n            const isValid = /^\\d+\\.\\d+$/.test(version);\n            onError(6, `Unsupported YAML version ${version}`, isValid);\n            return false;\n          }\n        }\n      default:\n        onError(0, `Unknown directive ${name}`, true);\n        return false;\n    }\n  }\n  /**\n   * Resolves a tag, matching handles to those defined in %TAG directives.\n   *\n   * @returns Resolved tag, which may also be the non-specific tag `'!'` or a\n   *   `'!local'` tag, or `null` if unresolvable.\n   */\n  tagName(source, onError) {\n    if (source === '!') return '!'; // non-specific tag\n    if (source[0] !== '!') {\n      onError(`Not a valid tag: ${source}`);\n      return null;\n    }\n    if (source[1] === '<') {\n      const verbatim = source.slice(2, -1);\n      if (verbatim === '!' || verbatim === '!!') {\n        onError(`Verbatim tags aren't resolved, so ${source} is invalid.`);\n        return null;\n      }\n      if (source[source.length - 1] !== '>') onError('Verbatim tags must end with a >');\n      return verbatim;\n    }\n    const [, handle, suffix] = source.match(/^(.*!)([^!]*)$/s);\n    if (!suffix) onError(`The ${source} tag has no suffix`);\n    const prefix = this.tags[handle];\n    if (prefix) {\n      try {\n        return prefix + decodeURIComponent(suffix);\n      } catch (error) {\n        onError(String(error));\n        return null;\n      }\n    }\n    if (handle === '!') return source; // local tag\n    onError(`Could not resolve tag: ${source}`);\n    return null;\n  }\n  /**\n   * Given a fully resolved tag, returns its printable string form,\n   * taking into account current tag prefixes and defaults.\n   */\n  tagString(tag) {\n    for (const [handle, prefix] of Object.entries(this.tags)) {\n      if (tag.startsWith(prefix)) return handle + escapeTagName(tag.substring(prefix.length));\n    }\n    return tag[0] === '!' ? tag : `!<${tag}>`;\n  }\n  toString(doc) {\n    const lines = this.yaml.explicit ? [`%YAML ${this.yaml.version || '1.2'}`] : [];\n    const tagEntries = Object.entries(this.tags);\n    let tagNames;\n    if (doc && tagEntries.length > 0 && isNode(doc.contents)) {\n      const tags = {};\n      visit(doc.contents, (_key, node) => {\n        if (isNode(node) && node.tag) tags[node.tag] = true;\n      });\n      tagNames = Object.keys(tags);\n    } else tagNames = [];\n    for (const [handle, prefix] of tagEntries) {\n      if (handle === '!!' && prefix === 'tag:yaml.org,2002:') continue;\n      if (!doc || tagNames.some(tn => tn.startsWith(prefix))) lines.push(`%TAG ${handle} ${prefix}`);\n    }\n    return lines.join('\\n');\n  }\n}\nDirectives.defaultYaml = {\n  explicit: false,\n  version: '1.2'\n};\nDirectives.defaultTags = {\n  '!!': 'tag:yaml.org,2002:'\n};\nexport { Directives };","import { isScalar, isCollection } from '../nodes/identity.js';\nimport { visit } from '../visit.js';\n\n/**\n * Verify that the input string is a valid anchor.\n *\n * Will throw on errors.\n */\nfunction anchorIsValid(anchor) {\n  if (/[\\x00-\\x19\\s,[\\]{}]/.test(anchor)) {\n    const sa = JSON.stringify(anchor);\n    const msg = `Anchor must not contain whitespace or control characters: ${sa}`;\n    throw new Error(msg);\n  }\n  return true;\n}\nfunction anchorNames(root) {\n  const anchors = new Set();\n  visit(root, {\n    Value(_key, node) {\n      if (node.anchor) anchors.add(node.anchor);\n    }\n  });\n  return anchors;\n}\n/** Find a new anchor name with the given `prefix` and a one-indexed suffix. */\nfunction findNewAnchor(prefix, exclude) {\n  for (let i = 1; true; ++i) {\n    const name = `${prefix}${i}`;\n    if (!exclude.has(name)) return name;\n  }\n}\nfunction createNodeAnchors(doc, prefix) {\n  const aliasObjects = [];\n  const sourceObjects = new Map();\n  let prevAnchors = null;\n  return {\n    onAnchor: source => {\n      aliasObjects.push(source);\n      if (!prevAnchors) prevAnchors = anchorNames(doc);\n      const anchor = findNewAnchor(prefix, prevAnchors);\n      prevAnchors.add(anchor);\n      return anchor;\n    },\n    /**\n     * With circular references, the source node is only resolved after all\n     * of its child nodes are. This is why anchors are set only after all of\n     * the nodes have been created.\n     */\n    setAnchors: () => {\n      for (const source of aliasObjects) {\n        const ref = sourceObjects.get(source);\n        if (typeof ref === 'object' && ref.anchor && (isScalar(ref.node) || isCollection(ref.node))) {\n          ref.node.anchor = ref.anchor;\n        } else {\n          const error = new Error('Failed to resolve repeated object (this should not happen)');\n          error.source = source;\n          throw error;\n        }\n      }\n    },\n    sourceObjects\n  };\n}\nexport { anchorIsValid, anchorNames, createNodeAnchors, findNewAnchor };","/**\n * Applies the JSON.parse reviver algorithm as defined in the ECMA-262 spec,\n * in section 24.5.1.1 \"Runtime Semantics: InternalizeJSONProperty\" of the\n * 2021 edition: https://tc39.es/ecma262/#sec-json.parse\n *\n * Includes extensions for handling Map and Set objects.\n */\nfunction applyReviver(reviver, obj, key, val) {\n  if (val && typeof val === 'object') {\n    if (Array.isArray(val)) {\n      for (let i = 0, len = val.length; i < len; ++i) {\n        const v0 = val[i];\n        const v1 = applyReviver(reviver, val, String(i), v0);\n        // eslint-disable-next-line @typescript-eslint/no-array-delete\n        if (v1 === undefined) delete val[i];else if (v1 !== v0) val[i] = v1;\n      }\n    } else if (val instanceof Map) {\n      for (const k of Array.from(val.keys())) {\n        const v0 = val.get(k);\n        const v1 = applyReviver(reviver, val, k, v0);\n        if (v1 === undefined) val.delete(k);else if (v1 !== v0) val.set(k, v1);\n      }\n    } else if (val instanceof Set) {\n      for (const v0 of Array.from(val)) {\n        const v1 = applyReviver(reviver, val, v0, v0);\n        if (v1 === undefined) val.delete(v0);else if (v1 !== v0) {\n          val.delete(v0);\n          val.add(v1);\n        }\n      }\n    } else {\n      for (const [k, v0] of Object.entries(val)) {\n        const v1 = applyReviver(reviver, val, k, v0);\n        if (v1 === undefined) delete val[k];else if (v1 !== v0) val[k] = v1;\n      }\n    }\n  }\n  return reviver.call(obj, key, val);\n}\nexport { applyReviver };","import { hasAnchor } from './identity.js';\n\n/**\n * Recursively convert any node or its contents to native JavaScript\n *\n * @param value - The input value\n * @param arg - If `value` defines a `toJSON()` method, use this\n *   as its first argument\n * @param ctx - Conversion context, originally set in Document#toJS(). If\n *   `{ keep: true }` is not set, output should be suitable for JSON\n *   stringification.\n */\nfunction toJS(value, arg, ctx) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n  if (Array.isArray(value)) return value.map((v, i) => toJS(v, String(i), ctx));\n  if (value && typeof value.toJSON === 'function') {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n    if (!ctx || !hasAnchor(value)) return value.toJSON(arg, ctx);\n    const data = {\n      aliasCount: 0,\n      count: 1,\n      res: undefined\n    };\n    ctx.anchors.set(value, data);\n    ctx.onCreate = res => {\n      data.res = res;\n      delete ctx.onCreate;\n    };\n    const res = value.toJSON(arg, ctx);\n    if (ctx.onCreate) ctx.onCreate(res);\n    return res;\n  }\n  if (typeof value === 'bigint' && !ctx?.keep) return Number(value);\n  return value;\n}\nexport { toJS };","import { applyReviver } from '../doc/applyReviver.js';\nimport { NODE_TYPE, isDocument } from './identity.js';\nimport { toJS } from './toJS.js';\nclass NodeBase {\n  constructor(type) {\n    Object.defineProperty(this, NODE_TYPE, {\n      value: type\n    });\n  }\n  /** Create a copy of this node.  */\n  clone() {\n    const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n    if (this.range) copy.range = this.range.slice();\n    return copy;\n  }\n  /** A plain JavaScript representation of this node. */\n  toJS(doc, {\n    mapAsMap,\n    maxAliasCount,\n    onAnchor,\n    reviver\n  } = {}) {\n    if (!isDocument(doc)) throw new TypeError('A document argument is required');\n    const ctx = {\n      anchors: new Map(),\n      doc,\n      keep: true,\n      mapAsMap: mapAsMap === true,\n      mapKeyWarned: false,\n      maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n    };\n    const res = toJS(this, '', ctx);\n    if (typeof onAnchor === 'function') for (const {\n      count,\n      res\n    } of ctx.anchors.values()) onAnchor(res, count);\n    return typeof reviver === 'function' ? applyReviver(reviver, {\n      '': res\n    }, '', res) : res;\n  }\n}\nexport { NodeBase };","import { anchorIsValid } from '../doc/anchors.js';\nimport { visit } from '../visit.js';\nimport { ALIAS, isAlias, isCollection, isPair } from './identity.js';\nimport { NodeBase } from './Node.js';\nimport { toJS } from './toJS.js';\nclass Alias extends NodeBase {\n  constructor(source) {\n    super(ALIAS);\n    this.source = source;\n    Object.defineProperty(this, 'tag', {\n      set() {\n        throw new Error('Alias nodes cannot have tags');\n      }\n    });\n  }\n  /**\n   * Resolve the value of this alias within `doc`, finding the last\n   * instance of the `source` anchor before this node.\n   */\n  resolve(doc) {\n    let found = undefined;\n    visit(doc, {\n      Node: (_key, node) => {\n        if (node === this) return visit.BREAK;\n        if (node.anchor === this.source) found = node;\n      }\n    });\n    return found;\n  }\n  toJSON(_arg, ctx) {\n    if (!ctx) return {\n      source: this.source\n    };\n    const {\n      anchors,\n      doc,\n      maxAliasCount\n    } = ctx;\n    const source = this.resolve(doc);\n    if (!source) {\n      const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n      throw new ReferenceError(msg);\n    }\n    let data = anchors.get(source);\n    if (!data) {\n      // Resolve anchors for Node.prototype.toJS()\n      toJS(source, null, ctx);\n      data = anchors.get(source);\n    }\n    /* istanbul ignore if */\n    if (!data || data.res === undefined) {\n      const msg = 'This should not happen: Alias anchor was not resolved?';\n      throw new ReferenceError(msg);\n    }\n    if (maxAliasCount >= 0) {\n      data.count += 1;\n      if (data.aliasCount === 0) data.aliasCount = getAliasCount(doc, source, anchors);\n      if (data.count * data.aliasCount > maxAliasCount) {\n        const msg = 'Excessive alias count indicates a resource exhaustion attack';\n        throw new ReferenceError(msg);\n      }\n    }\n    return data.res;\n  }\n  toString(ctx, _onComment, _onChompKeep) {\n    const src = `*${this.source}`;\n    if (ctx) {\n      anchorIsValid(this.source);\n      if (ctx.options.verifyAliasOrder && !ctx.anchors.has(this.source)) {\n        const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n        throw new Error(msg);\n      }\n      if (ctx.implicitKey) return `${src} `;\n    }\n    return src;\n  }\n}\nfunction getAliasCount(doc, node, anchors) {\n  if (isAlias(node)) {\n    const source = node.resolve(doc);\n    const anchor = anchors && source && anchors.get(source);\n    return anchor ? anchor.count * anchor.aliasCount : 0;\n  } else if (isCollection(node)) {\n    let count = 0;\n    for (const item of node.items) {\n      const c = getAliasCount(doc, item, anchors);\n      if (c > count) count = c;\n    }\n    return count;\n  } else if (isPair(node)) {\n    const kc = getAliasCount(doc, node.key, anchors);\n    const vc = getAliasCount(doc, node.value, anchors);\n    return Math.max(kc, vc);\n  }\n  return 1;\n}\nexport { Alias };","import { SCALAR } from './identity.js';\nimport { NodeBase } from './Node.js';\nimport { toJS } from './toJS.js';\nconst isScalarValue = value => !value || typeof value !== 'function' && typeof value !== 'object';\nclass Scalar extends NodeBase {\n  constructor(value) {\n    super(SCALAR);\n    this.value = value;\n  }\n  toJSON(arg, ctx) {\n    return ctx?.keep ? this.value : toJS(this.value, arg, ctx);\n  }\n  toString() {\n    return String(this.value);\n  }\n}\nScalar.BLOCK_FOLDED = 'BLOCK_FOLDED';\nScalar.BLOCK_LITERAL = 'BLOCK_LITERAL';\nScalar.PLAIN = 'PLAIN';\nScalar.QUOTE_DOUBLE = 'QUOTE_DOUBLE';\nScalar.QUOTE_SINGLE = 'QUOTE_SINGLE';\nexport { Scalar, isScalarValue };","import { Alias } from '../nodes/Alias.js';\nimport { isNode, isPair, MAP, SEQ, isDocument } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nconst defaultTagPrefix = 'tag:yaml.org,2002:';\nfunction findTagObject(value, tagName, tags) {\n  if (tagName) {\n    const match = tags.filter(t => t.tag === tagName);\n    const tagObj = match.find(t => !t.format) ?? match[0];\n    if (!tagObj) throw new Error(`Tag ${tagName} not found`);\n    return tagObj;\n  }\n  return tags.find(t => t.identify?.(value) && !t.format);\n}\nfunction createNode(value, tagName, ctx) {\n  if (isDocument(value)) value = value.contents;\n  if (isNode(value)) return value;\n  if (isPair(value)) {\n    const map = ctx.schema[MAP].createNode?.(ctx.schema, null, ctx);\n    map.items.push(value);\n    return map;\n  }\n  if (value instanceof String || value instanceof Number || value instanceof Boolean || typeof BigInt !== 'undefined' && value instanceof BigInt // not supported everywhere\n  ) {\n    // https://tc39.es/ecma262/#sec-serializejsonproperty\n    value = value.valueOf();\n  }\n  const {\n    aliasDuplicateObjects,\n    onAnchor,\n    onTagObj,\n    schema,\n    sourceObjects\n  } = ctx;\n  // Detect duplicate references to the same object & use Alias nodes for all\n  // after first. The `ref` wrapper allows for circular references to resolve.\n  let ref = undefined;\n  if (aliasDuplicateObjects && value && typeof value === 'object') {\n    ref = sourceObjects.get(value);\n    if (ref) {\n      if (!ref.anchor) ref.anchor = onAnchor(value);\n      return new Alias(ref.anchor);\n    } else {\n      ref = {\n        anchor: null,\n        node: null\n      };\n      sourceObjects.set(value, ref);\n    }\n  }\n  if (tagName?.startsWith('!!')) tagName = defaultTagPrefix + tagName.slice(2);\n  let tagObj = findTagObject(value, tagName, schema.tags);\n  if (!tagObj) {\n    if (value && typeof value.toJSON === 'function') {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      value = value.toJSON();\n    }\n    if (!value || typeof value !== 'object') {\n      const node = new Scalar(value);\n      if (ref) ref.node = node;\n      return node;\n    }\n    tagObj = value instanceof Map ? schema[MAP] : Symbol.iterator in Object(value) ? schema[SEQ] : schema[MAP];\n  }\n  if (onTagObj) {\n    onTagObj(tagObj);\n    delete ctx.onTagObj;\n  }\n  const node = tagObj?.createNode ? tagObj.createNode(ctx.schema, value, ctx) : typeof tagObj?.nodeClass?.from === 'function' ? tagObj.nodeClass.from(ctx.schema, value, ctx) : new Scalar(value);\n  if (tagName) node.tag = tagName;else if (!tagObj.default) node.tag = tagObj.tag;\n  if (ref) ref.node = node;\n  return node;\n}\nexport { createNode };","import { createNode } from '../doc/createNode.js';\nimport { isNode, isPair, isCollection, isScalar } from './identity.js';\nimport { NodeBase } from './Node.js';\nfunction collectionFromPath(schema, path, value) {\n  let v = value;\n  for (let i = path.length - 1; i >= 0; --i) {\n    const k = path[i];\n    if (typeof k === 'number' && Number.isInteger(k) && k >= 0) {\n      const a = [];\n      a[k] = v;\n      v = a;\n    } else {\n      v = new Map([[k, v]]);\n    }\n  }\n  return createNode(v, undefined, {\n    aliasDuplicateObjects: false,\n    keepUndefined: false,\n    onAnchor: () => {\n      throw new Error('This should not happen, please report a bug.');\n    },\n    schema,\n    sourceObjects: new Map()\n  });\n}\n// Type guard is intentionally a little wrong so as to be more useful,\n// as it does not cover untypable empty non-string iterables (e.g. []).\nconst isEmptyPath = path => path == null || typeof path === 'object' && !!path[Symbol.iterator]().next().done;\nclass Collection extends NodeBase {\n  constructor(type, schema) {\n    super(type);\n    Object.defineProperty(this, 'schema', {\n      value: schema,\n      configurable: true,\n      enumerable: false,\n      writable: true\n    });\n  }\n  /**\n   * Create a copy of this collection.\n   *\n   * @param schema - If defined, overwrites the original's schema\n   */\n  clone(schema) {\n    const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n    if (schema) copy.schema = schema;\n    copy.items = copy.items.map(it => isNode(it) || isPair(it) ? it.clone(schema) : it);\n    if (this.range) copy.range = this.range.slice();\n    return copy;\n  }\n  /**\n   * Adds a value to the collection. For `!!map` and `!!omap` the value must\n   * be a Pair instance or a `{ key, value }` object, which may not have a key\n   * that already exists in the map.\n   */\n  addIn(path, value) {\n    if (isEmptyPath(path)) this.add(value);else {\n      const [key, ...rest] = path;\n      const node = this.get(key, true);\n      if (isCollection(node)) node.addIn(rest, value);else if (node === undefined && this.schema) this.set(key, collectionFromPath(this.schema, rest, value));else throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n    }\n  }\n  /**\n   * Removes a value from the collection.\n   * @returns `true` if the item was found and removed.\n   */\n  deleteIn(path) {\n    const [key, ...rest] = path;\n    if (rest.length === 0) return this.delete(key);\n    const node = this.get(key, true);\n    if (isCollection(node)) return node.deleteIn(rest);else throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n  }\n  /**\n   * Returns item at `key`, or `undefined` if not found. By default unwraps\n   * scalar values from their surrounding node; to disable set `keepScalar` to\n   * `true` (collections are always returned intact).\n   */\n  getIn(path, keepScalar) {\n    const [key, ...rest] = path;\n    const node = this.get(key, true);\n    if (rest.length === 0) return !keepScalar && isScalar(node) ? node.value : node;else return isCollection(node) ? node.getIn(rest, keepScalar) : undefined;\n  }\n  hasAllNullValues(allowScalar) {\n    return this.items.every(node => {\n      if (!isPair(node)) return false;\n      const n = node.value;\n      return n == null || allowScalar && isScalar(n) && n.value == null && !n.commentBefore && !n.comment && !n.tag;\n    });\n  }\n  /**\n   * Checks if the collection includes a value with the key `key`.\n   */\n  hasIn(path) {\n    const [key, ...rest] = path;\n    if (rest.length === 0) return this.has(key);\n    const node = this.get(key, true);\n    return isCollection(node) ? node.hasIn(rest) : false;\n  }\n  /**\n   * Sets a value in this collection. For `!!set`, `value` needs to be a\n   * boolean to add/remove the item from the set.\n   */\n  setIn(path, value) {\n    const [key, ...rest] = path;\n    if (rest.length === 0) {\n      this.set(key, value);\n    } else {\n      const node = this.get(key, true);\n      if (isCollection(node)) node.setIn(rest, value);else if (node === undefined && this.schema) this.set(key, collectionFromPath(this.schema, rest, value));else throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n    }\n  }\n}\nexport { Collection, collectionFromPath, isEmptyPath };","/**\n * Stringifies a comment.\n *\n * Empty comment lines are left empty,\n * lines consisting of a single space are replaced by `#`,\n * and all other lines are prefixed with a `#`.\n */\nconst stringifyComment = str => str.replace(/^(?!$)(?: $)?/gm, '#');\nfunction indentComment(comment, indent) {\n  if (/^\\n+$/.test(comment)) return comment.substring(1);\n  return indent ? comment.replace(/^(?! *$)/gm, indent) : comment;\n}\nconst lineComment = (str, indent, comment) => str.endsWith('\\n') ? indentComment(comment, indent) : comment.includes('\\n') ? '\\n' + indentComment(comment, indent) : (str.endsWith(' ') ? '' : ' ') + comment;\nexport { indentComment, lineComment, stringifyComment };","const FOLD_FLOW = 'flow';\nconst FOLD_BLOCK = 'block';\nconst FOLD_QUOTED = 'quoted';\n/**\n * Tries to keep input at up to `lineWidth` characters, splitting only on spaces\n * not followed by newlines or spaces unless `mode` is `'quoted'`. Lines are\n * terminated with `\\n` and started with `indent`.\n */\nfunction foldFlowLines(text, indent, mode = 'flow', {\n  indentAtStart,\n  lineWidth = 80,\n  minContentWidth = 20,\n  onFold,\n  onOverflow\n} = {}) {\n  if (!lineWidth || lineWidth < 0) return text;\n  if (lineWidth < minContentWidth) minContentWidth = 0;\n  const endStep = Math.max(1 + minContentWidth, 1 + lineWidth - indent.length);\n  if (text.length <= endStep) return text;\n  const folds = [];\n  const escapedFolds = {};\n  let end = lineWidth - indent.length;\n  if (typeof indentAtStart === 'number') {\n    if (indentAtStart > lineWidth - Math.max(2, minContentWidth)) folds.push(0);else end = lineWidth - indentAtStart;\n  }\n  let split = undefined;\n  let prev = undefined;\n  let overflow = false;\n  let i = -1;\n  let escStart = -1;\n  let escEnd = -1;\n  if (mode === FOLD_BLOCK) {\n    i = consumeMoreIndentedLines(text, i, indent.length);\n    if (i !== -1) end = i + endStep;\n  }\n  for (let ch; ch = text[i += 1];) {\n    if (mode === FOLD_QUOTED && ch === '\\\\') {\n      escStart = i;\n      switch (text[i + 1]) {\n        case 'x':\n          i += 3;\n          break;\n        case 'u':\n          i += 5;\n          break;\n        case 'U':\n          i += 9;\n          break;\n        default:\n          i += 1;\n      }\n      escEnd = i;\n    }\n    if (ch === '\\n') {\n      if (mode === FOLD_BLOCK) i = consumeMoreIndentedLines(text, i, indent.length);\n      end = i + indent.length + endStep;\n      split = undefined;\n    } else {\n      if (ch === ' ' && prev && prev !== ' ' && prev !== '\\n' && prev !== '\\t') {\n        // space surrounded by non-space can be replaced with newline + indent\n        const next = text[i + 1];\n        if (next && next !== ' ' && next !== '\\n' && next !== '\\t') split = i;\n      }\n      if (i >= end) {\n        if (split) {\n          folds.push(split);\n          end = split + endStep;\n          split = undefined;\n        } else if (mode === FOLD_QUOTED) {\n          // white-space collected at end may stretch past lineWidth\n          while (prev === ' ' || prev === '\\t') {\n            prev = ch;\n            ch = text[i += 1];\n            overflow = true;\n          }\n          // Account for newline escape, but don't break preceding escape\n          const j = i > escEnd + 1 ? i - 2 : escStart - 1;\n          // Bail out if lineWidth & minContentWidth are shorter than an escape string\n          if (escapedFolds[j]) return text;\n          folds.push(j);\n          escapedFolds[j] = true;\n          end = j + endStep;\n          split = undefined;\n        } else {\n          overflow = true;\n        }\n      }\n    }\n    prev = ch;\n  }\n  if (overflow && onOverflow) onOverflow();\n  if (folds.length === 0) return text;\n  if (onFold) onFold();\n  let res = text.slice(0, folds[0]);\n  for (let i = 0; i < folds.length; ++i) {\n    const fold = folds[i];\n    const end = folds[i + 1] || text.length;\n    if (fold === 0) res = `\\n${indent}${text.slice(0, end)}`;else {\n      if (mode === FOLD_QUOTED && escapedFolds[fold]) res += `${text[fold]}\\\\`;\n      res += `\\n${indent}${text.slice(fold + 1, end)}`;\n    }\n  }\n  return res;\n}\n/**\n * Presumes `i + 1` is at the start of a line\n * @returns index of last newline in more-indented block\n */\nfunction consumeMoreIndentedLines(text, i, indent) {\n  let end = i;\n  let start = i + 1;\n  let ch = text[start];\n  while (ch === ' ' || ch === '\\t') {\n    if (i < start + indent) {\n      ch = text[++i];\n    } else {\n      do {\n        ch = text[++i];\n      } while (ch && ch !== '\\n');\n      end = i;\n      start = i + 1;\n      ch = text[start];\n    }\n  }\n  return end;\n}\nexport { FOLD_BLOCK, FOLD_FLOW, FOLD_QUOTED, foldFlowLines };","import { Scalar } from '../nodes/Scalar.js';\nimport { foldFlowLines, FOLD_QUOTED, FOLD_FLOW, FOLD_BLOCK } from './foldFlowLines.js';\nconst getFoldOptions = (ctx, isBlock) => ({\n  indentAtStart: isBlock ? ctx.indent.length : ctx.indentAtStart,\n  lineWidth: ctx.options.lineWidth,\n  minContentWidth: ctx.options.minContentWidth\n});\n// Also checks for lines starting with %, as parsing the output as YAML 1.1 will\n// presume that's starting a new document.\nconst containsDocumentMarker = str => /^(%|---|\\.\\.\\.)/m.test(str);\nfunction lineLengthOverLimit(str, lineWidth, indentLength) {\n  if (!lineWidth || lineWidth < 0) return false;\n  const limit = lineWidth - indentLength;\n  const strLen = str.length;\n  if (strLen <= limit) return false;\n  for (let i = 0, start = 0; i < strLen; ++i) {\n    if (str[i] === '\\n') {\n      if (i - start > limit) return true;\n      start = i + 1;\n      if (strLen - start <= limit) return false;\n    }\n  }\n  return true;\n}\nfunction doubleQuotedString(value, ctx) {\n  const json = JSON.stringify(value);\n  if (ctx.options.doubleQuotedAsJSON) return json;\n  const {\n    implicitKey\n  } = ctx;\n  const minMultiLineLength = ctx.options.doubleQuotedMinMultiLineLength;\n  const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n  let str = '';\n  let start = 0;\n  for (let i = 0, ch = json[i]; ch; ch = json[++i]) {\n    if (ch === ' ' && json[i + 1] === '\\\\' && json[i + 2] === 'n') {\n      // space before newline needs to be escaped to not be folded\n      str += json.slice(start, i) + '\\\\ ';\n      i += 1;\n      start = i;\n      ch = '\\\\';\n    }\n    if (ch === '\\\\') switch (json[i + 1]) {\n      case 'u':\n        {\n          str += json.slice(start, i);\n          const code = json.substr(i + 2, 4);\n          switch (code) {\n            case '0000':\n              str += '\\\\0';\n              break;\n            case '0007':\n              str += '\\\\a';\n              break;\n            case '000b':\n              str += '\\\\v';\n              break;\n            case '001b':\n              str += '\\\\e';\n              break;\n            case '0085':\n              str += '\\\\N';\n              break;\n            case '00a0':\n              str += '\\\\_';\n              break;\n            case '2028':\n              str += '\\\\L';\n              break;\n            case '2029':\n              str += '\\\\P';\n              break;\n            default:\n              if (code.substr(0, 2) === '00') str += '\\\\x' + code.substr(2);else str += json.substr(i, 6);\n          }\n          i += 5;\n          start = i + 1;\n        }\n        break;\n      case 'n':\n        if (implicitKey || json[i + 2] === '\"' || json.length < minMultiLineLength) {\n          i += 1;\n        } else {\n          // folding will eat first newline\n          str += json.slice(start, i) + '\\n\\n';\n          while (json[i + 2] === '\\\\' && json[i + 3] === 'n' && json[i + 4] !== '\"') {\n            str += '\\n';\n            i += 2;\n          }\n          str += indent;\n          // space after newline needs to be escaped to not be folded\n          if (json[i + 2] === ' ') str += '\\\\';\n          i += 1;\n          start = i + 1;\n        }\n        break;\n      default:\n        i += 1;\n    }\n  }\n  str = start ? str + json.slice(start) : json;\n  return implicitKey ? str : foldFlowLines(str, indent, FOLD_QUOTED, getFoldOptions(ctx, false));\n}\nfunction singleQuotedString(value, ctx) {\n  if (ctx.options.singleQuote === false || ctx.implicitKey && value.includes('\\n') || /[ \\t]\\n|\\n[ \\t]/.test(value) // single quoted string can't have leading or trailing whitespace around newline\n  ) return doubleQuotedString(value, ctx);\n  const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n  const res = \"'\" + value.replace(/'/g, \"''\").replace(/\\n+/g, `$&\\n${indent}`) + \"'\";\n  return ctx.implicitKey ? res : foldFlowLines(res, indent, FOLD_FLOW, getFoldOptions(ctx, false));\n}\nfunction quotedString(value, ctx) {\n  const {\n    singleQuote\n  } = ctx.options;\n  let qs;\n  if (singleQuote === false) qs = doubleQuotedString;else {\n    const hasDouble = value.includes('\"');\n    const hasSingle = value.includes(\"'\");\n    if (hasDouble && !hasSingle) qs = singleQuotedString;else if (hasSingle && !hasDouble) qs = doubleQuotedString;else qs = singleQuote ? singleQuotedString : doubleQuotedString;\n  }\n  return qs(value, ctx);\n}\n// The negative lookbehind avoids a polynomial search,\n// but isn't supported yet on Safari: https://caniuse.com/js-regexp-lookbehind\nlet blockEndNewlines;\ntry {\n  blockEndNewlines = new RegExp('(^|(?<!\\n))\\n+(?!\\n|$)', 'g');\n} catch {\n  blockEndNewlines = /\\n+(?!\\n|$)/g;\n}\nfunction blockString({\n  comment,\n  type,\n  value\n}, ctx, onComment, onChompKeep) {\n  const {\n    blockQuote,\n    commentString,\n    lineWidth\n  } = ctx.options;\n  // 1. Block can't end in whitespace unless the last line is non-empty.\n  // 2. Strings consisting of only whitespace are best rendered explicitly.\n  if (!blockQuote || /\\n[\\t ]+$/.test(value) || /^\\s*$/.test(value)) {\n    return quotedString(value, ctx);\n  }\n  const indent = ctx.indent || (ctx.forceBlockIndent || containsDocumentMarker(value) ? '  ' : '');\n  const literal = blockQuote === 'literal' ? true : blockQuote === 'folded' || type === Scalar.BLOCK_FOLDED ? false : type === Scalar.BLOCK_LITERAL ? true : !lineLengthOverLimit(value, lineWidth, indent.length);\n  if (!value) return literal ? '|\\n' : '>\\n';\n  // determine chomping from whitespace at value end\n  let chomp;\n  let endStart;\n  for (endStart = value.length; endStart > 0; --endStart) {\n    const ch = value[endStart - 1];\n    if (ch !== '\\n' && ch !== '\\t' && ch !== ' ') break;\n  }\n  let end = value.substring(endStart);\n  const endNlPos = end.indexOf('\\n');\n  if (endNlPos === -1) {\n    chomp = '-'; // strip\n  } else if (value === end || endNlPos !== end.length - 1) {\n    chomp = '+'; // keep\n    if (onChompKeep) onChompKeep();\n  } else {\n    chomp = ''; // clip\n  }\n  if (end) {\n    value = value.slice(0, -end.length);\n    if (end[end.length - 1] === '\\n') end = end.slice(0, -1);\n    end = end.replace(blockEndNewlines, `$&${indent}`);\n  }\n  // determine indent indicator from whitespace at value start\n  let startWithSpace = false;\n  let startEnd;\n  let startNlPos = -1;\n  for (startEnd = 0; startEnd < value.length; ++startEnd) {\n    const ch = value[startEnd];\n    if (ch === ' ') startWithSpace = true;else if (ch === '\\n') startNlPos = startEnd;else break;\n  }\n  let start = value.substring(0, startNlPos < startEnd ? startNlPos + 1 : startEnd);\n  if (start) {\n    value = value.substring(start.length);\n    start = start.replace(/\\n+/g, `$&${indent}`);\n  }\n  const indentSize = indent ? '2' : '1'; // root is at -1\n  // Leading | or > is added later\n  let header = (startWithSpace ? indentSize : '') + chomp;\n  if (comment) {\n    header += ' ' + commentString(comment.replace(/ ?[\\r\\n]+/g, ' '));\n    if (onComment) onComment();\n  }\n  if (!literal) {\n    const foldedValue = value.replace(/\\n+/g, '\\n$&').replace(/(?:^|\\n)([\\t ].*)(?:([\\n\\t ]*)\\n(?![\\n\\t ]))?/g, '$1$2') // more-indented lines aren't folded\n    //                ^ more-ind. ^ empty     ^ capture next empty lines only at end of indent\n    .replace(/\\n+/g, `$&${indent}`);\n    let literalFallback = false;\n    const foldOptions = getFoldOptions(ctx, true);\n    if (blockQuote !== 'folded' && type !== Scalar.BLOCK_FOLDED) {\n      foldOptions.onOverflow = () => {\n        literalFallback = true;\n      };\n    }\n    const body = foldFlowLines(`${start}${foldedValue}${end}`, indent, FOLD_BLOCK, foldOptions);\n    if (!literalFallback) return `>${header}\\n${indent}${body}`;\n  }\n  value = value.replace(/\\n+/g, `$&${indent}`);\n  return `|${header}\\n${indent}${start}${value}${end}`;\n}\nfunction plainString(item, ctx, onComment, onChompKeep) {\n  const {\n    type,\n    value\n  } = item;\n  const {\n    actualString,\n    implicitKey,\n    indent,\n    indentStep,\n    inFlow\n  } = ctx;\n  if (implicitKey && value.includes('\\n') || inFlow && /[[\\]{},]/.test(value)) {\n    return quotedString(value, ctx);\n  }\n  if (!value || /^[\\n\\t ,[\\]{}#&*!|>'\"%@`]|^[?-]$|^[?-][ \\t]|[\\n:][ \\t]|[ \\t]\\n|[\\n\\t ]#|[\\n\\t :]$/.test(value)) {\n    // not allowed:\n    // - empty string, '-' or '?'\n    // - start with an indicator character (except [?:-]) or /[?-] /\n    // - '\\n ', ': ' or ' \\n' anywhere\n    // - '#' not preceded by a non-space char\n    // - end with ' ' or ':'\n    return implicitKey || inFlow || !value.includes('\\n') ? quotedString(value, ctx) : blockString(item, ctx, onComment, onChompKeep);\n  }\n  if (!implicitKey && !inFlow && type !== Scalar.PLAIN && value.includes('\\n')) {\n    // Where allowed & type not set explicitly, prefer block style for multiline strings\n    return blockString(item, ctx, onComment, onChompKeep);\n  }\n  if (containsDocumentMarker(value)) {\n    if (indent === '') {\n      ctx.forceBlockIndent = true;\n      return blockString(item, ctx, onComment, onChompKeep);\n    } else if (implicitKey && indent === indentStep) {\n      return quotedString(value, ctx);\n    }\n  }\n  const str = value.replace(/\\n+/g, `$&\\n${indent}`);\n  // Verify that output will be parsed as a string, as e.g. plain numbers and\n  // booleans get parsed with those types in v1.2 (e.g. '42', 'true' & '0.9e-3'),\n  // and others in v1.1.\n  if (actualString) {\n    const test = tag => tag.default && tag.tag !== 'tag:yaml.org,2002:str' && tag.test?.test(str);\n    const {\n      compat,\n      tags\n    } = ctx.doc.schema;\n    if (tags.some(test) || compat?.some(test)) return quotedString(value, ctx);\n  }\n  return implicitKey ? str : foldFlowLines(str, indent, FOLD_FLOW, getFoldOptions(ctx, false));\n}\nfunction stringifyString(item, ctx, onComment, onChompKeep) {\n  const {\n    implicitKey,\n    inFlow\n  } = ctx;\n  const ss = typeof item.value === 'string' ? item : Object.assign({}, item, {\n    value: String(item.value)\n  });\n  let {\n    type\n  } = item;\n  if (type !== Scalar.QUOTE_DOUBLE) {\n    // force double quotes on control characters & unpaired surrogates\n    if (/[\\x00-\\x08\\x0b-\\x1f\\x7f-\\x9f\\u{D800}-\\u{DFFF}]/u.test(ss.value)) type = Scalar.QUOTE_DOUBLE;\n  }\n  const _stringify = _type => {\n    switch (_type) {\n      case Scalar.BLOCK_FOLDED:\n      case Scalar.BLOCK_LITERAL:\n        return implicitKey || inFlow ? quotedString(ss.value, ctx) // blocks are not valid inside flow containers\n        : blockString(ss, ctx, onComment, onChompKeep);\n      case Scalar.QUOTE_DOUBLE:\n        return doubleQuotedString(ss.value, ctx);\n      case Scalar.QUOTE_SINGLE:\n        return singleQuotedString(ss.value, ctx);\n      case Scalar.PLAIN:\n        return plainString(ss, ctx, onComment, onChompKeep);\n      default:\n        return null;\n    }\n  };\n  let res = _stringify(type);\n  if (res === null) {\n    const {\n      defaultKeyType,\n      defaultStringType\n    } = ctx.options;\n    const t = implicitKey && defaultKeyType || defaultStringType;\n    res = _stringify(t);\n    if (res === null) throw new Error(`Unsupported default string type ${t}`);\n  }\n  return res;\n}\nexport { stringifyString };","import { anchorIsValid } from '../doc/anchors.js';\nimport { isPair, isAlias, isNode, isScalar, isCollection } from '../nodes/identity.js';\nimport { stringifyComment } from './stringifyComment.js';\nimport { stringifyString } from './stringifyString.js';\nfunction createStringifyContext(doc, options) {\n  const opt = Object.assign({\n    blockQuote: true,\n    commentString: stringifyComment,\n    defaultKeyType: null,\n    defaultStringType: 'PLAIN',\n    directives: null,\n    doubleQuotedAsJSON: false,\n    doubleQuotedMinMultiLineLength: 40,\n    falseStr: 'false',\n    flowCollectionPadding: true,\n    indentSeq: true,\n    lineWidth: 80,\n    minContentWidth: 20,\n    nullStr: 'null',\n    simpleKeys: false,\n    singleQuote: null,\n    trueStr: 'true',\n    verifyAliasOrder: true\n  }, doc.schema.toStringOptions, options);\n  let inFlow;\n  switch (opt.collectionStyle) {\n    case 'block':\n      inFlow = false;\n      break;\n    case 'flow':\n      inFlow = true;\n      break;\n    default:\n      inFlow = null;\n  }\n  return {\n    anchors: new Set(),\n    doc,\n    flowCollectionPadding: opt.flowCollectionPadding ? ' ' : '',\n    indent: '',\n    indentStep: typeof opt.indent === 'number' ? ' '.repeat(opt.indent) : '  ',\n    inFlow,\n    options: opt\n  };\n}\nfunction getTagObject(tags, item) {\n  if (item.tag) {\n    const match = tags.filter(t => t.tag === item.tag);\n    if (match.length > 0) return match.find(t => t.format === item.format) ?? match[0];\n  }\n  let tagObj = undefined;\n  let obj;\n  if (isScalar(item)) {\n    obj = item.value;\n    let match = tags.filter(t => t.identify?.(obj));\n    if (match.length > 1) {\n      const testMatch = match.filter(t => t.test);\n      if (testMatch.length > 0) match = testMatch;\n    }\n    tagObj = match.find(t => t.format === item.format) ?? match.find(t => !t.format);\n  } else {\n    obj = item;\n    tagObj = tags.find(t => t.nodeClass && obj instanceof t.nodeClass);\n  }\n  if (!tagObj) {\n    const name = obj?.constructor?.name ?? typeof obj;\n    throw new Error(`Tag not resolved for ${name} value`);\n  }\n  return tagObj;\n}\n// needs to be called before value stringifier to allow for circular anchor refs\nfunction stringifyProps(node, tagObj, {\n  anchors,\n  doc\n}) {\n  if (!doc.directives) return '';\n  const props = [];\n  const anchor = (isScalar(node) || isCollection(node)) && node.anchor;\n  if (anchor && anchorIsValid(anchor)) {\n    anchors.add(anchor);\n    props.push(`&${anchor}`);\n  }\n  const tag = node.tag ? node.tag : tagObj.default ? null : tagObj.tag;\n  if (tag) props.push(doc.directives.tagString(tag));\n  return props.join(' ');\n}\nfunction stringify(item, ctx, onComment, onChompKeep) {\n  if (isPair(item)) return item.toString(ctx, onComment, onChompKeep);\n  if (isAlias(item)) {\n    if (ctx.doc.directives) return item.toString(ctx);\n    if (ctx.resolvedAliases?.has(item)) {\n      throw new TypeError(`Cannot stringify circular structure without alias nodes`);\n    } else {\n      if (ctx.resolvedAliases) ctx.resolvedAliases.add(item);else ctx.resolvedAliases = new Set([item]);\n      item = item.resolve(ctx.doc);\n    }\n  }\n  let tagObj = undefined;\n  const node = isNode(item) ? item : ctx.doc.createNode(item, {\n    onTagObj: o => tagObj = o\n  });\n  if (!tagObj) tagObj = getTagObject(ctx.doc.schema.tags, node);\n  const props = stringifyProps(node, tagObj, ctx);\n  if (props.length > 0) ctx.indentAtStart = (ctx.indentAtStart ?? 0) + props.length + 1;\n  const str = typeof tagObj.stringify === 'function' ? tagObj.stringify(node, ctx, onComment, onChompKeep) : isScalar(node) ? stringifyString(node, ctx, onComment, onChompKeep) : node.toString(ctx, onComment, onChompKeep);\n  if (!props) return str;\n  return isScalar(node) || str[0] === '{' || str[0] === '[' ? `${props} ${str}` : `${props}\\n${ctx.indent}${str}`;\n}\nexport { createStringifyContext, stringify };","import { isCollection, isNode, isScalar, isSeq } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\nfunction stringifyPair({\n  key,\n  value\n}, ctx, onComment, onChompKeep) {\n  const {\n    allNullValues,\n    doc,\n    indent,\n    indentStep,\n    options: {\n      commentString,\n      indentSeq,\n      simpleKeys\n    }\n  } = ctx;\n  let keyComment = isNode(key) && key.comment || null;\n  if (simpleKeys) {\n    if (keyComment) {\n      throw new Error('With simple keys, key nodes cannot have comments');\n    }\n    if (isCollection(key) || !isNode(key) && typeof key === 'object') {\n      const msg = 'With simple keys, collection cannot be used as a key value';\n      throw new Error(msg);\n    }\n  }\n  let explicitKey = !simpleKeys && (!key || keyComment && value == null && !ctx.inFlow || isCollection(key) || (isScalar(key) ? key.type === Scalar.BLOCK_FOLDED || key.type === Scalar.BLOCK_LITERAL : typeof key === 'object'));\n  ctx = Object.assign({}, ctx, {\n    allNullValues: false,\n    implicitKey: !explicitKey && (simpleKeys || !allNullValues),\n    indent: indent + indentStep\n  });\n  let keyCommentDone = false;\n  let chompKeep = false;\n  let str = stringify(key, ctx, () => keyCommentDone = true, () => chompKeep = true);\n  if (!explicitKey && !ctx.inFlow && str.length > 1024) {\n    if (simpleKeys) throw new Error('With simple keys, single line scalar must not span more than 1024 characters');\n    explicitKey = true;\n  }\n  if (ctx.inFlow) {\n    if (allNullValues || value == null) {\n      if (keyCommentDone && onComment) onComment();\n      return str === '' ? '?' : explicitKey ? `? ${str}` : str;\n    }\n  } else if (allNullValues && !simpleKeys || value == null && explicitKey) {\n    str = `? ${str}`;\n    if (keyComment && !keyCommentDone) {\n      str += lineComment(str, ctx.indent, commentString(keyComment));\n    } else if (chompKeep && onChompKeep) onChompKeep();\n    return str;\n  }\n  if (keyCommentDone) keyComment = null;\n  if (explicitKey) {\n    if (keyComment) str += lineComment(str, ctx.indent, commentString(keyComment));\n    str = `? ${str}\\n${indent}:`;\n  } else {\n    str = `${str}:`;\n    if (keyComment) str += lineComment(str, ctx.indent, commentString(keyComment));\n  }\n  let vsb, vcb, valueComment;\n  if (isNode(value)) {\n    vsb = !!value.spaceBefore;\n    vcb = value.commentBefore;\n    valueComment = value.comment;\n  } else {\n    vsb = false;\n    vcb = null;\n    valueComment = null;\n    if (value && typeof value === 'object') value = doc.createNode(value);\n  }\n  ctx.implicitKey = false;\n  if (!explicitKey && !keyComment && isScalar(value)) ctx.indentAtStart = str.length + 1;\n  chompKeep = false;\n  if (!indentSeq && indentStep.length >= 2 && !ctx.inFlow && !explicitKey && isSeq(value) && !value.flow && !value.tag && !value.anchor) {\n    // If indentSeq === false, consider '- ' as part of indentation where possible\n    ctx.indent = ctx.indent.substring(2);\n  }\n  let valueCommentDone = false;\n  const valueStr = stringify(value, ctx, () => valueCommentDone = true, () => chompKeep = true);\n  let ws = ' ';\n  if (keyComment || vsb || vcb) {\n    ws = vsb ? '\\n' : '';\n    if (vcb) {\n      const cs = commentString(vcb);\n      ws += `\\n${indentComment(cs, ctx.indent)}`;\n    }\n    if (valueStr === '' && !ctx.inFlow) {\n      if (ws === '\\n') ws = '\\n\\n';\n    } else {\n      ws += `\\n${ctx.indent}`;\n    }\n  } else if (!explicitKey && isCollection(value)) {\n    const vs0 = valueStr[0];\n    const nl0 = valueStr.indexOf('\\n');\n    const hasNewline = nl0 !== -1;\n    const flow = ctx.inFlow ?? value.flow ?? value.items.length === 0;\n    if (hasNewline || !flow) {\n      let hasPropsLine = false;\n      if (hasNewline && (vs0 === '&' || vs0 === '!')) {\n        let sp0 = valueStr.indexOf(' ');\n        if (vs0 === '&' && sp0 !== -1 && sp0 < nl0 && valueStr[sp0 + 1] === '!') {\n          sp0 = valueStr.indexOf(' ', sp0 + 1);\n        }\n        if (sp0 === -1 || nl0 < sp0) hasPropsLine = true;\n      }\n      if (!hasPropsLine) ws = `\\n${ctx.indent}`;\n    }\n  } else if (valueStr === '' || valueStr[0] === '\\n') {\n    ws = '';\n  }\n  str += ws + valueStr;\n  if (ctx.inFlow) {\n    if (valueCommentDone && onComment) onComment();\n  } else if (valueComment && !valueCommentDone) {\n    str += lineComment(str, ctx.indent, commentString(valueComment));\n  } else if (chompKeep && onChompKeep) {\n    onChompKeep();\n  }\n  return str;\n}\nexport { stringifyPair };","function debug(logLevel, ...messages) {\n  if (logLevel === 'debug') console.log(...messages);\n}\nfunction warn(logLevel, warning) {\n  if (logLevel === 'debug' || logLevel === 'warn') {\n    console.warn(warning);\n  }\n}\nexport { debug, warn };","import { isScalar, isAlias, isSeq, isMap } from '../../nodes/identity.js';\nimport { Scalar } from '../../nodes/Scalar.js';\n\n// If the value associated with a merge key is a single mapping node, each of\n// its key/value pairs is inserted into the current mapping, unless the key\n// already exists in it. If the value associated with the merge key is a\n// sequence, then this sequence is expected to contain mapping nodes and each\n// of these nodes is merged in turn according to its order in the sequence.\n// Keys in mapping nodes earlier in the sequence override keys specified in\n// later mapping nodes. -- http://yaml.org/type/merge.html\nconst MERGE_KEY = '<<';\nconst merge = {\n  identify: value => value === MERGE_KEY || typeof value === 'symbol' && value.description === MERGE_KEY,\n  default: 'key',\n  tag: 'tag:yaml.org,2002:merge',\n  test: /^<<$/,\n  resolve: () => Object.assign(new Scalar(Symbol(MERGE_KEY)), {\n    addToJSMap: addMergeToJSMap\n  }),\n  stringify: () => MERGE_KEY\n};\nconst isMergeKey = (ctx, key) => (merge.identify(key) || isScalar(key) && (!key.type || key.type === Scalar.PLAIN) && merge.identify(key.value)) && ctx?.doc.schema.tags.some(tag => tag.tag === merge.tag && tag.default);\nfunction addMergeToJSMap(ctx, map, value) {\n  value = ctx && isAlias(value) ? value.resolve(ctx.doc) : value;\n  if (isSeq(value)) for (const it of value.items) mergeValue(ctx, map, it);else if (Array.isArray(value)) for (const it of value) mergeValue(ctx, map, it);else mergeValue(ctx, map, value);\n}\nfunction mergeValue(ctx, map, value) {\n  const source = ctx && isAlias(value) ? value.resolve(ctx.doc) : value;\n  if (!isMap(source)) throw new Error('Merge sources must be maps or map aliases');\n  const srcMap = source.toJSON(null, ctx, Map);\n  for (const [key, value] of srcMap) {\n    if (map instanceof Map) {\n      if (!map.has(key)) map.set(key, value);\n    } else if (map instanceof Set) {\n      map.add(key);\n    } else if (!Object.prototype.hasOwnProperty.call(map, key)) {\n      Object.defineProperty(map, key, {\n        value,\n        writable: true,\n        enumerable: true,\n        configurable: true\n      });\n    }\n  }\n  return map;\n}\nexport { addMergeToJSMap, isMergeKey, merge };","import { warn } from '../log.js';\nimport { isMergeKey, addMergeToJSMap } from '../schema/yaml-1.1/merge.js';\nimport { createStringifyContext } from '../stringify/stringify.js';\nimport { isNode } from './identity.js';\nimport { toJS } from './toJS.js';\nfunction addPairToJSMap(ctx, map, {\n  key,\n  value\n}) {\n  if (isNode(key) && key.addToJSMap) key.addToJSMap(ctx, map, value);\n  // TODO: Should drop this special case for bare << handling\n  else if (isMergeKey(ctx, key)) addMergeToJSMap(ctx, map, value);else {\n    const jsKey = toJS(key, '', ctx);\n    if (map instanceof Map) {\n      map.set(jsKey, toJS(value, jsKey, ctx));\n    } else if (map instanceof Set) {\n      map.add(jsKey);\n    } else {\n      const stringKey = stringifyKey(key, jsKey, ctx);\n      const jsValue = toJS(value, stringKey, ctx);\n      if (stringKey in map) Object.defineProperty(map, stringKey, {\n        value: jsValue,\n        writable: true,\n        enumerable: true,\n        configurable: true\n      });else map[stringKey] = jsValue;\n    }\n  }\n  return map;\n}\nfunction stringifyKey(key, jsKey, ctx) {\n  if (jsKey === null) return '';\n  if (typeof jsKey !== 'object') return String(jsKey);\n  if (isNode(key) && ctx?.doc) {\n    const strCtx = createStringifyContext(ctx.doc, {});\n    strCtx.anchors = new Set();\n    for (const node of ctx.anchors.keys()) strCtx.anchors.add(node.anchor);\n    strCtx.inFlow = true;\n    strCtx.inStringifyKey = true;\n    const strKey = key.toString(strCtx);\n    if (!ctx.mapKeyWarned) {\n      let jsonStr = JSON.stringify(strKey);\n      if (jsonStr.length > 40) jsonStr = jsonStr.substring(0, 36) + '...\"';\n      warn(ctx.doc.options.logLevel, `Keys with collection values will be stringified due to JS Object restrictions: ${jsonStr}. Set mapAsMap: true to use object keys.`);\n      ctx.mapKeyWarned = true;\n    }\n    return strKey;\n  }\n  return JSON.stringify(jsKey);\n}\nexport { addPairToJSMap };","import { createNode } from '../doc/createNode.js';\nimport { stringifyPair } from '../stringify/stringifyPair.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { NODE_TYPE, PAIR, isNode } from './identity.js';\nfunction createPair(key, value, ctx) {\n  const k = createNode(key, undefined, ctx);\n  const v = createNode(value, undefined, ctx);\n  return new Pair(k, v);\n}\nclass Pair {\n  constructor(key, value = null) {\n    Object.defineProperty(this, NODE_TYPE, {\n      value: PAIR\n    });\n    this.key = key;\n    this.value = value;\n  }\n  clone(schema) {\n    let {\n      key,\n      value\n    } = this;\n    if (isNode(key)) key = key.clone(schema);\n    if (isNode(value)) value = value.clone(schema);\n    return new Pair(key, value);\n  }\n  toJSON(_, ctx) {\n    const pair = ctx?.mapAsMap ? new Map() : {};\n    return addPairToJSMap(ctx, pair, this);\n  }\n  toString(ctx, onComment, onChompKeep) {\n    return ctx?.doc ? stringifyPair(this, ctx, onComment, onChompKeep) : JSON.stringify(this);\n  }\n}\nexport { Pair, createPair };","import { isNode, isPair } from '../nodes/identity.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\nfunction stringifyCollection(collection, ctx, options) {\n  const flow = ctx.inFlow ?? collection.flow;\n  const stringify = flow ? stringifyFlowCollection : stringifyBlockCollection;\n  return stringify(collection, ctx, options);\n}\nfunction stringifyBlockCollection({\n  comment,\n  items\n}, ctx, {\n  blockItemPrefix,\n  flowChars,\n  itemIndent,\n  onChompKeep,\n  onComment\n}) {\n  const {\n    indent,\n    options: {\n      commentString\n    }\n  } = ctx;\n  const itemCtx = Object.assign({}, ctx, {\n    indent: itemIndent,\n    type: null\n  });\n  let chompKeep = false; // flag for the preceding node's status\n  const lines = [];\n  for (let i = 0; i < items.length; ++i) {\n    const item = items[i];\n    let comment = null;\n    if (isNode(item)) {\n      if (!chompKeep && item.spaceBefore) lines.push('');\n      addCommentBefore(ctx, lines, item.commentBefore, chompKeep);\n      if (item.comment) comment = item.comment;\n    } else if (isPair(item)) {\n      const ik = isNode(item.key) ? item.key : null;\n      if (ik) {\n        if (!chompKeep && ik.spaceBefore) lines.push('');\n        addCommentBefore(ctx, lines, ik.commentBefore, chompKeep);\n      }\n    }\n    chompKeep = false;\n    let str = stringify(item, itemCtx, () => comment = null, () => chompKeep = true);\n    if (comment) str += lineComment(str, itemIndent, commentString(comment));\n    if (chompKeep && comment) chompKeep = false;\n    lines.push(blockItemPrefix + str);\n  }\n  let str;\n  if (lines.length === 0) {\n    str = flowChars.start + flowChars.end;\n  } else {\n    str = lines[0];\n    for (let i = 1; i < lines.length; ++i) {\n      const line = lines[i];\n      str += line ? `\\n${indent}${line}` : '\\n';\n    }\n  }\n  if (comment) {\n    str += '\\n' + indentComment(commentString(comment), indent);\n    if (onComment) onComment();\n  } else if (chompKeep && onChompKeep) onChompKeep();\n  return str;\n}\nfunction stringifyFlowCollection({\n  items\n}, ctx, {\n  flowChars,\n  itemIndent\n}) {\n  const {\n    indent,\n    indentStep,\n    flowCollectionPadding: fcPadding,\n    options: {\n      commentString\n    }\n  } = ctx;\n  itemIndent += indentStep;\n  const itemCtx = Object.assign({}, ctx, {\n    indent: itemIndent,\n    inFlow: true,\n    type: null\n  });\n  let reqNewline = false;\n  let linesAtValue = 0;\n  const lines = [];\n  for (let i = 0; i < items.length; ++i) {\n    const item = items[i];\n    let comment = null;\n    if (isNode(item)) {\n      if (item.spaceBefore) lines.push('');\n      addCommentBefore(ctx, lines, item.commentBefore, false);\n      if (item.comment) comment = item.comment;\n    } else if (isPair(item)) {\n      const ik = isNode(item.key) ? item.key : null;\n      if (ik) {\n        if (ik.spaceBefore) lines.push('');\n        addCommentBefore(ctx, lines, ik.commentBefore, false);\n        if (ik.comment) reqNewline = true;\n      }\n      const iv = isNode(item.value) ? item.value : null;\n      if (iv) {\n        if (iv.comment) comment = iv.comment;\n        if (iv.commentBefore) reqNewline = true;\n      } else if (item.value == null && ik?.comment) {\n        comment = ik.comment;\n      }\n    }\n    if (comment) reqNewline = true;\n    let str = stringify(item, itemCtx, () => comment = null);\n    if (i < items.length - 1) str += ',';\n    if (comment) str += lineComment(str, itemIndent, commentString(comment));\n    if (!reqNewline && (lines.length > linesAtValue || str.includes('\\n'))) reqNewline = true;\n    lines.push(str);\n    linesAtValue = lines.length;\n  }\n  const {\n    start,\n    end\n  } = flowChars;\n  if (lines.length === 0) {\n    return start + end;\n  } else {\n    if (!reqNewline) {\n      const len = lines.reduce((sum, line) => sum + line.length + 2, 2);\n      reqNewline = ctx.options.lineWidth > 0 && len > ctx.options.lineWidth;\n    }\n    if (reqNewline) {\n      let str = start;\n      for (const line of lines) str += line ? `\\n${indentStep}${indent}${line}` : '\\n';\n      return `${str}\\n${indent}${end}`;\n    } else {\n      return `${start}${fcPadding}${lines.join(' ')}${fcPadding}${end}`;\n    }\n  }\n}\nfunction addCommentBefore({\n  indent,\n  options: {\n    commentString\n  }\n}, lines, comment, chompKeep) {\n  if (comment && chompKeep) comment = comment.replace(/^\\n+/, '');\n  if (comment) {\n    const ic = indentComment(commentString(comment), indent);\n    lines.push(ic.trimStart()); // Avoid double indent on first line\n  }\n}\nexport { stringifyCollection };","import { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { Collection } from './Collection.js';\nimport { isPair, isScalar, MAP } from './identity.js';\nimport { Pair, createPair } from './Pair.js';\nimport { isScalarValue } from './Scalar.js';\nfunction findPair(items, key) {\n  const k = isScalar(key) ? key.value : key;\n  for (const it of items) {\n    if (isPair(it)) {\n      if (it.key === key || it.key === k) return it;\n      if (isScalar(it.key) && it.key.value === k) return it;\n    }\n  }\n  return undefined;\n}\nclass YAMLMap extends Collection {\n  static get tagName() {\n    return 'tag:yaml.org,2002:map';\n  }\n  constructor(schema) {\n    super(MAP, schema);\n    this.items = [];\n  }\n  /**\n   * A generic collection parsing method that can be extended\n   * to other node classes that inherit from YAMLMap\n   */\n  static from(schema, obj, ctx) {\n    const {\n      keepUndefined,\n      replacer\n    } = ctx;\n    const map = new this(schema);\n    const add = (key, value) => {\n      if (typeof replacer === 'function') value = replacer.call(obj, key, value);else if (Array.isArray(replacer) && !replacer.includes(key)) return;\n      if (value !== undefined || keepUndefined) map.items.push(createPair(key, value, ctx));\n    };\n    if (obj instanceof Map) {\n      for (const [key, value] of obj) add(key, value);\n    } else if (obj && typeof obj === 'object') {\n      for (const key of Object.keys(obj)) add(key, obj[key]);\n    }\n    if (typeof schema.sortMapEntries === 'function') {\n      map.items.sort(schema.sortMapEntries);\n    }\n    return map;\n  }\n  /**\n   * Adds a value to the collection.\n   *\n   * @param overwrite - If not set `true`, using a key that is already in the\n   *   collection will throw. Otherwise, overwrites the previous value.\n   */\n  add(pair, overwrite) {\n    let _pair;\n    if (isPair(pair)) _pair = pair;else if (!pair || typeof pair !== 'object' || !('key' in pair)) {\n      // In TypeScript, this never happens.\n      _pair = new Pair(pair, pair?.value);\n    } else _pair = new Pair(pair.key, pair.value);\n    const prev = findPair(this.items, _pair.key);\n    const sortEntries = this.schema?.sortMapEntries;\n    if (prev) {\n      if (!overwrite) throw new Error(`Key ${_pair.key} already set`);\n      // For scalars, keep the old node & its comments and anchors\n      if (isScalar(prev.value) && isScalarValue(_pair.value)) prev.value.value = _pair.value;else prev.value = _pair.value;\n    } else if (sortEntries) {\n      const i = this.items.findIndex(item => sortEntries(_pair, item) < 0);\n      if (i === -1) this.items.push(_pair);else this.items.splice(i, 0, _pair);\n    } else {\n      this.items.push(_pair);\n    }\n  }\n  delete(key) {\n    const it = findPair(this.items, key);\n    if (!it) return false;\n    const del = this.items.splice(this.items.indexOf(it), 1);\n    return del.length > 0;\n  }\n  get(key, keepScalar) {\n    const it = findPair(this.items, key);\n    const node = it?.value;\n    return (!keepScalar && isScalar(node) ? node.value : node) ?? undefined;\n  }\n  has(key) {\n    return !!findPair(this.items, key);\n  }\n  set(key, value) {\n    this.add(new Pair(key, value), true);\n  }\n  /**\n   * @param ctx - Conversion context, originally set in Document#toJS()\n   * @param {Class} Type - If set, forces the returned collection type\n   * @returns Instance of Type, Map, or Object\n   */\n  toJSON(_, ctx, Type) {\n    const map = Type ? new Type() : ctx?.mapAsMap ? new Map() : {};\n    if (ctx?.onCreate) ctx.onCreate(map);\n    for (const item of this.items) addPairToJSMap(ctx, map, item);\n    return map;\n  }\n  toString(ctx, onComment, onChompKeep) {\n    if (!ctx) return JSON.stringify(this);\n    for (const item of this.items) {\n      if (!isPair(item)) throw new Error(`Map items must all be pairs; found ${JSON.stringify(item)} instead`);\n    }\n    if (!ctx.allNullValues && this.hasAllNullValues(false)) ctx = Object.assign({}, ctx, {\n      allNullValues: true\n    });\n    return stringifyCollection(this, ctx, {\n      blockItemPrefix: '',\n      flowChars: {\n        start: '{',\n        end: '}'\n      },\n      itemIndent: ctx.indent || '',\n      onChompKeep,\n      onComment\n    });\n  }\n}\nexport { YAMLMap, findPair };","import { isMap } from '../../nodes/identity.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\nconst map = {\n  collection: 'map',\n  default: true,\n  nodeClass: YAMLMap,\n  tag: 'tag:yaml.org,2002:map',\n  resolve(map, onError) {\n    if (!isMap(map)) onError('Expected a mapping for this tag');\n    return map;\n  },\n  createNode: (schema, obj, ctx) => YAMLMap.from(schema, obj, ctx)\n};\nexport { map };","import { createNode } from '../doc/createNode.js';\nimport { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { Collection } from './Collection.js';\nimport { SEQ, isScalar } from './identity.js';\nimport { isScalarValue } from './Scalar.js';\nimport { toJS } from './toJS.js';\nclass YAMLSeq extends Collection {\n  static get tagName() {\n    return 'tag:yaml.org,2002:seq';\n  }\n  constructor(schema) {\n    super(SEQ, schema);\n    this.items = [];\n  }\n  add(value) {\n    this.items.push(value);\n  }\n  /**\n   * Removes a value from the collection.\n   *\n   * `key` must contain a representation of an integer for this to succeed.\n   * It may be wrapped in a `Scalar`.\n   *\n   * @returns `true` if the item was found and removed.\n   */\n  delete(key) {\n    const idx = asItemIndex(key);\n    if (typeof idx !== 'number') return false;\n    const del = this.items.splice(idx, 1);\n    return del.length > 0;\n  }\n  get(key, keepScalar) {\n    const idx = asItemIndex(key);\n    if (typeof idx !== 'number') return undefined;\n    const it = this.items[idx];\n    return !keepScalar && isScalar(it) ? it.value : it;\n  }\n  /**\n   * Checks if the collection includes a value with the key `key`.\n   *\n   * `key` must contain a representation of an integer for this to succeed.\n   * It may be wrapped in a `Scalar`.\n   */\n  has(key) {\n    const idx = asItemIndex(key);\n    return typeof idx === 'number' && idx < this.items.length;\n  }\n  /**\n   * Sets a value in this collection. For `!!set`, `value` needs to be a\n   * boolean to add/remove the item from the set.\n   *\n   * If `key` does not contain a representation of an integer, this will throw.\n   * It may be wrapped in a `Scalar`.\n   */\n  set(key, value) {\n    const idx = asItemIndex(key);\n    if (typeof idx !== 'number') throw new Error(`Expected a valid index, not ${key}.`);\n    const prev = this.items[idx];\n    if (isScalar(prev) && isScalarValue(value)) prev.value = value;else this.items[idx] = value;\n  }\n  toJSON(_, ctx) {\n    const seq = [];\n    if (ctx?.onCreate) ctx.onCreate(seq);\n    let i = 0;\n    for (const item of this.items) seq.push(toJS(item, String(i++), ctx));\n    return seq;\n  }\n  toString(ctx, onComment, onChompKeep) {\n    if (!ctx) return JSON.stringify(this);\n    return stringifyCollection(this, ctx, {\n      blockItemPrefix: '- ',\n      flowChars: {\n        start: '[',\n        end: ']'\n      },\n      itemIndent: (ctx.indent || '') + '  ',\n      onChompKeep,\n      onComment\n    });\n  }\n  static from(schema, obj, ctx) {\n    const {\n      replacer\n    } = ctx;\n    const seq = new this(schema);\n    if (obj && Symbol.iterator in Object(obj)) {\n      let i = 0;\n      for (let it of obj) {\n        if (typeof replacer === 'function') {\n          const key = obj instanceof Set ? it : String(i++);\n          it = replacer.call(obj, key, it);\n        }\n        seq.items.push(createNode(it, undefined, ctx));\n      }\n    }\n    return seq;\n  }\n}\nfunction asItemIndex(key) {\n  let idx = isScalar(key) ? key.value : key;\n  if (idx && typeof idx === 'string') idx = Number(idx);\n  return typeof idx === 'number' && Number.isInteger(idx) && idx >= 0 ? idx : null;\n}\nexport { YAMLSeq };","import { isSeq } from '../../nodes/identity.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\nconst seq = {\n  collection: 'seq',\n  default: true,\n  nodeClass: YAMLSeq,\n  tag: 'tag:yaml.org,2002:seq',\n  resolve(seq, onError) {\n    if (!isSeq(seq)) onError('Expected a sequence for this tag');\n    return seq;\n  },\n  createNode: (schema, obj, ctx) => YAMLSeq.from(schema, obj, ctx)\n};\nexport { seq };","import { stringifyString } from '../../stringify/stringifyString.js';\nconst string = {\n  identify: value => typeof value === 'string',\n  default: true,\n  tag: 'tag:yaml.org,2002:str',\n  resolve: str => str,\n  stringify(item, ctx, onComment, onChompKeep) {\n    ctx = Object.assign({\n      actualString: true\n    }, ctx);\n    return stringifyString(item, ctx, onComment, onChompKeep);\n  }\n};\nexport { string };","import { Scalar } from '../../nodes/Scalar.js';\nconst nullTag = {\n  identify: value => value == null,\n  createNode: () => new Scalar(null),\n  default: true,\n  tag: 'tag:yaml.org,2002:null',\n  test: /^(?:~|[Nn]ull|NULL)?$/,\n  resolve: () => new Scalar(null),\n  stringify: ({\n    source\n  }, ctx) => typeof source === 'string' && nullTag.test.test(source) ? source : ctx.options.nullStr\n};\nexport { nullTag };","import { Scalar } from '../../nodes/Scalar.js';\nconst boolTag = {\n  identify: value => typeof value === 'boolean',\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,\n  resolve: str => new Scalar(str[0] === 't' || str[0] === 'T'),\n  stringify({\n    source,\n    value\n  }, ctx) {\n    if (source && boolTag.test.test(source)) {\n      const sv = source[0] === 't' || source[0] === 'T';\n      if (value === sv) return source;\n    }\n    return value ? ctx.options.trueStr : ctx.options.falseStr;\n  }\n};\nexport { boolTag };","function stringifyNumber({\n  format,\n  minFractionDigits,\n  tag,\n  value\n}) {\n  if (typeof value === 'bigint') return String(value);\n  const num = typeof value === 'number' ? value : Number(value);\n  if (!isFinite(num)) return isNaN(num) ? '.nan' : num < 0 ? '-.inf' : '.inf';\n  let n = JSON.stringify(value);\n  if (!format && minFractionDigits && (!tag || tag === 'tag:yaml.org,2002:float') && /^\\d/.test(n)) {\n    let i = n.indexOf('.');\n    if (i < 0) {\n      i = n.length;\n      n += '.';\n    }\n    let d = minFractionDigits - (n.length - i - 1);\n    while (d-- > 0) n += '0';\n  }\n  return n;\n}\nexport { stringifyNumber };","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\nconst floatNaN = {\n  identify: value => typeof value === 'number',\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^(?:[-+]?\\.(?:inf|Inf|INF)|\\.nan|\\.NaN|\\.NAN)$/,\n  resolve: str => str.slice(-3).toLowerCase() === 'nan' ? NaN : str[0] === '-' ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY,\n  stringify: stringifyNumber\n};\nconst floatExp = {\n  identify: value => typeof value === 'number',\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  format: 'EXP',\n  test: /^[-+]?(?:\\.[0-9]+|[0-9]+(?:\\.[0-9]*)?)[eE][-+]?[0-9]+$/,\n  resolve: str => parseFloat(str),\n  stringify(node) {\n    const num = Number(node.value);\n    return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n  }\n};\nconst float = {\n  identify: value => typeof value === 'number',\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^[-+]?(?:\\.[0-9]+|[0-9]+\\.[0-9]*)$/,\n  resolve(str) {\n    const node = new Scalar(parseFloat(str));\n    const dot = str.indexOf('.');\n    if (dot !== -1 && str[str.length - 1] === '0') node.minFractionDigits = str.length - dot - 1;\n    return node;\n  },\n  stringify: stringifyNumber\n};\nexport { float, floatExp, floatNaN };","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\nconst intIdentify = value => typeof value === 'bigint' || Number.isInteger(value);\nconst intResolve = (str, offset, radix, {\n  intAsBigInt\n}) => intAsBigInt ? BigInt(str) : parseInt(str.substring(offset), radix);\nfunction intStringify(node, radix, prefix) {\n  const {\n    value\n  } = node;\n  if (intIdentify(value) && value >= 0) return prefix + value.toString(radix);\n  return stringifyNumber(node);\n}\nconst intOct = {\n  identify: value => intIdentify(value) && value >= 0,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'OCT',\n  test: /^0o[0-7]+$/,\n  resolve: (str, _onError, opt) => intResolve(str, 2, 8, opt),\n  stringify: node => intStringify(node, 8, '0o')\n};\nconst int = {\n  identify: intIdentify,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  test: /^[-+]?[0-9]+$/,\n  resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n  stringify: stringifyNumber\n};\nconst intHex = {\n  identify: value => intIdentify(value) && value >= 0,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'HEX',\n  test: /^0x[0-9a-fA-F]+$/,\n  resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n  stringify: node => intStringify(node, 16, '0x')\n};\nexport { int, intHex, intOct };","import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { boolTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intOct, int, intHex } from './int.js';\nconst schema = [map, seq, string, nullTag, boolTag, intOct, int, intHex, floatNaN, floatExp, float];\nexport { schema };","import { Scalar } from '../../nodes/Scalar.js';\nimport { map } from '../common/map.js';\nimport { seq } from '../common/seq.js';\nfunction intIdentify(value) {\n  return typeof value === 'bigint' || Number.isInteger(value);\n}\nconst stringifyJSON = ({\n  value\n}) => JSON.stringify(value);\nconst jsonScalars = [{\n  identify: value => typeof value === 'string',\n  default: true,\n  tag: 'tag:yaml.org,2002:str',\n  resolve: str => str,\n  stringify: stringifyJSON\n}, {\n  identify: value => value == null,\n  createNode: () => new Scalar(null),\n  default: true,\n  tag: 'tag:yaml.org,2002:null',\n  test: /^null$/,\n  resolve: () => null,\n  stringify: stringifyJSON\n}, {\n  identify: value => typeof value === 'boolean',\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^true$|^false$/,\n  resolve: str => str === 'true',\n  stringify: stringifyJSON\n}, {\n  identify: intIdentify,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  test: /^-?(?:0|[1-9][0-9]*)$/,\n  resolve: (str, _onError, {\n    intAsBigInt\n  }) => intAsBigInt ? BigInt(str) : parseInt(str, 10),\n  stringify: ({\n    value\n  }) => intIdentify(value) ? value.toString() : JSON.stringify(value)\n}, {\n  identify: value => typeof value === 'number',\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^-?(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,\n  resolve: str => parseFloat(str),\n  stringify: stringifyJSON\n}];\nconst jsonError = {\n  default: true,\n  tag: '',\n  test: /^/,\n  resolve(str, onError) {\n    onError(`Unresolved plain scalar ${JSON.stringify(str)}`);\n    return str;\n  }\n};\nconst schema = [map, seq].concat(jsonScalars, jsonError);\nexport { schema };","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyString } from '../../stringify/stringifyString.js';\nconst binary = {\n  identify: value => value instanceof Uint8Array,\n  // Buffer inherits from Uint8Array\n  default: false,\n  tag: 'tag:yaml.org,2002:binary',\n  /**\n   * Returns a Buffer in node and an Uint8Array in browsers\n   *\n   * To use the resulting buffer as an image, you'll want to do something like:\n   *\n   *   const blob = new Blob([buffer], { type: 'image/jpeg' })\n   *   document.querySelector('#photo').src = URL.createObjectURL(blob)\n   */\n  resolve(src, onError) {\n    if (typeof atob === 'function') {\n      // On IE 11, atob() can't handle newlines\n      const str = atob(src.replace(/[\\n\\r]/g, ''));\n      const buffer = new Uint8Array(str.length);\n      for (let i = 0; i < str.length; ++i) buffer[i] = str.charCodeAt(i);\n      return buffer;\n    } else {\n      onError('This environment does not support reading binary tags; either Buffer or atob is required');\n      return src;\n    }\n  },\n  stringify({\n    comment,\n    type,\n    value\n  }, ctx, onComment, onChompKeep) {\n    const buf = value; // checked earlier by binary.identify()\n    let str;\n    if (typeof btoa === 'function') {\n      let s = '';\n      for (let i = 0; i < buf.length; ++i) s += String.fromCharCode(buf[i]);\n      str = btoa(s);\n    } else {\n      throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');\n    }\n    if (!type) type = Scalar.BLOCK_LITERAL;\n    if (type !== Scalar.QUOTE_DOUBLE) {\n      const lineWidth = Math.max(ctx.options.lineWidth - ctx.indent.length, ctx.options.minContentWidth);\n      const n = Math.ceil(str.length / lineWidth);\n      const lines = new Array(n);\n      for (let i = 0, o = 0; i < n; ++i, o += lineWidth) {\n        lines[i] = str.substr(o, lineWidth);\n      }\n      str = lines.join(type === Scalar.BLOCK_LITERAL ? '\\n' : ' ');\n    }\n    return stringifyString({\n      comment,\n      type,\n      value: str\n    }, ctx, onComment, onChompKeep);\n  }\n};\nexport { binary };","import { isSeq, isPair, isMap } from '../../nodes/identity.js';\nimport { Pair, createPair } from '../../nodes/Pair.js';\nimport { Scalar } from '../../nodes/Scalar.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\nfunction resolvePairs(seq, onError) {\n  if (isSeq(seq)) {\n    for (let i = 0; i < seq.items.length; ++i) {\n      let item = seq.items[i];\n      if (isPair(item)) continue;else if (isMap(item)) {\n        if (item.items.length > 1) onError('Each pair must have its own sequence indicator');\n        const pair = item.items[0] || new Pair(new Scalar(null));\n        if (item.commentBefore) pair.key.commentBefore = pair.key.commentBefore ? `${item.commentBefore}\\n${pair.key.commentBefore}` : item.commentBefore;\n        if (item.comment) {\n          const cn = pair.value ?? pair.key;\n          cn.comment = cn.comment ? `${item.comment}\\n${cn.comment}` : item.comment;\n        }\n        item = pair;\n      }\n      seq.items[i] = isPair(item) ? item : new Pair(item);\n    }\n  } else onError('Expected a sequence for this tag');\n  return seq;\n}\nfunction createPairs(schema, iterable, ctx) {\n  const {\n    replacer\n  } = ctx;\n  const pairs = new YAMLSeq(schema);\n  pairs.tag = 'tag:yaml.org,2002:pairs';\n  let i = 0;\n  if (iterable && Symbol.iterator in Object(iterable)) for (let it of iterable) {\n    if (typeof replacer === 'function') it = replacer.call(iterable, String(i++), it);\n    let key, value;\n    if (Array.isArray(it)) {\n      if (it.length === 2) {\n        key = it[0];\n        value = it[1];\n      } else throw new TypeError(`Expected [key, value] tuple: ${it}`);\n    } else if (it && it instanceof Object) {\n      const keys = Object.keys(it);\n      if (keys.length === 1) {\n        key = keys[0];\n        value = it[key];\n      } else {\n        throw new TypeError(`Expected tuple with one key, not ${keys.length} keys`);\n      }\n    } else {\n      key = it;\n    }\n    pairs.items.push(createPair(key, value, ctx));\n  }\n  return pairs;\n}\nconst pairs = {\n  collection: 'seq',\n  default: false,\n  tag: 'tag:yaml.org,2002:pairs',\n  resolve: resolvePairs,\n  createNode: createPairs\n};\nexport { createPairs, pairs, resolvePairs };","import { isScalar, isPair } from '../../nodes/identity.js';\nimport { toJS } from '../../nodes/toJS.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\nimport { resolvePairs, createPairs } from './pairs.js';\nclass YAMLOMap extends YAMLSeq {\n  constructor() {\n    super();\n    this.add = YAMLMap.prototype.add.bind(this);\n    this.delete = YAMLMap.prototype.delete.bind(this);\n    this.get = YAMLMap.prototype.get.bind(this);\n    this.has = YAMLMap.prototype.has.bind(this);\n    this.set = YAMLMap.prototype.set.bind(this);\n    this.tag = YAMLOMap.tag;\n  }\n  /**\n   * If `ctx` is given, the return type is actually `Map<unknown, unknown>`,\n   * but TypeScript won't allow widening the signature of a child method.\n   */\n  toJSON(_, ctx) {\n    if (!ctx) return super.toJSON(_);\n    const map = new Map();\n    if (ctx?.onCreate) ctx.onCreate(map);\n    for (const pair of this.items) {\n      let key, value;\n      if (isPair(pair)) {\n        key = toJS(pair.key, '', ctx);\n        value = toJS(pair.value, key, ctx);\n      } else {\n        key = toJS(pair, '', ctx);\n      }\n      if (map.has(key)) throw new Error('Ordered maps must not include duplicate keys');\n      map.set(key, value);\n    }\n    return map;\n  }\n  static from(schema, iterable, ctx) {\n    const pairs = createPairs(schema, iterable, ctx);\n    const omap = new this();\n    omap.items = pairs.items;\n    return omap;\n  }\n}\nYAMLOMap.tag = 'tag:yaml.org,2002:omap';\nconst omap = {\n  collection: 'seq',\n  identify: value => value instanceof Map,\n  nodeClass: YAMLOMap,\n  default: false,\n  tag: 'tag:yaml.org,2002:omap',\n  resolve(seq, onError) {\n    const pairs = resolvePairs(seq, onError);\n    const seenKeys = [];\n    for (const {\n      key\n    } of pairs.items) {\n      if (isScalar(key)) {\n        if (seenKeys.includes(key.value)) {\n          onError(`Ordered maps must not include duplicate keys: ${key.value}`);\n        } else {\n          seenKeys.push(key.value);\n        }\n      }\n    }\n    return Object.assign(new YAMLOMap(), pairs);\n  },\n  createNode: (schema, iterable, ctx) => YAMLOMap.from(schema, iterable, ctx)\n};\nexport { YAMLOMap, omap };","import { Scalar } from '../../nodes/Scalar.js';\nfunction boolStringify({\n  value,\n  source\n}, ctx) {\n  const boolObj = value ? trueTag : falseTag;\n  if (source && boolObj.test.test(source)) return source;\n  return value ? ctx.options.trueStr : ctx.options.falseStr;\n}\nconst trueTag = {\n  identify: value => value === true,\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n  resolve: () => new Scalar(true),\n  stringify: boolStringify\n};\nconst falseTag = {\n  identify: value => value === false,\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/,\n  resolve: () => new Scalar(false),\n  stringify: boolStringify\n};\nexport { falseTag, trueTag };","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\nconst floatNaN = {\n  identify: value => typeof value === 'number',\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^(?:[-+]?\\.(?:inf|Inf|INF)|\\.nan|\\.NaN|\\.NAN)$/,\n  resolve: str => str.slice(-3).toLowerCase() === 'nan' ? NaN : str[0] === '-' ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY,\n  stringify: stringifyNumber\n};\nconst floatExp = {\n  identify: value => typeof value === 'number',\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  format: 'EXP',\n  test: /^[-+]?(?:[0-9][0-9_]*)?(?:\\.[0-9_]*)?[eE][-+]?[0-9]+$/,\n  resolve: str => parseFloat(str.replace(/_/g, '')),\n  stringify(node) {\n    const num = Number(node.value);\n    return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n  }\n};\nconst float = {\n  identify: value => typeof value === 'number',\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^[-+]?(?:[0-9][0-9_]*)?\\.[0-9_]*$/,\n  resolve(str) {\n    const node = new Scalar(parseFloat(str.replace(/_/g, '')));\n    const dot = str.indexOf('.');\n    if (dot !== -1) {\n      const f = str.substring(dot + 1).replace(/_/g, '');\n      if (f[f.length - 1] === '0') node.minFractionDigits = f.length;\n    }\n    return node;\n  },\n  stringify: stringifyNumber\n};\nexport { float, floatExp, floatNaN };","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\nconst intIdentify = value => typeof value === 'bigint' || Number.isInteger(value);\nfunction intResolve(str, offset, radix, {\n  intAsBigInt\n}) {\n  const sign = str[0];\n  if (sign === '-' || sign === '+') offset += 1;\n  str = str.substring(offset).replace(/_/g, '');\n  if (intAsBigInt) {\n    switch (radix) {\n      case 2:\n        str = `0b${str}`;\n        break;\n      case 8:\n        str = `0o${str}`;\n        break;\n      case 16:\n        str = `0x${str}`;\n        break;\n    }\n    const n = BigInt(str);\n    return sign === '-' ? BigInt(-1) * n : n;\n  }\n  const n = parseInt(str, radix);\n  return sign === '-' ? -1 * n : n;\n}\nfunction intStringify(node, radix, prefix) {\n  const {\n    value\n  } = node;\n  if (intIdentify(value)) {\n    const str = value.toString(radix);\n    return value < 0 ? '-' + prefix + str.substr(1) : prefix + str;\n  }\n  return stringifyNumber(node);\n}\nconst intBin = {\n  identify: intIdentify,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'BIN',\n  test: /^[-+]?0b[0-1_]+$/,\n  resolve: (str, _onError, opt) => intResolve(str, 2, 2, opt),\n  stringify: node => intStringify(node, 2, '0b')\n};\nconst intOct = {\n  identify: intIdentify,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'OCT',\n  test: /^[-+]?0[0-7_]+$/,\n  resolve: (str, _onError, opt) => intResolve(str, 1, 8, opt),\n  stringify: node => intStringify(node, 8, '0')\n};\nconst int = {\n  identify: intIdentify,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  test: /^[-+]?[0-9][0-9_]*$/,\n  resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n  stringify: stringifyNumber\n};\nconst intHex = {\n  identify: intIdentify,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'HEX',\n  test: /^[-+]?0x[0-9a-fA-F_]+$/,\n  resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n  stringify: node => intStringify(node, 16, '0x')\n};\nexport { int, intBin, intHex, intOct };","import { isMap, isPair, isScalar } from '../../nodes/identity.js';\nimport { Pair, createPair } from '../../nodes/Pair.js';\nimport { YAMLMap, findPair } from '../../nodes/YAMLMap.js';\nclass YAMLSet extends YAMLMap {\n  constructor(schema) {\n    super(schema);\n    this.tag = YAMLSet.tag;\n  }\n  add(key) {\n    let pair;\n    if (isPair(key)) pair = key;else if (key && typeof key === 'object' && 'key' in key && 'value' in key && key.value === null) pair = new Pair(key.key, null);else pair = new Pair(key, null);\n    const prev = findPair(this.items, pair.key);\n    if (!prev) this.items.push(pair);\n  }\n  /**\n   * If `keepPair` is `true`, returns the Pair matching `key`.\n   * Otherwise, returns the value of that Pair's key.\n   */\n  get(key, keepPair) {\n    const pair = findPair(this.items, key);\n    return !keepPair && isPair(pair) ? isScalar(pair.key) ? pair.key.value : pair.key : pair;\n  }\n  set(key, value) {\n    if (typeof value !== 'boolean') throw new Error(`Expected boolean value for set(key, value) in a YAML set, not ${typeof value}`);\n    const prev = findPair(this.items, key);\n    if (prev && !value) {\n      this.items.splice(this.items.indexOf(prev), 1);\n    } else if (!prev && value) {\n      this.items.push(new Pair(key));\n    }\n  }\n  toJSON(_, ctx) {\n    return super.toJSON(_, ctx, Set);\n  }\n  toString(ctx, onComment, onChompKeep) {\n    if (!ctx) return JSON.stringify(this);\n    if (this.hasAllNullValues(true)) return super.toString(Object.assign({}, ctx, {\n      allNullValues: true\n    }), onComment, onChompKeep);else throw new Error('Set items must all have null values');\n  }\n  static from(schema, iterable, ctx) {\n    const {\n      replacer\n    } = ctx;\n    const set = new this(schema);\n    if (iterable && Symbol.iterator in Object(iterable)) for (let value of iterable) {\n      if (typeof replacer === 'function') value = replacer.call(iterable, value, value);\n      set.items.push(createPair(value, null, ctx));\n    }\n    return set;\n  }\n}\nYAMLSet.tag = 'tag:yaml.org,2002:set';\nconst set = {\n  collection: 'map',\n  identify: value => value instanceof Set,\n  nodeClass: YAMLSet,\n  default: false,\n  tag: 'tag:yaml.org,2002:set',\n  createNode: (schema, iterable, ctx) => YAMLSet.from(schema, iterable, ctx),\n  resolve(map, onError) {\n    if (isMap(map)) {\n      if (map.hasAllNullValues(true)) return Object.assign(new YAMLSet(), map);else onError('Set items must all have null values');\n    } else onError('Expected a mapping for this tag');\n    return map;\n  }\n};\nexport { YAMLSet, set };","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\n/** Internal types handle bigint as number, because TS can't figure it out. */\nfunction parseSexagesimal(str, asBigInt) {\n  const sign = str[0];\n  const parts = sign === '-' || sign === '+' ? str.substring(1) : str;\n  const num = n => asBigInt ? BigInt(n) : Number(n);\n  const res = parts.replace(/_/g, '').split(':').reduce((res, p) => res * num(60) + num(p), num(0));\n  return sign === '-' ? num(-1) * res : res;\n}\n/**\n * hhhh:mm:ss.sss\n *\n * Internal types handle bigint as number, because TS can't figure it out.\n */\nfunction stringifySexagesimal(node) {\n  let {\n    value\n  } = node;\n  let num = n => n;\n  if (typeof value === 'bigint') num = n => BigInt(n);else if (isNaN(value) || !isFinite(value)) return stringifyNumber(node);\n  let sign = '';\n  if (value < 0) {\n    sign = '-';\n    value *= num(-1);\n  }\n  const _60 = num(60);\n  const parts = [value % _60]; // seconds, including ms\n  if (value < 60) {\n    parts.unshift(0); // at least one : is required\n  } else {\n    value = (value - parts[0]) / _60;\n    parts.unshift(value % _60); // minutes\n    if (value >= 60) {\n      value = (value - parts[0]) / _60;\n      parts.unshift(value); // hours\n    }\n  }\n  return sign + parts.map(n => String(n).padStart(2, '0')).join(':').replace(/000000\\d*$/, '') // % 60 may introduce error\n  ;\n}\nconst intTime = {\n  identify: value => typeof value === 'bigint' || Number.isInteger(value),\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'TIME',\n  test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+$/,\n  resolve: (str, _onError, {\n    intAsBigInt\n  }) => parseSexagesimal(str, intAsBigInt),\n  stringify: stringifySexagesimal\n};\nconst floatTime = {\n  identify: value => typeof value === 'number',\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  format: 'TIME',\n  test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*$/,\n  resolve: str => parseSexagesimal(str, false),\n  stringify: stringifySexagesimal\n};\nconst timestamp = {\n  identify: value => value instanceof Date,\n  default: true,\n  tag: 'tag:yaml.org,2002:timestamp',\n  // If the time zone is omitted, the timestamp is assumed to be specified in UTC. The time part\n  // may be omitted altogether, resulting in a date format. In such a case, the time part is\n  // assumed to be 00:00:00Z (start of day, UTC).\n  test: RegExp('^([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})' +\n  // YYYY-Mm-Dd\n  '(?:' +\n  // time is optional\n  '(?:t|T|[ \\\\t]+)' +\n  // t | T | whitespace\n  '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\\\.[0-9]+)?)' +\n  // Hh:Mm:Ss(.ss)?\n  '(?:[ \\\\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?' +\n  // Z | +5 | -03:30\n  ')?$'),\n  resolve(str) {\n    const match = str.match(timestamp.test);\n    if (!match) throw new Error('!!timestamp expects a date, starting with yyyy-mm-dd');\n    const [, year, month, day, hour, minute, second] = match.map(Number);\n    const millisec = match[7] ? Number((match[7] + '00').substr(1, 3)) : 0;\n    let date = Date.UTC(year, month - 1, day, hour || 0, minute || 0, second || 0, millisec);\n    const tz = match[8];\n    if (tz && tz !== 'Z') {\n      let d = parseSexagesimal(tz, false);\n      if (Math.abs(d) < 30) d *= 60;\n      date -= 60000 * d;\n    }\n    return new Date(date);\n  },\n  stringify: ({\n    value\n  }) => value.toISOString().replace(/(T00:00:00)?\\.000Z$/, '')\n};\nexport { floatTime, intTime, timestamp };","import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { binary } from './binary.js';\nimport { trueTag, falseTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intBin, intOct, int, intHex } from './int.js';\nimport { merge } from './merge.js';\nimport { omap } from './omap.js';\nimport { pairs } from './pairs.js';\nimport { set } from './set.js';\nimport { intTime, floatTime, timestamp } from './timestamp.js';\nconst schema = [map, seq, string, nullTag, trueTag, falseTag, intBin, intOct, int, intHex, floatNaN, floatExp, float, binary, merge, omap, pairs, set, intTime, floatTime, timestamp];\nexport { schema };","import { map } from './common/map.js';\nimport { nullTag } from './common/null.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { boolTag } from './core/bool.js';\nimport { float, floatExp, floatNaN } from './core/float.js';\nimport { int, intHex, intOct } from './core/int.js';\nimport { schema } from './core/schema.js';\nimport { schema as schema$1 } from './json/schema.js';\nimport { binary } from './yaml-1.1/binary.js';\nimport { merge } from './yaml-1.1/merge.js';\nimport { omap } from './yaml-1.1/omap.js';\nimport { pairs } from './yaml-1.1/pairs.js';\nimport { schema as schema$2 } from './yaml-1.1/schema.js';\nimport { set } from './yaml-1.1/set.js';\nimport { timestamp, floatTime, intTime } from './yaml-1.1/timestamp.js';\nconst schemas = new Map([['core', schema], ['failsafe', [map, seq, string]], ['json', schema$1], ['yaml11', schema$2], ['yaml-1.1', schema$2]]);\nconst tagsByName = {\n  binary,\n  bool: boolTag,\n  float,\n  floatExp,\n  floatNaN,\n  floatTime,\n  int,\n  intHex,\n  intOct,\n  intTime,\n  map,\n  merge,\n  null: nullTag,\n  omap,\n  pairs,\n  seq,\n  set,\n  timestamp\n};\nconst coreKnownTags = {\n  'tag:yaml.org,2002:binary': binary,\n  'tag:yaml.org,2002:merge': merge,\n  'tag:yaml.org,2002:omap': omap,\n  'tag:yaml.org,2002:pairs': pairs,\n  'tag:yaml.org,2002:set': set,\n  'tag:yaml.org,2002:timestamp': timestamp\n};\nfunction getTags(customTags, schemaName, addMergeTag) {\n  const schemaTags = schemas.get(schemaName);\n  if (schemaTags && !customTags) {\n    return addMergeTag && !schemaTags.includes(merge) ? schemaTags.concat(merge) : schemaTags.slice();\n  }\n  let tags = schemaTags;\n  if (!tags) {\n    if (Array.isArray(customTags)) tags = [];else {\n      const keys = Array.from(schemas.keys()).filter(key => key !== 'yaml11').map(key => JSON.stringify(key)).join(', ');\n      throw new Error(`Unknown schema \"${schemaName}\"; use one of ${keys} or define customTags array`);\n    }\n  }\n  if (Array.isArray(customTags)) {\n    for (const tag of customTags) tags = tags.concat(tag);\n  } else if (typeof customTags === 'function') {\n    tags = customTags(tags.slice());\n  }\n  if (addMergeTag) tags = tags.concat(merge);\n  return tags.reduce((tags, tag) => {\n    const tagObj = typeof tag === 'string' ? tagsByName[tag] : tag;\n    if (!tagObj) {\n      const tagName = JSON.stringify(tag);\n      const keys = Object.keys(tagsByName).map(key => JSON.stringify(key)).join(', ');\n      throw new Error(`Unknown custom tag ${tagName}; use one of ${keys}`);\n    }\n    if (!tags.includes(tagObj)) tags.push(tagObj);\n    return tags;\n  }, []);\n}\nexport { coreKnownTags, getTags };","import { MAP, SCALAR, SEQ } from '../nodes/identity.js';\nimport { map } from './common/map.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { getTags, coreKnownTags } from './tags.js';\nconst sortMapEntriesByKey = (a, b) => a.key < b.key ? -1 : a.key > b.key ? 1 : 0;\nclass Schema {\n  constructor({\n    compat,\n    customTags,\n    merge,\n    resolveKnownTags,\n    schema,\n    sortMapEntries,\n    toStringDefaults\n  }) {\n    this.compat = Array.isArray(compat) ? getTags(compat, 'compat') : compat ? getTags(null, compat) : null;\n    this.name = typeof schema === 'string' && schema || 'core';\n    this.knownTags = resolveKnownTags ? coreKnownTags : {};\n    this.tags = getTags(customTags, this.name, merge);\n    this.toStringOptions = toStringDefaults ?? null;\n    Object.defineProperty(this, MAP, {\n      value: map\n    });\n    Object.defineProperty(this, SCALAR, {\n      value: string\n    });\n    Object.defineProperty(this, SEQ, {\n      value: seq\n    });\n    // Used by createMap()\n    this.sortMapEntries = typeof sortMapEntries === 'function' ? sortMapEntries : sortMapEntries === true ? sortMapEntriesByKey : null;\n  }\n  clone() {\n    const copy = Object.create(Schema.prototype, Object.getOwnPropertyDescriptors(this));\n    copy.tags = this.tags.slice();\n    return copy;\n  }\n}\nexport { Schema };","import { isNode } from '../nodes/identity.js';\nimport { createStringifyContext, stringify } from './stringify.js';\nimport { indentComment, lineComment } from './stringifyComment.js';\nfunction stringifyDocument(doc, options) {\n  const lines = [];\n  let hasDirectives = options.directives === true;\n  if (options.directives !== false && doc.directives) {\n    const dir = doc.directives.toString(doc);\n    if (dir) {\n      lines.push(dir);\n      hasDirectives = true;\n    } else if (doc.directives.docStart) hasDirectives = true;\n  }\n  if (hasDirectives) lines.push('---');\n  const ctx = createStringifyContext(doc, options);\n  const {\n    commentString\n  } = ctx.options;\n  if (doc.commentBefore) {\n    if (lines.length !== 1) lines.unshift('');\n    const cs = commentString(doc.commentBefore);\n    lines.unshift(indentComment(cs, ''));\n  }\n  let chompKeep = false;\n  let contentComment = null;\n  if (doc.contents) {\n    if (isNode(doc.contents)) {\n      if (doc.contents.spaceBefore && hasDirectives) lines.push('');\n      if (doc.contents.commentBefore) {\n        const cs = commentString(doc.contents.commentBefore);\n        lines.push(indentComment(cs, ''));\n      }\n      // top-level block scalars need to be indented if followed by a comment\n      ctx.forceBlockIndent = !!doc.comment;\n      contentComment = doc.contents.comment;\n    }\n    const onChompKeep = contentComment ? undefined : () => chompKeep = true;\n    let body = stringify(doc.contents, ctx, () => contentComment = null, onChompKeep);\n    if (contentComment) body += lineComment(body, '', commentString(contentComment));\n    if ((body[0] === '|' || body[0] === '>') && lines[lines.length - 1] === '---') {\n      // Top-level block scalars with a preceding doc marker ought to use the\n      // same line for their header.\n      lines[lines.length - 1] = `--- ${body}`;\n    } else lines.push(body);\n  } else {\n    lines.push(stringify(doc.contents, ctx));\n  }\n  if (doc.directives?.docEnd) {\n    if (doc.comment) {\n      const cs = commentString(doc.comment);\n      if (cs.includes('\\n')) {\n        lines.push('...');\n        lines.push(indentComment(cs, ''));\n      } else {\n        lines.push(`... ${cs}`);\n      }\n    } else {\n      lines.push('...');\n    }\n  } else {\n    let dc = doc.comment;\n    if (dc && chompKeep) dc = dc.replace(/^\\n+/, '');\n    if (dc) {\n      if ((!chompKeep || contentComment) && lines[lines.length - 1] !== '') lines.push('');\n      lines.push(indentComment(commentString(dc), ''));\n    }\n  }\n  return lines.join('\\n') + '\\n';\n}\nexport { stringifyDocument };","import { Alias } from '../nodes/Alias.js';\nimport { isEmptyPath, collectionFromPath } from '../nodes/Collection.js';\nimport { NODE_TYPE, DOC, isNode, isCollection, isScalar } from '../nodes/identity.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { toJS } from '../nodes/toJS.js';\nimport { Schema } from '../schema/Schema.js';\nimport { stringifyDocument } from '../stringify/stringifyDocument.js';\nimport { anchorNames, findNewAnchor, createNodeAnchors } from './anchors.js';\nimport { applyReviver } from './applyReviver.js';\nimport { createNode } from './createNode.js';\nimport { Directives } from './directives.js';\nclass Document {\n  constructor(value, replacer, options) {\n    /** A comment before this Document */\n    this.commentBefore = null;\n    /** A comment immediately after this Document */\n    this.comment = null;\n    /** Errors encountered during parsing. */\n    this.errors = [];\n    /** Warnings encountered during parsing. */\n    this.warnings = [];\n    Object.defineProperty(this, NODE_TYPE, {\n      value: DOC\n    });\n    let _replacer = null;\n    if (typeof replacer === 'function' || Array.isArray(replacer)) {\n      _replacer = replacer;\n    } else if (options === undefined && replacer) {\n      options = replacer;\n      replacer = undefined;\n    }\n    const opt = Object.assign({\n      intAsBigInt: false,\n      keepSourceTokens: false,\n      logLevel: 'warn',\n      prettyErrors: true,\n      strict: true,\n      stringKeys: false,\n      uniqueKeys: true,\n      version: '1.2'\n    }, options);\n    this.options = opt;\n    let {\n      version\n    } = opt;\n    if (options?._directives) {\n      this.directives = options._directives.atDocument();\n      if (this.directives.yaml.explicit) version = this.directives.yaml.version;\n    } else this.directives = new Directives({\n      version\n    });\n    this.setSchema(version, options);\n    // @ts-expect-error We can't really know that this matches Contents.\n    this.contents = value === undefined ? null : this.createNode(value, _replacer, options);\n  }\n  /**\n   * Create a deep copy of this Document and its contents.\n   *\n   * Custom Node values that inherit from `Object` still refer to their original instances.\n   */\n  clone() {\n    const copy = Object.create(Document.prototype, {\n      [NODE_TYPE]: {\n        value: DOC\n      }\n    });\n    copy.commentBefore = this.commentBefore;\n    copy.comment = this.comment;\n    copy.errors = this.errors.slice();\n    copy.warnings = this.warnings.slice();\n    copy.options = Object.assign({}, this.options);\n    if (this.directives) copy.directives = this.directives.clone();\n    copy.schema = this.schema.clone();\n    // @ts-expect-error We can't really know that this matches Contents.\n    copy.contents = isNode(this.contents) ? this.contents.clone(copy.schema) : this.contents;\n    if (this.range) copy.range = this.range.slice();\n    return copy;\n  }\n  /** Adds a value to the document. */\n  add(value) {\n    if (assertCollection(this.contents)) this.contents.add(value);\n  }\n  /** Adds a value to the document. */\n  addIn(path, value) {\n    if (assertCollection(this.contents)) this.contents.addIn(path, value);\n  }\n  /**\n   * Create a new `Alias` node, ensuring that the target `node` has the required anchor.\n   *\n   * If `node` already has an anchor, `name` is ignored.\n   * Otherwise, the `node.anchor` value will be set to `name`,\n   * or if an anchor with that name is already present in the document,\n   * `name` will be used as a prefix for a new unique anchor.\n   * If `name` is undefined, the generated anchor will use 'a' as a prefix.\n   */\n  createAlias(node, name) {\n    if (!node.anchor) {\n      const prev = anchorNames(this);\n      node.anchor =\n      // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n      !name || prev.has(name) ? findNewAnchor(name || 'a', prev) : name;\n    }\n    return new Alias(node.anchor);\n  }\n  createNode(value, replacer, options) {\n    let _replacer = undefined;\n    if (typeof replacer === 'function') {\n      value = replacer.call({\n        '': value\n      }, '', value);\n      _replacer = replacer;\n    } else if (Array.isArray(replacer)) {\n      const keyToStr = v => typeof v === 'number' || v instanceof String || v instanceof Number;\n      const asStr = replacer.filter(keyToStr).map(String);\n      if (asStr.length > 0) replacer = replacer.concat(asStr);\n      _replacer = replacer;\n    } else if (options === undefined && replacer) {\n      options = replacer;\n      replacer = undefined;\n    }\n    const {\n      aliasDuplicateObjects,\n      anchorPrefix,\n      flow,\n      keepUndefined,\n      onTagObj,\n      tag\n    } = options ?? {};\n    const {\n      onAnchor,\n      setAnchors,\n      sourceObjects\n    } = createNodeAnchors(this,\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    anchorPrefix || 'a');\n    const ctx = {\n      aliasDuplicateObjects: aliasDuplicateObjects ?? true,\n      keepUndefined: keepUndefined ?? false,\n      onAnchor,\n      onTagObj,\n      replacer: _replacer,\n      schema: this.schema,\n      sourceObjects\n    };\n    const node = createNode(value, tag, ctx);\n    if (flow && isCollection(node)) node.flow = true;\n    setAnchors();\n    return node;\n  }\n  /**\n   * Convert a key and a value into a `Pair` using the current schema,\n   * recursively wrapping all values as `Scalar` or `Collection` nodes.\n   */\n  createPair(key, value, options = {}) {\n    const k = this.createNode(key, null, options);\n    const v = this.createNode(value, null, options);\n    return new Pair(k, v);\n  }\n  /**\n   * Removes a value from the document.\n   * @returns `true` if the item was found and removed.\n   */\n  delete(key) {\n    return assertCollection(this.contents) ? this.contents.delete(key) : false;\n  }\n  /**\n   * Removes a value from the document.\n   * @returns `true` if the item was found and removed.\n   */\n  deleteIn(path) {\n    if (isEmptyPath(path)) {\n      if (this.contents == null) return false;\n      // @ts-expect-error Presumed impossible if Strict extends false\n      this.contents = null;\n      return true;\n    }\n    return assertCollection(this.contents) ? this.contents.deleteIn(path) : false;\n  }\n  /**\n   * Returns item at `key`, or `undefined` if not found. By default unwraps\n   * scalar values from their surrounding node; to disable set `keepScalar` to\n   * `true` (collections are always returned intact).\n   */\n  get(key, keepScalar) {\n    return isCollection(this.contents) ? this.contents.get(key, keepScalar) : undefined;\n  }\n  /**\n   * Returns item at `path`, or `undefined` if not found. By default unwraps\n   * scalar values from their surrounding node; to disable set `keepScalar` to\n   * `true` (collections are always returned intact).\n   */\n  getIn(path, keepScalar) {\n    if (isEmptyPath(path)) return !keepScalar && isScalar(this.contents) ? this.contents.value : this.contents;\n    return isCollection(this.contents) ? this.contents.getIn(path, keepScalar) : undefined;\n  }\n  /**\n   * Checks if the document includes a value with the key `key`.\n   */\n  has(key) {\n    return isCollection(this.contents) ? this.contents.has(key) : false;\n  }\n  /**\n   * Checks if the document includes a value at `path`.\n   */\n  hasIn(path) {\n    if (isEmptyPath(path)) return this.contents !== undefined;\n    return isCollection(this.contents) ? this.contents.hasIn(path) : false;\n  }\n  /**\n   * Sets a value in this document. For `!!set`, `value` needs to be a\n   * boolean to add/remove the item from the set.\n   */\n  set(key, value) {\n    if (this.contents == null) {\n      // @ts-expect-error We can't really know that this matches Contents.\n      this.contents = collectionFromPath(this.schema, [key], value);\n    } else if (assertCollection(this.contents)) {\n      this.contents.set(key, value);\n    }\n  }\n  /**\n   * Sets a value in this document. For `!!set`, `value` needs to be a\n   * boolean to add/remove the item from the set.\n   */\n  setIn(path, value) {\n    if (isEmptyPath(path)) {\n      // @ts-expect-error We can't really know that this matches Contents.\n      this.contents = value;\n    } else if (this.contents == null) {\n      // @ts-expect-error We can't really know that this matches Contents.\n      this.contents = collectionFromPath(this.schema, Array.from(path), value);\n    } else if (assertCollection(this.contents)) {\n      this.contents.setIn(path, value);\n    }\n  }\n  /**\n   * Change the YAML version and schema used by the document.\n   * A `null` version disables support for directives, explicit tags, anchors, and aliases.\n   * It also requires the `schema` option to be given as a `Schema` instance value.\n   *\n   * Overrides all previously set schema options.\n   */\n  setSchema(version, options = {}) {\n    if (typeof version === 'number') version = String(version);\n    let opt;\n    switch (version) {\n      case '1.1':\n        if (this.directives) this.directives.yaml.version = '1.1';else this.directives = new Directives({\n          version: '1.1'\n        });\n        opt = {\n          resolveKnownTags: false,\n          schema: 'yaml-1.1'\n        };\n        break;\n      case '1.2':\n      case 'next':\n        if (this.directives) this.directives.yaml.version = version;else this.directives = new Directives({\n          version\n        });\n        opt = {\n          resolveKnownTags: true,\n          schema: 'core'\n        };\n        break;\n      case null:\n        if (this.directives) delete this.directives;\n        opt = null;\n        break;\n      default:\n        {\n          const sv = JSON.stringify(version);\n          throw new Error(`Expected '1.1', '1.2' or null as first argument, but found: ${sv}`);\n        }\n    }\n    // Not using `instanceof Schema` to allow for duck typing\n    if (options.schema instanceof Object) this.schema = options.schema;else if (opt) this.schema = new Schema(Object.assign(opt, options));else throw new Error(`With a null YAML version, the { schema: Schema } option is required`);\n  }\n  // json & jsonArg are only used from toJSON()\n  toJS({\n    json,\n    jsonArg,\n    mapAsMap,\n    maxAliasCount,\n    onAnchor,\n    reviver\n  } = {}) {\n    const ctx = {\n      anchors: new Map(),\n      doc: this,\n      keep: !json,\n      mapAsMap: mapAsMap === true,\n      mapKeyWarned: false,\n      maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n    };\n    const res = toJS(this.contents, jsonArg ?? '', ctx);\n    if (typeof onAnchor === 'function') for (const {\n      count,\n      res\n    } of ctx.anchors.values()) onAnchor(res, count);\n    return typeof reviver === 'function' ? applyReviver(reviver, {\n      '': res\n    }, '', res) : res;\n  }\n  /**\n   * A JSON representation of the document `contents`.\n   *\n   * @param jsonArg Used by `JSON.stringify` to indicate the array index or\n   *   property name.\n   */\n  toJSON(jsonArg, onAnchor) {\n    return this.toJS({\n      json: true,\n      jsonArg,\n      mapAsMap: false,\n      onAnchor\n    });\n  }\n  /** A YAML representation of the document. */\n  toString(options = {}) {\n    if (this.errors.length > 0) throw new Error('Document with errors cannot be stringified');\n    if ('indent' in options && (!Number.isInteger(options.indent) || Number(options.indent) <= 0)) {\n      const s = JSON.stringify(options.indent);\n      throw new Error(`\"indent\" option must be a positive integer, not ${s}`);\n    }\n    return stringifyDocument(this, options);\n  }\n}\nfunction assertCollection(contents) {\n  if (isCollection(contents)) return true;\n  throw new Error('Expected a YAML collection as document contents');\n}\nexport { Document };","class YAMLError extends Error {\n  constructor(name, pos, code, message) {\n    super();\n    this.name = name;\n    this.code = code;\n    this.message = message;\n    this.pos = pos;\n  }\n}\nclass YAMLParseError extends YAMLError {\n  constructor(pos, code, message) {\n    super('YAMLParseError', pos, code, message);\n  }\n}\nclass YAMLWarning extends YAMLError {\n  constructor(pos, code, message) {\n    super('YAMLWarning', pos, code, message);\n  }\n}\nconst prettifyError = (src, lc) => error => {\n  if (error.pos[0] === -1) return;\n  error.linePos = error.pos.map(pos => lc.linePos(pos));\n  const {\n    line,\n    col\n  } = error.linePos[0];\n  error.message += ` at line ${line}, column ${col}`;\n  let ci = col - 1;\n  let lineStr = src.substring(lc.lineStarts[line - 1], lc.lineStarts[line]).replace(/[\\n\\r]+$/, '');\n  // Trim to max 80 chars, keeping col position near the middle\n  if (ci >= 60 && lineStr.length > 80) {\n    const trimStart = Math.min(ci - 39, lineStr.length - 79);\n    lineStr = '…' + lineStr.substring(trimStart);\n    ci -= trimStart - 1;\n  }\n  if (lineStr.length > 80) lineStr = lineStr.substring(0, 79) + '…';\n  // Include previous line in context if pointing at line start\n  if (line > 1 && /^ *$/.test(lineStr.substring(0, ci))) {\n    // Regexp won't match if start is trimmed\n    let prev = src.substring(lc.lineStarts[line - 2], lc.lineStarts[line - 1]);\n    if (prev.length > 80) prev = prev.substring(0, 79) + '…\\n';\n    lineStr = prev + lineStr;\n  }\n  if (/[^ ]/.test(lineStr)) {\n    let count = 1;\n    const end = error.linePos[1];\n    if (end && end.line === line && end.col > col) {\n      count = Math.max(1, Math.min(end.col - col, 80 - ci));\n    }\n    const pointer = ' '.repeat(ci) + '^'.repeat(count);\n    error.message += `:\\n\\n${lineStr}\\n${pointer}\\n`;\n  }\n};\nexport { YAMLError, YAMLParseError, YAMLWarning, prettifyError };","function resolveProps(tokens, {\n  flow,\n  indicator,\n  next,\n  offset,\n  onError,\n  parentIndent,\n  startOnNewline\n}) {\n  let spaceBefore = false;\n  let atNewline = startOnNewline;\n  let hasSpace = startOnNewline;\n  let comment = '';\n  let commentSep = '';\n  let hasNewline = false;\n  let reqSpace = false;\n  let tab = null;\n  let anchor = null;\n  let tag = null;\n  let newlineAfterProp = null;\n  let comma = null;\n  let found = null;\n  let start = null;\n  for (const token of tokens) {\n    if (reqSpace) {\n      if (token.type !== 'space' && token.type !== 'newline' && token.type !== 'comma') onError(token.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n      reqSpace = false;\n    }\n    if (tab) {\n      if (atNewline && token.type !== 'comment' && token.type !== 'newline') {\n        onError(tab, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n      }\n      tab = null;\n    }\n    switch (token.type) {\n      case 'space':\n        // At the doc level, tabs at line start may be parsed\n        // as leading white space rather than indentation.\n        // In a flow collection, only the parser handles indent.\n        if (!flow && (indicator !== 'doc-start' || next?.type !== 'flow-collection') && token.source.includes('\\t')) {\n          tab = token;\n        }\n        hasSpace = true;\n        break;\n      case 'comment':\n        {\n          if (!hasSpace) onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n          const cb = token.source.substring(1) || ' ';\n          if (!comment) comment = cb;else comment += commentSep + cb;\n          commentSep = '';\n          atNewline = false;\n          break;\n        }\n      case 'newline':\n        if (atNewline) {\n          if (comment) comment += token.source;else if (!found || indicator !== 'seq-item-ind') spaceBefore = true;\n        } else commentSep += token.source;\n        atNewline = true;\n        hasNewline = true;\n        if (anchor || tag) newlineAfterProp = token;\n        hasSpace = true;\n        break;\n      case 'anchor':\n        if (anchor) onError(token, 'MULTIPLE_ANCHORS', 'A node can have at most one anchor');\n        if (token.source.endsWith(':')) onError(token.offset + token.source.length - 1, 'BAD_ALIAS', 'Anchor ending in : is ambiguous', true);\n        anchor = token;\n        if (start === null) start = token.offset;\n        atNewline = false;\n        hasSpace = false;\n        reqSpace = true;\n        break;\n      case 'tag':\n        {\n          if (tag) onError(token, 'MULTIPLE_TAGS', 'A node can have at most one tag');\n          tag = token;\n          if (start === null) start = token.offset;\n          atNewline = false;\n          hasSpace = false;\n          reqSpace = true;\n          break;\n        }\n      case indicator:\n        // Could here handle preceding comments differently\n        if (anchor || tag) onError(token, 'BAD_PROP_ORDER', `Anchors and tags must be after the ${token.source} indicator`);\n        if (found) onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.source} in ${flow ?? 'collection'}`);\n        found = token;\n        atNewline = indicator === 'seq-item-ind' || indicator === 'explicit-key-ind';\n        hasSpace = false;\n        break;\n      case 'comma':\n        if (flow) {\n          if (comma) onError(token, 'UNEXPECTED_TOKEN', `Unexpected , in ${flow}`);\n          comma = token;\n          atNewline = false;\n          hasSpace = false;\n          break;\n        }\n      // else fallthrough\n      default:\n        onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.type} token`);\n        atNewline = false;\n        hasSpace = false;\n    }\n  }\n  const last = tokens[tokens.length - 1];\n  const end = last ? last.offset + last.source.length : offset;\n  if (reqSpace && next && next.type !== 'space' && next.type !== 'newline' && next.type !== 'comma' && (next.type !== 'scalar' || next.source !== '')) {\n    onError(next.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n  }\n  if (tab && (atNewline && tab.indent <= parentIndent || next?.type === 'block-map' || next?.type === 'block-seq')) onError(tab, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n  return {\n    comma,\n    found,\n    spaceBefore,\n    comment,\n    hasNewline,\n    anchor,\n    tag,\n    newlineAfterProp,\n    end,\n    start: start ?? end\n  };\n}\nexport { resolveProps };","function containsNewline(key) {\n  if (!key) return null;\n  switch (key.type) {\n    case 'alias':\n    case 'scalar':\n    case 'double-quoted-scalar':\n    case 'single-quoted-scalar':\n      if (key.source.includes('\\n')) return true;\n      if (key.end) for (const st of key.end) if (st.type === 'newline') return true;\n      return false;\n    case 'flow-collection':\n      for (const it of key.items) {\n        for (const st of it.start) if (st.type === 'newline') return true;\n        if (it.sep) for (const st of it.sep) if (st.type === 'newline') return true;\n        if (containsNewline(it.key) || containsNewline(it.value)) return true;\n      }\n      return false;\n    default:\n      return true;\n  }\n}\nexport { containsNewline };","import { containsNewline } from './util-contains-newline.js';\nfunction flowIndentCheck(indent, fc, onError) {\n  if (fc?.type === 'flow-collection') {\n    const end = fc.end[0];\n    if (end.indent === indent && (end.source === ']' || end.source === '}') && containsNewline(fc)) {\n      const msg = 'Flow end indicator should be more indented than parent';\n      onError(end, 'BAD_INDENT', msg, true);\n    }\n  }\n}\nexport { flowIndentCheck };","import { isScalar } from '../nodes/identity.js';\nfunction mapIncludes(ctx, items, search) {\n  const {\n    uniqueKeys\n  } = ctx.options;\n  if (uniqueKeys === false) return false;\n  const isEqual = typeof uniqueKeys === 'function' ? uniqueKeys : (a, b) => a === b || isScalar(a) && isScalar(b) && a.value === b.value;\n  return items.some(pair => isEqual(pair.key, search));\n}\nexport { mapIncludes };","import { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\nimport { mapIncludes } from './util-map-includes.js';\nconst startColMsg = 'All mapping items must start at the same column';\nfunction resolveBlockMap({\n  composeNode,\n  composeEmptyNode\n}, ctx, bm, onError, tag) {\n  const NodeClass = tag?.nodeClass ?? YAMLMap;\n  const map = new NodeClass(ctx.schema);\n  if (ctx.atRoot) ctx.atRoot = false;\n  let offset = bm.offset;\n  let commentEnd = null;\n  for (const collItem of bm.items) {\n    const {\n      start,\n      key,\n      sep,\n      value\n    } = collItem;\n    // key properties\n    const keyProps = resolveProps(start, {\n      indicator: 'explicit-key-ind',\n      next: key ?? sep?.[0],\n      offset,\n      onError,\n      parentIndent: bm.indent,\n      startOnNewline: true\n    });\n    const implicitKey = !keyProps.found;\n    if (implicitKey) {\n      if (key) {\n        if (key.type === 'block-seq') onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'A block sequence may not be used as an implicit map key');else if ('indent' in key && key.indent !== bm.indent) onError(offset, 'BAD_INDENT', startColMsg);\n      }\n      if (!keyProps.anchor && !keyProps.tag && !sep) {\n        commentEnd = keyProps.end;\n        if (keyProps.comment) {\n          if (map.comment) map.comment += '\\n' + keyProps.comment;else map.comment = keyProps.comment;\n        }\n        continue;\n      }\n      if (keyProps.newlineAfterProp || containsNewline(key)) {\n        onError(key ?? start[start.length - 1], 'MULTILINE_IMPLICIT_KEY', 'Implicit keys need to be on a single line');\n      }\n    } else if (keyProps.found?.indent !== bm.indent) {\n      onError(offset, 'BAD_INDENT', startColMsg);\n    }\n    // key value\n    ctx.atKey = true;\n    const keyStart = keyProps.end;\n    const keyNode = key ? composeNode(ctx, key, keyProps, onError) : composeEmptyNode(ctx, keyStart, start, null, keyProps, onError);\n    if (ctx.schema.compat) flowIndentCheck(bm.indent, key, onError);\n    ctx.atKey = false;\n    if (mapIncludes(ctx, map.items, keyNode)) onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n    // value properties\n    const valueProps = resolveProps(sep ?? [], {\n      indicator: 'map-value-ind',\n      next: value,\n      offset: keyNode.range[2],\n      onError,\n      parentIndent: bm.indent,\n      startOnNewline: !key || key.type === 'block-scalar'\n    });\n    offset = valueProps.end;\n    if (valueProps.found) {\n      if (implicitKey) {\n        if (value?.type === 'block-map' && !valueProps.hasNewline) onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'Nested mappings are not allowed in compact mappings');\n        if (ctx.options.strict && keyProps.start < valueProps.found.offset - 1024) onError(keyNode.range, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit block mapping key');\n      }\n      // value value\n      const valueNode = value ? composeNode(ctx, value, valueProps, onError) : composeEmptyNode(ctx, offset, sep, null, valueProps, onError);\n      if (ctx.schema.compat) flowIndentCheck(bm.indent, value, onError);\n      offset = valueNode.range[2];\n      const pair = new Pair(keyNode, valueNode);\n      if (ctx.options.keepSourceTokens) pair.srcToken = collItem;\n      map.items.push(pair);\n    } else {\n      // key with no value\n      if (implicitKey) onError(keyNode.range, 'MISSING_CHAR', 'Implicit map keys need to be followed by map values');\n      if (valueProps.comment) {\n        if (keyNode.comment) keyNode.comment += '\\n' + valueProps.comment;else keyNode.comment = valueProps.comment;\n      }\n      const pair = new Pair(keyNode);\n      if (ctx.options.keepSourceTokens) pair.srcToken = collItem;\n      map.items.push(pair);\n    }\n  }\n  if (commentEnd && commentEnd < offset) onError(commentEnd, 'IMPOSSIBLE', 'Map comment with trailing content');\n  map.range = [bm.offset, offset, commentEnd ?? offset];\n  return map;\n}\nexport { resolveBlockMap };","import { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveProps } from './resolve-props.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\nfunction resolveBlockSeq({\n  composeNode,\n  composeEmptyNode\n}, ctx, bs, onError, tag) {\n  const NodeClass = tag?.nodeClass ?? YAMLSeq;\n  const seq = new NodeClass(ctx.schema);\n  if (ctx.atRoot) ctx.atRoot = false;\n  if (ctx.atKey) ctx.atKey = false;\n  let offset = bs.offset;\n  let commentEnd = null;\n  for (const {\n    start,\n    value\n  } of bs.items) {\n    const props = resolveProps(start, {\n      indicator: 'seq-item-ind',\n      next: value,\n      offset,\n      onError,\n      parentIndent: bs.indent,\n      startOnNewline: true\n    });\n    if (!props.found) {\n      if (props.anchor || props.tag || value) {\n        if (value && value.type === 'block-seq') onError(props.end, 'BAD_INDENT', 'All sequence items must start at the same column');else onError(offset, 'MISSING_CHAR', 'Sequence item without - indicator');\n      } else {\n        commentEnd = props.end;\n        if (props.comment) seq.comment = props.comment;\n        continue;\n      }\n    }\n    const node = value ? composeNode(ctx, value, props, onError) : composeEmptyNode(ctx, props.end, start, null, props, onError);\n    if (ctx.schema.compat) flowIndentCheck(bs.indent, value, onError);\n    offset = node.range[2];\n    seq.items.push(node);\n  }\n  seq.range = [bs.offset, offset, commentEnd ?? offset];\n  return seq;\n}\nexport { resolveBlockSeq };","function resolveEnd(end, offset, reqSpace, onError) {\n  let comment = '';\n  if (end) {\n    let hasSpace = false;\n    let sep = '';\n    for (const token of end) {\n      const {\n        source,\n        type\n      } = token;\n      switch (type) {\n        case 'space':\n          hasSpace = true;\n          break;\n        case 'comment':\n          {\n            if (reqSpace && !hasSpace) onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n            const cb = source.substring(1) || ' ';\n            if (!comment) comment = cb;else comment += sep + cb;\n            sep = '';\n            break;\n          }\n        case 'newline':\n          if (comment) sep += source;\n          hasSpace = true;\n          break;\n        default:\n          onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${type} at node end`);\n      }\n      offset += source.length;\n    }\n  }\n  return {\n    comment,\n    offset\n  };\n}\nexport { resolveEnd };","import { isPair } from '../nodes/identity.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { mapIncludes } from './util-map-includes.js';\nconst blockMsg = 'Block collections are not allowed within flow collections';\nconst isBlock = token => token && (token.type === 'block-map' || token.type === 'block-seq');\nfunction resolveFlowCollection({\n  composeNode,\n  composeEmptyNode\n}, ctx, fc, onError, tag) {\n  const isMap = fc.start.source === '{';\n  const fcName = isMap ? 'flow map' : 'flow sequence';\n  const NodeClass = tag?.nodeClass ?? (isMap ? YAMLMap : YAMLSeq);\n  const coll = new NodeClass(ctx.schema);\n  coll.flow = true;\n  const atRoot = ctx.atRoot;\n  if (atRoot) ctx.atRoot = false;\n  if (ctx.atKey) ctx.atKey = false;\n  let offset = fc.offset + fc.start.source.length;\n  for (let i = 0; i < fc.items.length; ++i) {\n    const collItem = fc.items[i];\n    const {\n      start,\n      key,\n      sep,\n      value\n    } = collItem;\n    const props = resolveProps(start, {\n      flow: fcName,\n      indicator: 'explicit-key-ind',\n      next: key ?? sep?.[0],\n      offset,\n      onError,\n      parentIndent: fc.indent,\n      startOnNewline: false\n    });\n    if (!props.found) {\n      if (!props.anchor && !props.tag && !sep && !value) {\n        if (i === 0 && props.comma) onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);else if (i < fc.items.length - 1) onError(props.start, 'UNEXPECTED_TOKEN', `Unexpected empty item in ${fcName}`);\n        if (props.comment) {\n          if (coll.comment) coll.comment += '\\n' + props.comment;else coll.comment = props.comment;\n        }\n        offset = props.end;\n        continue;\n      }\n      if (!isMap && ctx.options.strict && containsNewline(key)) onError(key,\n      // checked by containsNewline()\n      'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n    }\n    if (i === 0) {\n      if (props.comma) onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n    } else {\n      if (!props.comma) onError(props.start, 'MISSING_CHAR', `Missing , between ${fcName} items`);\n      if (props.comment) {\n        let prevItemComment = '';\n        loop: for (const st of start) {\n          switch (st.type) {\n            case 'comma':\n            case 'space':\n              break;\n            case 'comment':\n              prevItemComment = st.source.substring(1);\n              break loop;\n            default:\n              break loop;\n          }\n        }\n        if (prevItemComment) {\n          let prev = coll.items[coll.items.length - 1];\n          if (isPair(prev)) prev = prev.value ?? prev.key;\n          if (prev.comment) prev.comment += '\\n' + prevItemComment;else prev.comment = prevItemComment;\n          props.comment = props.comment.substring(prevItemComment.length + 1);\n        }\n      }\n    }\n    if (!isMap && !sep && !props.found) {\n      // item is a value in a seq\n      // → key & sep are empty, start does not include ? or :\n      const valueNode = value ? composeNode(ctx, value, props, onError) : composeEmptyNode(ctx, props.end, sep, null, props, onError);\n      coll.items.push(valueNode);\n      offset = valueNode.range[2];\n      if (isBlock(value)) onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n    } else {\n      // item is a key+value pair\n      // key value\n      ctx.atKey = true;\n      const keyStart = props.end;\n      const keyNode = key ? composeNode(ctx, key, props, onError) : composeEmptyNode(ctx, keyStart, start, null, props, onError);\n      if (isBlock(key)) onError(keyNode.range, 'BLOCK_IN_FLOW', blockMsg);\n      ctx.atKey = false;\n      // value properties\n      const valueProps = resolveProps(sep ?? [], {\n        flow: fcName,\n        indicator: 'map-value-ind',\n        next: value,\n        offset: keyNode.range[2],\n        onError,\n        parentIndent: fc.indent,\n        startOnNewline: false\n      });\n      if (valueProps.found) {\n        if (!isMap && !props.found && ctx.options.strict) {\n          if (sep) for (const st of sep) {\n            if (st === valueProps.found) break;\n            if (st.type === 'newline') {\n              onError(st, 'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n              break;\n            }\n          }\n          if (props.start < valueProps.found.offset - 1024) onError(valueProps.found, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit flow sequence key');\n        }\n      } else if (value) {\n        if ('source' in value && value.source && value.source[0] === ':') onError(value, 'MISSING_CHAR', `Missing space after : in ${fcName}`);else onError(valueProps.start, 'MISSING_CHAR', `Missing , or : between ${fcName} items`);\n      }\n      // value value\n      const valueNode = value ? composeNode(ctx, value, valueProps, onError) : valueProps.found ? composeEmptyNode(ctx, valueProps.end, sep, null, valueProps, onError) : null;\n      if (valueNode) {\n        if (isBlock(value)) onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n      } else if (valueProps.comment) {\n        if (keyNode.comment) keyNode.comment += '\\n' + valueProps.comment;else keyNode.comment = valueProps.comment;\n      }\n      const pair = new Pair(keyNode, valueNode);\n      if (ctx.options.keepSourceTokens) pair.srcToken = collItem;\n      if (isMap) {\n        const map = coll;\n        if (mapIncludes(ctx, map.items, keyNode)) onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n        map.items.push(pair);\n      } else {\n        const map = new YAMLMap(ctx.schema);\n        map.flow = true;\n        map.items.push(pair);\n        const endRange = (valueNode ?? keyNode).range;\n        map.range = [keyNode.range[0], endRange[1], endRange[2]];\n        coll.items.push(map);\n      }\n      offset = valueNode ? valueNode.range[2] : valueProps.end;\n    }\n  }\n  const expectedEnd = isMap ? '}' : ']';\n  const [ce, ...ee] = fc.end;\n  let cePos = offset;\n  if (ce && ce.source === expectedEnd) cePos = ce.offset + ce.source.length;else {\n    const name = fcName[0].toUpperCase() + fcName.substring(1);\n    const msg = atRoot ? `${name} must end with a ${expectedEnd}` : `${name} in block collection must be sufficiently indented and end with a ${expectedEnd}`;\n    onError(offset, atRoot ? 'MISSING_CHAR' : 'BAD_INDENT', msg);\n    if (ce && ce.source.length !== 1) ee.unshift(ce);\n  }\n  if (ee.length > 0) {\n    const end = resolveEnd(ee, cePos, ctx.options.strict, onError);\n    if (end.comment) {\n      if (coll.comment) coll.comment += '\\n' + end.comment;else coll.comment = end.comment;\n    }\n    coll.range = [fc.offset, cePos, end.offset];\n  } else {\n    coll.range = [fc.offset, cePos, cePos];\n  }\n  return coll;\n}\nexport { resolveFlowCollection };","import { isNode } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveBlockMap } from './resolve-block-map.js';\nimport { resolveBlockSeq } from './resolve-block-seq.js';\nimport { resolveFlowCollection } from './resolve-flow-collection.js';\nfunction resolveCollection(CN, ctx, token, onError, tagName, tag) {\n  const coll = token.type === 'block-map' ? resolveBlockMap(CN, ctx, token, onError, tag) : token.type === 'block-seq' ? resolveBlockSeq(CN, ctx, token, onError, tag) : resolveFlowCollection(CN, ctx, token, onError, tag);\n  const Coll = coll.constructor;\n  // If we got a tagName matching the class, or the tag name is '!',\n  // then use the tagName from the node class used to create it.\n  if (tagName === '!' || tagName === Coll.tagName) {\n    coll.tag = Coll.tagName;\n    return coll;\n  }\n  if (tagName) coll.tag = tagName;\n  return coll;\n}\nfunction composeCollection(CN, ctx, token, props, onError) {\n  const tagToken = props.tag;\n  const tagName = !tagToken ? null : ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg));\n  if (token.type === 'block-seq') {\n    const {\n      anchor,\n      newlineAfterProp: nl\n    } = props;\n    const lastProp = anchor && tagToken ? anchor.offset > tagToken.offset ? anchor : tagToken : anchor ?? tagToken;\n    if (lastProp && (!nl || nl.offset < lastProp.offset)) {\n      const message = 'Missing newline after block sequence props';\n      onError(lastProp, 'MISSING_CHAR', message);\n    }\n  }\n  const expType = token.type === 'block-map' ? 'map' : token.type === 'block-seq' ? 'seq' : token.start.source === '{' ? 'map' : 'seq';\n  // shortcut: check if it's a generic YAMLMap or YAMLSeq\n  // before jumping into the custom tag logic.\n  if (!tagToken || !tagName || tagName === '!' || tagName === YAMLMap.tagName && expType === 'map' || tagName === YAMLSeq.tagName && expType === 'seq') {\n    return resolveCollection(CN, ctx, token, onError, tagName);\n  }\n  let tag = ctx.schema.tags.find(t => t.tag === tagName && t.collection === expType);\n  if (!tag) {\n    const kt = ctx.schema.knownTags[tagName];\n    if (kt && kt.collection === expType) {\n      ctx.schema.tags.push(Object.assign({}, kt, {\n        default: false\n      }));\n      tag = kt;\n    } else {\n      if (kt?.collection) {\n        onError(tagToken, 'BAD_COLLECTION_TYPE', `${kt.tag} used for ${expType} collection, but expects ${kt.collection}`, true);\n      } else {\n        onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, true);\n      }\n      return resolveCollection(CN, ctx, token, onError, tagName);\n    }\n  }\n  const coll = resolveCollection(CN, ctx, token, onError, tagName, tag);\n  const res = tag.resolve?.(coll, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg), ctx.options) ?? coll;\n  const node = isNode(res) ? res : new Scalar(res);\n  node.range = coll.range;\n  node.tag = tagName;\n  if (tag?.format) node.format = tag.format;\n  return node;\n}\nexport { composeCollection };","import { Scalar } from '../nodes/Scalar.js';\nfunction resolveBlockScalar(ctx, scalar, onError) {\n  const start = scalar.offset;\n  const header = parseBlockScalarHeader(scalar, ctx.options.strict, onError);\n  if (!header) return {\n    value: '',\n    type: null,\n    comment: '',\n    range: [start, start, start]\n  };\n  const type = header.mode === '>' ? Scalar.BLOCK_FOLDED : Scalar.BLOCK_LITERAL;\n  const lines = scalar.source ? splitLines(scalar.source) : [];\n  // determine the end of content & start of chomping\n  let chompStart = lines.length;\n  for (let i = lines.length - 1; i >= 0; --i) {\n    const content = lines[i][1];\n    if (content === '' || content === '\\r') chompStart = i;else break;\n  }\n  // shortcut for empty contents\n  if (chompStart === 0) {\n    const value = header.chomp === '+' && lines.length > 0 ? '\\n'.repeat(Math.max(1, lines.length - 1)) : '';\n    let end = start + header.length;\n    if (scalar.source) end += scalar.source.length;\n    return {\n      value,\n      type,\n      comment: header.comment,\n      range: [start, end, end]\n    };\n  }\n  // find the indentation level to trim from start\n  let trimIndent = scalar.indent + header.indent;\n  let offset = scalar.offset + header.length;\n  let contentStart = 0;\n  for (let i = 0; i < chompStart; ++i) {\n    const [indent, content] = lines[i];\n    if (content === '' || content === '\\r') {\n      if (header.indent === 0 && indent.length > trimIndent) trimIndent = indent.length;\n    } else {\n      if (indent.length < trimIndent) {\n        const message = 'Block scalars with more-indented leading empty lines must use an explicit indentation indicator';\n        onError(offset + indent.length, 'MISSING_CHAR', message);\n      }\n      if (header.indent === 0) trimIndent = indent.length;\n      contentStart = i;\n      if (trimIndent === 0 && !ctx.atRoot) {\n        const message = 'Block scalar values in collections must be indented';\n        onError(offset, 'BAD_INDENT', message);\n      }\n      break;\n    }\n    offset += indent.length + content.length + 1;\n  }\n  // include trailing more-indented empty lines in content\n  for (let i = lines.length - 1; i >= chompStart; --i) {\n    if (lines[i][0].length > trimIndent) chompStart = i + 1;\n  }\n  let value = '';\n  let sep = '';\n  let prevMoreIndented = false;\n  // leading whitespace is kept intact\n  for (let i = 0; i < contentStart; ++i) value += lines[i][0].slice(trimIndent) + '\\n';\n  for (let i = contentStart; i < chompStart; ++i) {\n    let [indent, content] = lines[i];\n    offset += indent.length + content.length + 1;\n    const crlf = content[content.length - 1] === '\\r';\n    if (crlf) content = content.slice(0, -1);\n    /* istanbul ignore if already caught in lexer */\n    if (content && indent.length < trimIndent) {\n      const src = header.indent ? 'explicit indentation indicator' : 'first line';\n      const message = `Block scalar lines must not be less indented than their ${src}`;\n      onError(offset - content.length - (crlf ? 2 : 1), 'BAD_INDENT', message);\n      indent = '';\n    }\n    if (type === Scalar.BLOCK_LITERAL) {\n      value += sep + indent.slice(trimIndent) + content;\n      sep = '\\n';\n    } else if (indent.length > trimIndent || content[0] === '\\t') {\n      // more-indented content within a folded block\n      if (sep === ' ') sep = '\\n';else if (!prevMoreIndented && sep === '\\n') sep = '\\n\\n';\n      value += sep + indent.slice(trimIndent) + content;\n      sep = '\\n';\n      prevMoreIndented = true;\n    } else if (content === '') {\n      // empty line\n      if (sep === '\\n') value += '\\n';else sep = '\\n';\n    } else {\n      value += sep + content;\n      sep = ' ';\n      prevMoreIndented = false;\n    }\n  }\n  switch (header.chomp) {\n    case '-':\n      break;\n    case '+':\n      for (let i = chompStart; i < lines.length; ++i) value += '\\n' + lines[i][0].slice(trimIndent);\n      if (value[value.length - 1] !== '\\n') value += '\\n';\n      break;\n    default:\n      value += '\\n';\n  }\n  const end = start + header.length + scalar.source.length;\n  return {\n    value,\n    type,\n    comment: header.comment,\n    range: [start, end, end]\n  };\n}\nfunction parseBlockScalarHeader({\n  offset,\n  props\n}, strict, onError) {\n  /* istanbul ignore if should not happen */\n  if (props[0].type !== 'block-scalar-header') {\n    onError(props[0], 'IMPOSSIBLE', 'Block scalar header not found');\n    return null;\n  }\n  const {\n    source\n  } = props[0];\n  const mode = source[0];\n  let indent = 0;\n  let chomp = '';\n  let error = -1;\n  for (let i = 1; i < source.length; ++i) {\n    const ch = source[i];\n    if (!chomp && (ch === '-' || ch === '+')) chomp = ch;else {\n      const n = Number(ch);\n      if (!indent && n) indent = n;else if (error === -1) error = offset + i;\n    }\n  }\n  if (error !== -1) onError(error, 'UNEXPECTED_TOKEN', `Block scalar header includes extra characters: ${source}`);\n  let hasSpace = false;\n  let comment = '';\n  let length = source.length;\n  for (let i = 1; i < props.length; ++i) {\n    const token = props[i];\n    switch (token.type) {\n      case 'space':\n        hasSpace = true;\n      // fallthrough\n      case 'newline':\n        length += token.source.length;\n        break;\n      case 'comment':\n        if (strict && !hasSpace) {\n          const message = 'Comments must be separated from other tokens by white space characters';\n          onError(token, 'MISSING_CHAR', message);\n        }\n        length += token.source.length;\n        comment = token.source.substring(1);\n        break;\n      case 'error':\n        onError(token, 'UNEXPECTED_TOKEN', token.message);\n        length += token.source.length;\n        break;\n      /* istanbul ignore next should not happen */\n      default:\n        {\n          const message = `Unexpected token in block scalar header: ${token.type}`;\n          onError(token, 'UNEXPECTED_TOKEN', message);\n          const ts = token.source;\n          if (ts && typeof ts === 'string') length += ts.length;\n        }\n    }\n  }\n  return {\n    mode,\n    indent,\n    chomp,\n    comment,\n    length\n  };\n}\n/** @returns Array of lines split up as `[indent, content]` */\nfunction splitLines(source) {\n  const split = source.split(/\\n( *)/);\n  const first = split[0];\n  const m = first.match(/^( *)/);\n  const line0 = m?.[1] ? [m[1], first.slice(m[1].length)] : ['', first];\n  const lines = [line0];\n  for (let i = 1; i < split.length; i += 2) lines.push([split[i], split[i + 1]]);\n  return lines;\n}\nexport { resolveBlockScalar };","import { Scalar } from '../nodes/Scalar.js';\nimport { resolveEnd } from './resolve-end.js';\nfunction resolveFlowScalar(scalar, strict, onError) {\n  const {\n    offset,\n    type,\n    source,\n    end\n  } = scalar;\n  let _type;\n  let value;\n  const _onError = (rel, code, msg) => onError(offset + rel, code, msg);\n  switch (type) {\n    case 'scalar':\n      _type = Scalar.PLAIN;\n      value = plainValue(source, _onError);\n      break;\n    case 'single-quoted-scalar':\n      _type = Scalar.QUOTE_SINGLE;\n      value = singleQuotedValue(source, _onError);\n      break;\n    case 'double-quoted-scalar':\n      _type = Scalar.QUOTE_DOUBLE;\n      value = doubleQuotedValue(source, _onError);\n      break;\n    /* istanbul ignore next should not happen */\n    default:\n      onError(scalar, 'UNEXPECTED_TOKEN', `Expected a flow scalar value, but found: ${type}`);\n      return {\n        value: '',\n        type: null,\n        comment: '',\n        range: [offset, offset + source.length, offset + source.length]\n      };\n  }\n  const valueEnd = offset + source.length;\n  const re = resolveEnd(end, valueEnd, strict, onError);\n  return {\n    value,\n    type: _type,\n    comment: re.comment,\n    range: [offset, valueEnd, re.offset]\n  };\n}\nfunction plainValue(source, onError) {\n  let badChar = '';\n  switch (source[0]) {\n    /* istanbul ignore next should not happen */\n    case '\\t':\n      badChar = 'a tab character';\n      break;\n    case ',':\n      badChar = 'flow indicator character ,';\n      break;\n    case '%':\n      badChar = 'directive indicator character %';\n      break;\n    case '|':\n    case '>':\n      {\n        badChar = `block scalar indicator ${source[0]}`;\n        break;\n      }\n    case '@':\n    case '`':\n      {\n        badChar = `reserved character ${source[0]}`;\n        break;\n      }\n  }\n  if (badChar) onError(0, 'BAD_SCALAR_START', `Plain value cannot start with ${badChar}`);\n  return foldLines(source);\n}\nfunction singleQuotedValue(source, onError) {\n  if (source[source.length - 1] !== \"'\" || source.length === 1) onError(source.length, 'MISSING_CHAR', \"Missing closing 'quote\");\n  return foldLines(source.slice(1, -1)).replace(/''/g, \"'\");\n}\nfunction foldLines(source) {\n  /**\n   * The negative lookbehind here and in the `re` RegExp is to\n   * prevent causing a polynomial search time in certain cases.\n   *\n   * The try-catch is for Safari, which doesn't support this yet:\n   * https://caniuse.com/js-regexp-lookbehind\n   */\n  let first, line;\n  try {\n    first = new RegExp('(.*?)(?<![ \\t])[ \\t]*\\r?\\n', 'sy');\n    line = new RegExp('[ \\t]*(.*?)(?:(?<![ \\t])[ \\t]*)?\\r?\\n', 'sy');\n  } catch {\n    first = /(.*?)[ \\t]*\\r?\\n/sy;\n    line = /[ \\t]*(.*?)[ \\t]*\\r?\\n/sy;\n  }\n  let match = first.exec(source);\n  if (!match) return source;\n  let res = match[1];\n  let sep = ' ';\n  let pos = first.lastIndex;\n  line.lastIndex = pos;\n  while (match = line.exec(source)) {\n    if (match[1] === '') {\n      if (sep === '\\n') res += sep;else sep = '\\n';\n    } else {\n      res += sep + match[1];\n      sep = ' ';\n    }\n    pos = line.lastIndex;\n  }\n  const last = /[ \\t]*(.*)/sy;\n  last.lastIndex = pos;\n  match = last.exec(source);\n  return res + sep + (match?.[1] ?? '');\n}\nfunction doubleQuotedValue(source, onError) {\n  let res = '';\n  for (let i = 1; i < source.length - 1; ++i) {\n    const ch = source[i];\n    if (ch === '\\r' && source[i + 1] === '\\n') continue;\n    if (ch === '\\n') {\n      const {\n        fold,\n        offset\n      } = foldNewline(source, i);\n      res += fold;\n      i = offset;\n    } else if (ch === '\\\\') {\n      let next = source[++i];\n      const cc = escapeCodes[next];\n      if (cc) res += cc;else if (next === '\\n') {\n        // skip escaped newlines, but still trim the following line\n        next = source[i + 1];\n        while (next === ' ' || next === '\\t') next = source[++i + 1];\n      } else if (next === '\\r' && source[i + 1] === '\\n') {\n        // skip escaped CRLF newlines, but still trim the following line\n        next = source[++i + 1];\n        while (next === ' ' || next === '\\t') next = source[++i + 1];\n      } else if (next === 'x' || next === 'u' || next === 'U') {\n        const length = {\n          x: 2,\n          u: 4,\n          U: 8\n        }[next];\n        res += parseCharCode(source, i + 1, length, onError);\n        i += length;\n      } else {\n        const raw = source.substr(i - 1, 2);\n        onError(i - 1, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n        res += raw;\n      }\n    } else if (ch === ' ' || ch === '\\t') {\n      // trim trailing whitespace\n      const wsStart = i;\n      let next = source[i + 1];\n      while (next === ' ' || next === '\\t') next = source[++i + 1];\n      if (next !== '\\n' && !(next === '\\r' && source[i + 2] === '\\n')) res += i > wsStart ? source.slice(wsStart, i + 1) : ch;\n    } else {\n      res += ch;\n    }\n  }\n  if (source[source.length - 1] !== '\"' || source.length === 1) onError(source.length, 'MISSING_CHAR', 'Missing closing \"quote');\n  return res;\n}\n/**\n * Fold a single newline into a space, multiple newlines to N - 1 newlines.\n * Presumes `source[offset] === '\\n'`\n */\nfunction foldNewline(source, offset) {\n  let fold = '';\n  let ch = source[offset + 1];\n  while (ch === ' ' || ch === '\\t' || ch === '\\n' || ch === '\\r') {\n    if (ch === '\\r' && source[offset + 2] !== '\\n') break;\n    if (ch === '\\n') fold += '\\n';\n    offset += 1;\n    ch = source[offset + 1];\n  }\n  if (!fold) fold = ' ';\n  return {\n    fold,\n    offset\n  };\n}\nconst escapeCodes = {\n  '0': '\\0',\n  // null character\n  a: '\\x07',\n  // bell character\n  b: '\\b',\n  // backspace\n  e: '\\x1b',\n  // escape character\n  f: '\\f',\n  // form feed\n  n: '\\n',\n  // line feed\n  r: '\\r',\n  // carriage return\n  t: '\\t',\n  // horizontal tab\n  v: '\\v',\n  // vertical tab\n  N: '\\u0085',\n  // Unicode next line\n  _: '\\u00a0',\n  // Unicode non-breaking space\n  L: '\\u2028',\n  // Unicode line separator\n  P: '\\u2029',\n  // Unicode paragraph separator\n  ' ': ' ',\n  '\"': '\"',\n  '/': '/',\n  '\\\\': '\\\\',\n  '\\t': '\\t'\n};\nfunction parseCharCode(source, offset, length, onError) {\n  const cc = source.substr(offset, length);\n  const ok = cc.length === length && /^[0-9a-fA-F]+$/.test(cc);\n  const code = ok ? parseInt(cc, 16) : NaN;\n  if (isNaN(code)) {\n    const raw = source.substr(offset - 2, length + 2);\n    onError(offset - 2, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n    return raw;\n  }\n  return String.fromCodePoint(code);\n}\nexport { resolveFlowScalar };","import { isScalar, SCALAR } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { resolveBlockScalar } from './resolve-block-scalar.js';\nimport { resolveFlowScalar } from './resolve-flow-scalar.js';\nfunction composeScalar(ctx, token, tagToken, onError) {\n  const {\n    value,\n    type,\n    comment,\n    range\n  } = token.type === 'block-scalar' ? resolveBlockScalar(ctx, token, onError) : resolveFlowScalar(token, ctx.options.strict, onError);\n  const tagName = tagToken ? ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg)) : null;\n  let tag;\n  if (ctx.options.stringKeys && ctx.atKey) {\n    tag = ctx.schema[SCALAR];\n  } else if (tagName) tag = findScalarTagByName(ctx.schema, value, tagName, tagToken, onError);else if (token.type === 'scalar') tag = findScalarTagByTest(ctx, value, token, onError);else tag = ctx.schema[SCALAR];\n  let scalar;\n  try {\n    const res = tag.resolve(value, msg => onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n    scalar = isScalar(res) ? res : new Scalar(res);\n  } catch (error) {\n    const msg = error instanceof Error ? error.message : String(error);\n    onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg);\n    scalar = new Scalar(value);\n  }\n  scalar.range = range;\n  scalar.source = value;\n  if (type) scalar.type = type;\n  if (tagName) scalar.tag = tagName;\n  if (tag.format) scalar.format = tag.format;\n  if (comment) scalar.comment = comment;\n  return scalar;\n}\nfunction findScalarTagByName(schema, value, tagName, tagToken, onError) {\n  if (tagName === '!') return schema[SCALAR]; // non-specific tag\n  const matchWithTest = [];\n  for (const tag of schema.tags) {\n    if (!tag.collection && tag.tag === tagName) {\n      if (tag.default && tag.test) matchWithTest.push(tag);else return tag;\n    }\n  }\n  for (const tag of matchWithTest) if (tag.test?.test(value)) return tag;\n  const kt = schema.knownTags[tagName];\n  if (kt && !kt.collection) {\n    // Ensure that the known tag is available for stringifying,\n    // but does not get used by default.\n    schema.tags.push(Object.assign({}, kt, {\n      default: false,\n      test: undefined\n    }));\n    return kt;\n  }\n  onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, tagName !== 'tag:yaml.org,2002:str');\n  return schema[SCALAR];\n}\nfunction findScalarTagByTest({\n  atKey,\n  directives,\n  schema\n}, value, token, onError) {\n  const tag = schema.tags.find(tag => (tag.default === true || atKey && tag.default === 'key') && tag.test?.test(value)) || schema[SCALAR];\n  if (schema.compat) {\n    const compat = schema.compat.find(tag => tag.default && tag.test?.test(value)) ?? schema[SCALAR];\n    if (tag.tag !== compat.tag) {\n      const ts = directives.tagString(tag.tag);\n      const cs = directives.tagString(compat.tag);\n      const msg = `Value may be parsed as either ${ts} or ${cs}`;\n      onError(token, 'TAG_RESOLVE_FAILED', msg, true);\n    }\n  }\n  return tag;\n}\nexport { composeScalar };","function emptyScalarPosition(offset, before, pos) {\n  if (before) {\n    if (pos === null) pos = before.length;\n    for (let i = pos - 1; i >= 0; --i) {\n      let st = before[i];\n      switch (st.type) {\n        case 'space':\n        case 'comment':\n        case 'newline':\n          offset -= st.source.length;\n          continue;\n      }\n      // Technically, an empty scalar is immediately after the last non-empty\n      // node, but it's more useful to place it after any whitespace.\n      st = before[++i];\n      while (st?.type === 'space') {\n        offset += st.source.length;\n        st = before[++i];\n      }\n      break;\n    }\n  }\n  return offset;\n}\nexport { emptyScalarPosition };","import { Alias } from '../nodes/Alias.js';\nimport { isScalar } from '../nodes/identity.js';\nimport { composeCollection } from './compose-collection.js';\nimport { composeScalar } from './compose-scalar.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { emptyScalarPosition } from './util-empty-scalar-position.js';\nconst CN = {\n  composeNode,\n  composeEmptyNode\n};\nfunction composeNode(ctx, token, props, onError) {\n  const atKey = ctx.atKey;\n  const {\n    spaceBefore,\n    comment,\n    anchor,\n    tag\n  } = props;\n  let node;\n  let isSrcToken = true;\n  switch (token.type) {\n    case 'alias':\n      node = composeAlias(ctx, token, onError);\n      if (anchor || tag) onError(token, 'ALIAS_PROPS', 'An alias node must not specify any properties');\n      break;\n    case 'scalar':\n    case 'single-quoted-scalar':\n    case 'double-quoted-scalar':\n    case 'block-scalar':\n      node = composeScalar(ctx, token, tag, onError);\n      if (anchor) node.anchor = anchor.source.substring(1);\n      break;\n    case 'block-map':\n    case 'block-seq':\n    case 'flow-collection':\n      node = composeCollection(CN, ctx, token, props, onError);\n      if (anchor) node.anchor = anchor.source.substring(1);\n      break;\n    default:\n      {\n        const message = token.type === 'error' ? token.message : `Unsupported token (type: ${token.type})`;\n        onError(token, 'UNEXPECTED_TOKEN', message);\n        node = composeEmptyNode(ctx, token.offset, undefined, null, props, onError);\n        isSrcToken = false;\n      }\n  }\n  if (anchor && node.anchor === '') onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n  if (atKey && ctx.options.stringKeys && (!isScalar(node) || typeof node.value !== 'string' || node.tag && node.tag !== 'tag:yaml.org,2002:str')) {\n    const msg = 'With stringKeys, all keys must be strings';\n    onError(tag ?? token, 'NON_STRING_KEY', msg);\n  }\n  if (spaceBefore) node.spaceBefore = true;\n  if (comment) {\n    if (token.type === 'scalar' && token.source === '') node.comment = comment;else node.commentBefore = comment;\n  }\n  // @ts-expect-error Type checking misses meaning of isSrcToken\n  if (ctx.options.keepSourceTokens && isSrcToken) node.srcToken = token;\n  return node;\n}\nfunction composeEmptyNode(ctx, offset, before, pos, {\n  spaceBefore,\n  comment,\n  anchor,\n  tag,\n  end\n}, onError) {\n  const token = {\n    type: 'scalar',\n    offset: emptyScalarPosition(offset, before, pos),\n    indent: -1,\n    source: ''\n  };\n  const node = composeScalar(ctx, token, tag, onError);\n  if (anchor) {\n    node.anchor = anchor.source.substring(1);\n    if (node.anchor === '') onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n  }\n  if (spaceBefore) node.spaceBefore = true;\n  if (comment) {\n    node.comment = comment;\n    node.range[2] = end;\n  }\n  return node;\n}\nfunction composeAlias({\n  options\n}, {\n  offset,\n  source,\n  end\n}, onError) {\n  const alias = new Alias(source.substring(1));\n  if (alias.source === '') onError(offset, 'BAD_ALIAS', 'Alias cannot be an empty string');\n  if (alias.source.endsWith(':')) onError(offset + source.length - 1, 'BAD_ALIAS', 'Alias ending in : is ambiguous', true);\n  const valueEnd = offset + source.length;\n  const re = resolveEnd(end, valueEnd, options.strict, onError);\n  alias.range = [offset, valueEnd, re.offset];\n  if (re.comment) alias.comment = re.comment;\n  return alias;\n}\nexport { composeEmptyNode, composeNode };","import { Document } from '../doc/Document.js';\nimport { composeNode, composeEmptyNode } from './compose-node.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\nfunction composeDoc(options, directives, {\n  offset,\n  start,\n  value,\n  end\n}, onError) {\n  const opts = Object.assign({\n    _directives: directives\n  }, options);\n  const doc = new Document(undefined, opts);\n  const ctx = {\n    atKey: false,\n    atRoot: true,\n    directives: doc.directives,\n    options: doc.options,\n    schema: doc.schema\n  };\n  const props = resolveProps(start, {\n    indicator: 'doc-start',\n    next: value ?? end?.[0],\n    offset,\n    onError,\n    parentIndent: 0,\n    startOnNewline: true\n  });\n  if (props.found) {\n    doc.directives.docStart = true;\n    if (value && (value.type === 'block-map' || value.type === 'block-seq') && !props.hasNewline) onError(props.end, 'MISSING_CHAR', 'Block collection cannot start on same line with directives-end marker');\n  }\n  // @ts-expect-error If Contents is set, let's trust the user\n  doc.contents = value ? composeNode(ctx, value, props, onError) : composeEmptyNode(ctx, props.end, start, null, props, onError);\n  const contentEnd = doc.contents.range[2];\n  const re = resolveEnd(end, contentEnd, false, onError);\n  if (re.comment) doc.comment = re.comment;\n  doc.range = [offset, contentEnd, re.offset];\n  return doc;\n}\nexport { composeDoc };","import { Directives } from '../doc/directives.js';\nimport { Document } from '../doc/Document.js';\nimport { YAMLWarning, YAMLParseError } from '../errors.js';\nimport { isCollection, isPair } from '../nodes/identity.js';\nimport { composeDoc } from './compose-doc.js';\nimport { resolveEnd } from './resolve-end.js';\nfunction getErrorPos(src) {\n  if (typeof src === 'number') return [src, src + 1];\n  if (Array.isArray(src)) return src.length === 2 ? src : [src[0], src[1]];\n  const {\n    offset,\n    source\n  } = src;\n  return [offset, offset + (typeof source === 'string' ? source.length : 1)];\n}\nfunction parsePrelude(prelude) {\n  let comment = '';\n  let atComment = false;\n  let afterEmptyLine = false;\n  for (let i = 0; i < prelude.length; ++i) {\n    const source = prelude[i];\n    switch (source[0]) {\n      case '#':\n        comment += (comment === '' ? '' : afterEmptyLine ? '\\n\\n' : '\\n') + (source.substring(1) || ' ');\n        atComment = true;\n        afterEmptyLine = false;\n        break;\n      case '%':\n        if (prelude[i + 1]?.[0] !== '#') i += 1;\n        atComment = false;\n        break;\n      default:\n        // This may be wrong after doc-end, but in that case it doesn't matter\n        if (!atComment) afterEmptyLine = true;\n        atComment = false;\n    }\n  }\n  return {\n    comment,\n    afterEmptyLine\n  };\n}\n/**\n * Compose a stream of CST nodes into a stream of YAML Documents.\n *\n * ```ts\n * import { Composer, Parser } from 'yaml'\n *\n * const src: string = ...\n * const tokens = new Parser().parse(src)\n * const docs = new Composer().compose(tokens)\n * ```\n */\nclass Composer {\n  constructor(options = {}) {\n    this.doc = null;\n    this.atDirectives = false;\n    this.prelude = [];\n    this.errors = [];\n    this.warnings = [];\n    this.onError = (source, code, message, warning) => {\n      const pos = getErrorPos(source);\n      if (warning) this.warnings.push(new YAMLWarning(pos, code, message));else this.errors.push(new YAMLParseError(pos, code, message));\n    };\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    this.directives = new Directives({\n      version: options.version || '1.2'\n    });\n    this.options = options;\n  }\n  decorate(doc, afterDoc) {\n    const {\n      comment,\n      afterEmptyLine\n    } = parsePrelude(this.prelude);\n    //console.log({ dc: doc.comment, prelude, comment })\n    if (comment) {\n      const dc = doc.contents;\n      if (afterDoc) {\n        doc.comment = doc.comment ? `${doc.comment}\\n${comment}` : comment;\n      } else if (afterEmptyLine || doc.directives.docStart || !dc) {\n        doc.commentBefore = comment;\n      } else if (isCollection(dc) && !dc.flow && dc.items.length > 0) {\n        let it = dc.items[0];\n        if (isPair(it)) it = it.key;\n        const cb = it.commentBefore;\n        it.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n      } else {\n        const cb = dc.commentBefore;\n        dc.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n      }\n    }\n    if (afterDoc) {\n      Array.prototype.push.apply(doc.errors, this.errors);\n      Array.prototype.push.apply(doc.warnings, this.warnings);\n    } else {\n      doc.errors = this.errors;\n      doc.warnings = this.warnings;\n    }\n    this.prelude = [];\n    this.errors = [];\n    this.warnings = [];\n  }\n  /**\n   * Current stream status information.\n   *\n   * Mostly useful at the end of input for an empty stream.\n   */\n  streamInfo() {\n    return {\n      comment: parsePrelude(this.prelude).comment,\n      directives: this.directives,\n      errors: this.errors,\n      warnings: this.warnings\n    };\n  }\n  /**\n   * Compose tokens into documents.\n   *\n   * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n   * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n   */\n  *compose(tokens, forceDoc = false, endOffset = -1) {\n    for (const token of tokens) yield* this.next(token);\n    yield* this.end(forceDoc, endOffset);\n  }\n  /** Advance the composer by one CST token. */\n  *next(token) {\n    switch (token.type) {\n      case 'directive':\n        this.directives.add(token.source, (offset, message, warning) => {\n          const pos = getErrorPos(token);\n          pos[0] += offset;\n          this.onError(pos, 'BAD_DIRECTIVE', message, warning);\n        });\n        this.prelude.push(token.source);\n        this.atDirectives = true;\n        break;\n      case 'document':\n        {\n          const doc = composeDoc(this.options, this.directives, token, this.onError);\n          if (this.atDirectives && !doc.directives.docStart) this.onError(token, 'MISSING_CHAR', 'Missing directives-end/doc-start indicator line');\n          this.decorate(doc, false);\n          if (this.doc) yield this.doc;\n          this.doc = doc;\n          this.atDirectives = false;\n          break;\n        }\n      case 'byte-order-mark':\n      case 'space':\n        break;\n      case 'comment':\n      case 'newline':\n        this.prelude.push(token.source);\n        break;\n      case 'error':\n        {\n          const msg = token.source ? `${token.message}: ${JSON.stringify(token.source)}` : token.message;\n          const error = new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg);\n          if (this.atDirectives || !this.doc) this.errors.push(error);else this.doc.errors.push(error);\n          break;\n        }\n      case 'doc-end':\n        {\n          if (!this.doc) {\n            const msg = 'Unexpected doc-end without preceding document';\n            this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg));\n            break;\n          }\n          this.doc.directives.docEnd = true;\n          const end = resolveEnd(token.end, token.offset + token.source.length, this.doc.options.strict, this.onError);\n          this.decorate(this.doc, true);\n          if (end.comment) {\n            const dc = this.doc.comment;\n            this.doc.comment = dc ? `${dc}\\n${end.comment}` : end.comment;\n          }\n          this.doc.range[2] = end.offset;\n          break;\n        }\n      default:\n        this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', `Unsupported token ${token.type}`));\n    }\n  }\n  /**\n   * Call at end of input to yield any remaining document.\n   *\n   * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n   * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n   */\n  *end(forceDoc = false, endOffset = -1) {\n    if (this.doc) {\n      this.decorate(this.doc, true);\n      yield this.doc;\n      this.doc = null;\n    } else if (forceDoc) {\n      const opts = Object.assign({\n        _directives: this.directives\n      }, this.options);\n      const doc = new Document(undefined, opts);\n      if (this.atDirectives) this.onError(endOffset, 'MISSING_CHAR', 'Missing directives-end indicator line');\n      doc.range = [0, endOffset, endOffset];\n      this.decorate(doc, false);\n      yield doc;\n    }\n  }\n}\nexport { Composer };","/**\n * Tracks newlines during parsing in order to provide an efficient API for\n * determining the one-indexed `{ line, col }` position for any offset\n * within the input.\n */\nclass LineCounter {\n  constructor() {\n    this.lineStarts = [];\n    /**\n     * Should be called in ascending order. Otherwise, call\n     * `lineCounter.lineStarts.sort()` before calling `linePos()`.\n     */\n    this.addNewLine = offset => this.lineStarts.push(offset);\n    /**\n     * Performs a binary search and returns the 1-indexed { line, col }\n     * position of `offset`. If `line === 0`, `addNewLine` has never been\n     * called or `offset` is before the first known newline.\n     */\n    this.linePos = offset => {\n      let low = 0;\n      let high = this.lineStarts.length;\n      while (low < high) {\n        const mid = low + high >> 1; // Math.floor((low + high) / 2)\n        if (this.lineStarts[mid] < offset) low = mid + 1;else high = mid;\n      }\n      if (this.lineStarts[low] === offset) return {\n        line: low + 1,\n        col: 1\n      };\n      if (low === 0) return {\n        line: 0,\n        col: offset\n      };\n      const start = this.lineStarts[low - 1];\n      return {\n        line: low,\n        col: offset - start + 1\n      };\n    };\n  }\n}\nexport { LineCounter };","const BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove item');\n/**\n * Apply a visitor to a CST document or item.\n *\n * Walks through the tree (depth-first) starting from the root, calling a\n * `visitor` function with two arguments when entering each item:\n *   - `item`: The current item, which included the following members:\n *     - `start: SourceToken[]` – Source tokens before the key or value,\n *       possibly including its anchor or tag.\n *     - `key?: Token | null` – Set for pair values. May then be `null`, if\n *       the key before the `:` separator is empty.\n *     - `sep?: SourceToken[]` – Source tokens between the key and the value,\n *       which should include the `:` map value indicator if `value` is set.\n *     - `value?: Token` – The value of a sequence item, or of a map pair.\n *   - `path`: The steps from the root to the current node, as an array of\n *     `['key' | 'value', number]` tuples.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this token, continue with\n *      next sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current item, then continue with the next one\n *   - `number`: Set the index of the next step. This is useful especially if\n *     the index of the current token has changed.\n *   - `function`: Define the next visitor for this item. After the original\n *     visitor is called on item entry, next visitors are called after handling\n *     a non-empty `key` and when exiting the item.\n */\nfunction visit(cst, visitor) {\n  if ('type' in cst && cst.type === 'document') cst = {\n    start: cst.start,\n    value: cst.value\n  };\n  _visit(Object.freeze([]), cst, visitor);\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current item */\nvisit.SKIP = SKIP;\n/** Remove the current item */\nvisit.REMOVE = REMOVE;\n/** Find the item at `path` from `cst` as the root */\nvisit.itemAtPath = (cst, path) => {\n  let item = cst;\n  for (const [field, index] of path) {\n    const tok = item?.[field];\n    if (tok && 'items' in tok) {\n      item = tok.items[index];\n    } else return undefined;\n  }\n  return item;\n};\n/**\n * Get the immediate parent collection of the item at `path` from `cst` as the root.\n *\n * Throws an error if the collection is not found, which should never happen if the item itself exists.\n */\nvisit.parentCollection = (cst, path) => {\n  const parent = visit.itemAtPath(cst, path.slice(0, -1));\n  const field = path[path.length - 1][0];\n  const coll = parent?.[field];\n  if (coll && 'items' in coll) return coll;\n  throw new Error('Parent collection not found');\n};\nfunction _visit(path, item, visitor) {\n  let ctrl = visitor(item, path);\n  if (typeof ctrl === 'symbol') return ctrl;\n  for (const field of ['key', 'value']) {\n    const token = item[field];\n    if (token && 'items' in token) {\n      for (let i = 0; i < token.items.length; ++i) {\n        const ci = _visit(Object.freeze(path.concat([[field, i]])), token.items[i], visitor);\n        if (typeof ci === 'number') i = ci - 1;else if (ci === BREAK) return BREAK;else if (ci === REMOVE) {\n          token.items.splice(i, 1);\n          i -= 1;\n        }\n      }\n      if (typeof ctrl === 'function' && field === 'key') ctrl = ctrl(item, path);\n    }\n  }\n  return typeof ctrl === 'function' ? ctrl(item, path) : ctrl;\n}\nexport { visit };","export { createScalarToken, resolveAsScalar, setScalarValue } from './cst-scalar.js';\nexport { stringify } from './cst-stringify.js';\nexport { visit } from './cst-visit.js';\n\n/** The byte order mark */\nconst BOM = '\\u{FEFF}';\n/** Start of doc-mode */\nconst DOCUMENT = '\\x02'; // C0: Start of Text\n/** Unexpected end of flow-mode */\nconst FLOW_END = '\\x18'; // C0: Cancel\n/** Next token is a scalar value */\nconst SCALAR = '\\x1f'; // C0: Unit Separator\n/** @returns `true` if `token` is a flow or block collection */\nconst isCollection = token => !!token && 'items' in token;\n/** @returns `true` if `token` is a flow or block scalar; not an alias */\nconst isScalar = token => !!token && (token.type === 'scalar' || token.type === 'single-quoted-scalar' || token.type === 'double-quoted-scalar' || token.type === 'block-scalar');\n/* istanbul ignore next */\n/** Get a printable representation of a lexer token */\nfunction prettyToken(token) {\n  switch (token) {\n    case BOM:\n      return '<BOM>';\n    case DOCUMENT:\n      return '<DOC>';\n    case FLOW_END:\n      return '<FLOW_END>';\n    case SCALAR:\n      return '<SCALAR>';\n    default:\n      return JSON.stringify(token);\n  }\n}\n/** Identify the type of a lexer token. May return `null` for unknown tokens. */\nfunction tokenType(source) {\n  switch (source) {\n    case BOM:\n      return 'byte-order-mark';\n    case DOCUMENT:\n      return 'doc-mode';\n    case FLOW_END:\n      return 'flow-error-end';\n    case SCALAR:\n      return 'scalar';\n    case '---':\n      return 'doc-start';\n    case '...':\n      return 'doc-end';\n    case '':\n    case '\\n':\n    case '\\r\\n':\n      return 'newline';\n    case '-':\n      return 'seq-item-ind';\n    case '?':\n      return 'explicit-key-ind';\n    case ':':\n      return 'map-value-ind';\n    case '{':\n      return 'flow-map-start';\n    case '}':\n      return 'flow-map-end';\n    case '[':\n      return 'flow-seq-start';\n    case ']':\n      return 'flow-seq-end';\n    case ',':\n      return 'comma';\n  }\n  switch (source[0]) {\n    case ' ':\n    case '\\t':\n      return 'space';\n    case '#':\n      return 'comment';\n    case '%':\n      return 'directive-line';\n    case '*':\n      return 'alias';\n    case '&':\n      return 'anchor';\n    case '!':\n      return 'tag';\n    case \"'\":\n      return 'single-quoted-scalar';\n    case '\"':\n      return 'double-quoted-scalar';\n    case '|':\n    case '>':\n      return 'block-scalar-header';\n  }\n  return null;\n}\nexport { BOM, DOCUMENT, FLOW_END, SCALAR, isCollection, isScalar, prettyToken, tokenType };","import { BOM, DOCUMENT, FLOW_END, SCALAR } from './cst.js';\n\n/*\nSTART -> stream\n\nstream\n  directive -> line-end -> stream\n  indent + line-end -> stream\n  [else] -> line-start\n\nline-end\n  comment -> line-end\n  newline -> .\n  input-end -> END\n\nline-start\n  doc-start -> doc\n  doc-end -> stream\n  [else] -> indent -> block-start\n\nblock-start\n  seq-item-start -> block-start\n  explicit-key-start -> block-start\n  map-value-start -> block-start\n  [else] -> doc\n\ndoc\n  line-end -> line-start\n  spaces -> doc\n  anchor -> doc\n  tag -> doc\n  flow-start -> flow -> doc\n  flow-end -> error -> doc\n  seq-item-start -> error -> doc\n  explicit-key-start -> error -> doc\n  map-value-start -> doc\n  alias -> doc\n  quote-start -> quoted-scalar -> doc\n  block-scalar-header -> line-end -> block-scalar(min) -> line-start\n  [else] -> plain-scalar(false, min) -> doc\n\nflow\n  line-end -> flow\n  spaces -> flow\n  anchor -> flow\n  tag -> flow\n  flow-start -> flow -> flow\n  flow-end -> .\n  seq-item-start -> error -> flow\n  explicit-key-start -> flow\n  map-value-start -> flow\n  alias -> flow\n  quote-start -> quoted-scalar -> flow\n  comma -> flow\n  [else] -> plain-scalar(true, 0) -> flow\n\nquoted-scalar\n  quote-end -> .\n  [else] -> quoted-scalar\n\nblock-scalar(min)\n  newline + peek(indent < min) -> .\n  [else] -> block-scalar(min)\n\nplain-scalar(is-flow, min)\n  scalar-end(is-flow) -> .\n  peek(newline + (indent < min)) -> .\n  [else] -> plain-scalar(min)\n*/\nfunction isEmpty(ch) {\n  switch (ch) {\n    case undefined:\n    case ' ':\n    case '\\n':\n    case '\\r':\n    case '\\t':\n      return true;\n    default:\n      return false;\n  }\n}\nconst hexDigits = new Set('0123456789ABCDEFabcdef');\nconst tagChars = new Set(\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-#;/?:@&=+$_.!~*'()\");\nconst flowIndicatorChars = new Set(',[]{}');\nconst invalidAnchorChars = new Set(' ,[]{}\\n\\r\\t');\nconst isNotAnchorChar = ch => !ch || invalidAnchorChars.has(ch);\n/**\n * Splits an input string into lexical tokens, i.e. smaller strings that are\n * easily identifiable by `tokens.tokenType()`.\n *\n * Lexing starts always in a \"stream\" context. Incomplete input may be buffered\n * until a complete token can be emitted.\n *\n * In addition to slices of the original input, the following control characters\n * may also be emitted:\n *\n * - `\\x02` (Start of Text): A document starts with the next token\n * - `\\x18` (Cancel): Unexpected end of flow-mode (indicates an error)\n * - `\\x1f` (Unit Separator): Next token is a scalar value\n * - `\\u{FEFF}` (Byte order mark): Emitted separately outside documents\n */\nclass Lexer {\n  constructor() {\n    /**\n     * Flag indicating whether the end of the current buffer marks the end of\n     * all input\n     */\n    this.atEnd = false;\n    /**\n     * Explicit indent set in block scalar header, as an offset from the current\n     * minimum indent, so e.g. set to 1 from a header `|2+`. Set to -1 if not\n     * explicitly set.\n     */\n    this.blockScalarIndent = -1;\n    /**\n     * Block scalars that include a + (keep) chomping indicator in their header\n     * include trailing empty lines, which are otherwise excluded from the\n     * scalar's contents.\n     */\n    this.blockScalarKeep = false;\n    /** Current input */\n    this.buffer = '';\n    /**\n     * Flag noting whether the map value indicator : can immediately follow this\n     * node within a flow context.\n     */\n    this.flowKey = false;\n    /** Count of surrounding flow collection levels. */\n    this.flowLevel = 0;\n    /**\n     * Minimum level of indentation required for next lines to be parsed as a\n     * part of the current scalar value.\n     */\n    this.indentNext = 0;\n    /** Indentation level of the current line. */\n    this.indentValue = 0;\n    /** Position of the next \\n character. */\n    this.lineEndPos = null;\n    /** Stores the state of the lexer if reaching the end of incpomplete input */\n    this.next = null;\n    /** A pointer to `buffer`; the current position of the lexer. */\n    this.pos = 0;\n  }\n  /**\n   * Generate YAML tokens from the `source` string. If `incomplete`,\n   * a part of the last line may be left as a buffer for the next call.\n   *\n   * @returns A generator of lexical tokens\n   */\n  *lex(source, incomplete = false) {\n    if (source) {\n      if (typeof source !== 'string') throw TypeError('source is not a string');\n      this.buffer = this.buffer ? this.buffer + source : source;\n      this.lineEndPos = null;\n    }\n    this.atEnd = !incomplete;\n    let next = this.next ?? 'stream';\n    while (next && (incomplete || this.hasChars(1))) next = yield* this.parseNext(next);\n  }\n  atLineEnd() {\n    let i = this.pos;\n    let ch = this.buffer[i];\n    while (ch === ' ' || ch === '\\t') ch = this.buffer[++i];\n    if (!ch || ch === '#' || ch === '\\n') return true;\n    if (ch === '\\r') return this.buffer[i + 1] === '\\n';\n    return false;\n  }\n  charAt(n) {\n    return this.buffer[this.pos + n];\n  }\n  continueScalar(offset) {\n    let ch = this.buffer[offset];\n    if (this.indentNext > 0) {\n      let indent = 0;\n      while (ch === ' ') ch = this.buffer[++indent + offset];\n      if (ch === '\\r') {\n        const next = this.buffer[indent + offset + 1];\n        if (next === '\\n' || !next && !this.atEnd) return offset + indent + 1;\n      }\n      return ch === '\\n' || indent >= this.indentNext || !ch && !this.atEnd ? offset + indent : -1;\n    }\n    if (ch === '-' || ch === '.') {\n      const dt = this.buffer.substr(offset, 3);\n      if ((dt === '---' || dt === '...') && isEmpty(this.buffer[offset + 3])) return -1;\n    }\n    return offset;\n  }\n  getLine() {\n    let end = this.lineEndPos;\n    if (typeof end !== 'number' || end !== -1 && end < this.pos) {\n      end = this.buffer.indexOf('\\n', this.pos);\n      this.lineEndPos = end;\n    }\n    if (end === -1) return this.atEnd ? this.buffer.substring(this.pos) : null;\n    if (this.buffer[end - 1] === '\\r') end -= 1;\n    return this.buffer.substring(this.pos, end);\n  }\n  hasChars(n) {\n    return this.pos + n <= this.buffer.length;\n  }\n  setNext(state) {\n    this.buffer = this.buffer.substring(this.pos);\n    this.pos = 0;\n    this.lineEndPos = null;\n    this.next = state;\n    return null;\n  }\n  peek(n) {\n    return this.buffer.substr(this.pos, n);\n  }\n  *parseNext(next) {\n    switch (next) {\n      case 'stream':\n        return yield* this.parseStream();\n      case 'line-start':\n        return yield* this.parseLineStart();\n      case 'block-start':\n        return yield* this.parseBlockStart();\n      case 'doc':\n        return yield* this.parseDocument();\n      case 'flow':\n        return yield* this.parseFlowCollection();\n      case 'quoted-scalar':\n        return yield* this.parseQuotedScalar();\n      case 'block-scalar':\n        return yield* this.parseBlockScalar();\n      case 'plain-scalar':\n        return yield* this.parsePlainScalar();\n    }\n  }\n  *parseStream() {\n    let line = this.getLine();\n    if (line === null) return this.setNext('stream');\n    if (line[0] === BOM) {\n      yield* this.pushCount(1);\n      line = line.substring(1);\n    }\n    if (line[0] === '%') {\n      let dirEnd = line.length;\n      let cs = line.indexOf('#');\n      while (cs !== -1) {\n        const ch = line[cs - 1];\n        if (ch === ' ' || ch === '\\t') {\n          dirEnd = cs - 1;\n          break;\n        } else {\n          cs = line.indexOf('#', cs + 1);\n        }\n      }\n      while (true) {\n        const ch = line[dirEnd - 1];\n        if (ch === ' ' || ch === '\\t') dirEnd -= 1;else break;\n      }\n      const n = (yield* this.pushCount(dirEnd)) + (yield* this.pushSpaces(true));\n      yield* this.pushCount(line.length - n); // possible comment\n      this.pushNewline();\n      return 'stream';\n    }\n    if (this.atLineEnd()) {\n      const sp = yield* this.pushSpaces(true);\n      yield* this.pushCount(line.length - sp);\n      yield* this.pushNewline();\n      return 'stream';\n    }\n    yield DOCUMENT;\n    return yield* this.parseLineStart();\n  }\n  *parseLineStart() {\n    const ch = this.charAt(0);\n    if (!ch && !this.atEnd) return this.setNext('line-start');\n    if (ch === '-' || ch === '.') {\n      if (!this.atEnd && !this.hasChars(4)) return this.setNext('line-start');\n      const s = this.peek(3);\n      if ((s === '---' || s === '...') && isEmpty(this.charAt(3))) {\n        yield* this.pushCount(3);\n        this.indentValue = 0;\n        this.indentNext = 0;\n        return s === '---' ? 'doc' : 'stream';\n      }\n    }\n    this.indentValue = yield* this.pushSpaces(false);\n    if (this.indentNext > this.indentValue && !isEmpty(this.charAt(1))) this.indentNext = this.indentValue;\n    return yield* this.parseBlockStart();\n  }\n  *parseBlockStart() {\n    const [ch0, ch1] = this.peek(2);\n    if (!ch1 && !this.atEnd) return this.setNext('block-start');\n    if ((ch0 === '-' || ch0 === '?' || ch0 === ':') && isEmpty(ch1)) {\n      const n = (yield* this.pushCount(1)) + (yield* this.pushSpaces(true));\n      this.indentNext = this.indentValue + 1;\n      this.indentValue += n;\n      return yield* this.parseBlockStart();\n    }\n    return 'doc';\n  }\n  *parseDocument() {\n    yield* this.pushSpaces(true);\n    const line = this.getLine();\n    if (line === null) return this.setNext('doc');\n    let n = yield* this.pushIndicators();\n    switch (line[n]) {\n      case '#':\n        yield* this.pushCount(line.length - n);\n      // fallthrough\n      case undefined:\n        yield* this.pushNewline();\n        return yield* this.parseLineStart();\n      case '{':\n      case '[':\n        yield* this.pushCount(1);\n        this.flowKey = false;\n        this.flowLevel = 1;\n        return 'flow';\n      case '}':\n      case ']':\n        // this is an error\n        yield* this.pushCount(1);\n        return 'doc';\n      case '*':\n        yield* this.pushUntil(isNotAnchorChar);\n        return 'doc';\n      case '\"':\n      case \"'\":\n        return yield* this.parseQuotedScalar();\n      case '|':\n      case '>':\n        n += yield* this.parseBlockScalarHeader();\n        n += yield* this.pushSpaces(true);\n        yield* this.pushCount(line.length - n);\n        yield* this.pushNewline();\n        return yield* this.parseBlockScalar();\n      default:\n        return yield* this.parsePlainScalar();\n    }\n  }\n  *parseFlowCollection() {\n    let nl, sp;\n    let indent = -1;\n    do {\n      nl = yield* this.pushNewline();\n      if (nl > 0) {\n        sp = yield* this.pushSpaces(false);\n        this.indentValue = indent = sp;\n      } else {\n        sp = 0;\n      }\n      sp += yield* this.pushSpaces(true);\n    } while (nl + sp > 0);\n    const line = this.getLine();\n    if (line === null) return this.setNext('flow');\n    if (indent !== -1 && indent < this.indentNext && line[0] !== '#' || indent === 0 && (line.startsWith('---') || line.startsWith('...')) && isEmpty(line[3])) {\n      // Allowing for the terminal ] or } at the same (rather than greater)\n      // indent level as the initial [ or { is technically invalid, but\n      // failing here would be surprising to users.\n      const atFlowEndMarker = indent === this.indentNext - 1 && this.flowLevel === 1 && (line[0] === ']' || line[0] === '}');\n      if (!atFlowEndMarker) {\n        // this is an error\n        this.flowLevel = 0;\n        yield FLOW_END;\n        return yield* this.parseLineStart();\n      }\n    }\n    let n = 0;\n    while (line[n] === ',') {\n      n += yield* this.pushCount(1);\n      n += yield* this.pushSpaces(true);\n      this.flowKey = false;\n    }\n    n += yield* this.pushIndicators();\n    switch (line[n]) {\n      case undefined:\n        return 'flow';\n      case '#':\n        yield* this.pushCount(line.length - n);\n        return 'flow';\n      case '{':\n      case '[':\n        yield* this.pushCount(1);\n        this.flowKey = false;\n        this.flowLevel += 1;\n        return 'flow';\n      case '}':\n      case ']':\n        yield* this.pushCount(1);\n        this.flowKey = true;\n        this.flowLevel -= 1;\n        return this.flowLevel ? 'flow' : 'doc';\n      case '*':\n        yield* this.pushUntil(isNotAnchorChar);\n        return 'flow';\n      case '\"':\n      case \"'\":\n        this.flowKey = true;\n        return yield* this.parseQuotedScalar();\n      case ':':\n        {\n          const next = this.charAt(1);\n          if (this.flowKey || isEmpty(next) || next === ',') {\n            this.flowKey = false;\n            yield* this.pushCount(1);\n            yield* this.pushSpaces(true);\n            return 'flow';\n          }\n        }\n      // fallthrough\n      default:\n        this.flowKey = false;\n        return yield* this.parsePlainScalar();\n    }\n  }\n  *parseQuotedScalar() {\n    const quote = this.charAt(0);\n    let end = this.buffer.indexOf(quote, this.pos + 1);\n    if (quote === \"'\") {\n      while (end !== -1 && this.buffer[end + 1] === \"'\") end = this.buffer.indexOf(\"'\", end + 2);\n    } else {\n      // double-quote\n      while (end !== -1) {\n        let n = 0;\n        while (this.buffer[end - 1 - n] === '\\\\') n += 1;\n        if (n % 2 === 0) break;\n        end = this.buffer.indexOf('\"', end + 1);\n      }\n    }\n    // Only looking for newlines within the quotes\n    const qb = this.buffer.substring(0, end);\n    let nl = qb.indexOf('\\n', this.pos);\n    if (nl !== -1) {\n      while (nl !== -1) {\n        const cs = this.continueScalar(nl + 1);\n        if (cs === -1) break;\n        nl = qb.indexOf('\\n', cs);\n      }\n      if (nl !== -1) {\n        // this is an error caused by an unexpected unindent\n        end = nl - (qb[nl - 1] === '\\r' ? 2 : 1);\n      }\n    }\n    if (end === -1) {\n      if (!this.atEnd) return this.setNext('quoted-scalar');\n      end = this.buffer.length;\n    }\n    yield* this.pushToIndex(end + 1, false);\n    return this.flowLevel ? 'flow' : 'doc';\n  }\n  *parseBlockScalarHeader() {\n    this.blockScalarIndent = -1;\n    this.blockScalarKeep = false;\n    let i = this.pos;\n    while (true) {\n      const ch = this.buffer[++i];\n      if (ch === '+') this.blockScalarKeep = true;else if (ch > '0' && ch <= '9') this.blockScalarIndent = Number(ch) - 1;else if (ch !== '-') break;\n    }\n    return yield* this.pushUntil(ch => isEmpty(ch) || ch === '#');\n  }\n  *parseBlockScalar() {\n    let nl = this.pos - 1; // may be -1 if this.pos === 0\n    let indent = 0;\n    let ch;\n    loop: for (let i = this.pos; ch = this.buffer[i]; ++i) {\n      switch (ch) {\n        case ' ':\n          indent += 1;\n          break;\n        case '\\n':\n          nl = i;\n          indent = 0;\n          break;\n        case '\\r':\n          {\n            const next = this.buffer[i + 1];\n            if (!next && !this.atEnd) return this.setNext('block-scalar');\n            if (next === '\\n') break;\n          }\n        // fallthrough\n        default:\n          break loop;\n      }\n    }\n    if (!ch && !this.atEnd) return this.setNext('block-scalar');\n    if (indent >= this.indentNext) {\n      if (this.blockScalarIndent === -1) this.indentNext = indent;else {\n        this.indentNext = this.blockScalarIndent + (this.indentNext === 0 ? 1 : this.indentNext);\n      }\n      do {\n        const cs = this.continueScalar(nl + 1);\n        if (cs === -1) break;\n        nl = this.buffer.indexOf('\\n', cs);\n      } while (nl !== -1);\n      if (nl === -1) {\n        if (!this.atEnd) return this.setNext('block-scalar');\n        nl = this.buffer.length;\n      }\n    }\n    // Trailing insufficiently indented tabs are invalid.\n    // To catch that during parsing, we include them in the block scalar value.\n    let i = nl + 1;\n    ch = this.buffer[i];\n    while (ch === ' ') ch = this.buffer[++i];\n    if (ch === '\\t') {\n      while (ch === '\\t' || ch === ' ' || ch === '\\r' || ch === '\\n') ch = this.buffer[++i];\n      nl = i - 1;\n    } else if (!this.blockScalarKeep) {\n      do {\n        let i = nl - 1;\n        let ch = this.buffer[i];\n        if (ch === '\\r') ch = this.buffer[--i];\n        const lastChar = i; // Drop the line if last char not more indented\n        while (ch === ' ') ch = this.buffer[--i];\n        if (ch === '\\n' && i >= this.pos && i + 1 + indent > lastChar) nl = i;else break;\n      } while (true);\n    }\n    yield SCALAR;\n    yield* this.pushToIndex(nl + 1, true);\n    return yield* this.parseLineStart();\n  }\n  *parsePlainScalar() {\n    const inFlow = this.flowLevel > 0;\n    let end = this.pos - 1;\n    let i = this.pos - 1;\n    let ch;\n    while (ch = this.buffer[++i]) {\n      if (ch === ':') {\n        const next = this.buffer[i + 1];\n        if (isEmpty(next) || inFlow && flowIndicatorChars.has(next)) break;\n        end = i;\n      } else if (isEmpty(ch)) {\n        let next = this.buffer[i + 1];\n        if (ch === '\\r') {\n          if (next === '\\n') {\n            i += 1;\n            ch = '\\n';\n            next = this.buffer[i + 1];\n          } else end = i;\n        }\n        if (next === '#' || inFlow && flowIndicatorChars.has(next)) break;\n        if (ch === '\\n') {\n          const cs = this.continueScalar(i + 1);\n          if (cs === -1) break;\n          i = Math.max(i, cs - 2); // to advance, but still account for ' #'\n        }\n      } else {\n        if (inFlow && flowIndicatorChars.has(ch)) break;\n        end = i;\n      }\n    }\n    if (!ch && !this.atEnd) return this.setNext('plain-scalar');\n    yield SCALAR;\n    yield* this.pushToIndex(end + 1, true);\n    return inFlow ? 'flow' : 'doc';\n  }\n  *pushCount(n) {\n    if (n > 0) {\n      yield this.buffer.substr(this.pos, n);\n      this.pos += n;\n      return n;\n    }\n    return 0;\n  }\n  *pushToIndex(i, allowEmpty) {\n    const s = this.buffer.slice(this.pos, i);\n    if (s) {\n      yield s;\n      this.pos += s.length;\n      return s.length;\n    } else if (allowEmpty) yield '';\n    return 0;\n  }\n  *pushIndicators() {\n    switch (this.charAt(0)) {\n      case '!':\n        return (yield* this.pushTag()) + (yield* this.pushSpaces(true)) + (yield* this.pushIndicators());\n      case '&':\n        return (yield* this.pushUntil(isNotAnchorChar)) + (yield* this.pushSpaces(true)) + (yield* this.pushIndicators());\n      case '-': // this is an error\n      case '?': // this is an error outside flow collections\n      case ':':\n        {\n          const inFlow = this.flowLevel > 0;\n          const ch1 = this.charAt(1);\n          if (isEmpty(ch1) || inFlow && flowIndicatorChars.has(ch1)) {\n            if (!inFlow) this.indentNext = this.indentValue + 1;else if (this.flowKey) this.flowKey = false;\n            return (yield* this.pushCount(1)) + (yield* this.pushSpaces(true)) + (yield* this.pushIndicators());\n          }\n        }\n    }\n    return 0;\n  }\n  *pushTag() {\n    if (this.charAt(1) === '<') {\n      let i = this.pos + 2;\n      let ch = this.buffer[i];\n      while (!isEmpty(ch) && ch !== '>') ch = this.buffer[++i];\n      return yield* this.pushToIndex(ch === '>' ? i + 1 : i, false);\n    } else {\n      let i = this.pos + 1;\n      let ch = this.buffer[i];\n      while (ch) {\n        if (tagChars.has(ch)) ch = this.buffer[++i];else if (ch === '%' && hexDigits.has(this.buffer[i + 1]) && hexDigits.has(this.buffer[i + 2])) {\n          ch = this.buffer[i += 3];\n        } else break;\n      }\n      return yield* this.pushToIndex(i, false);\n    }\n  }\n  *pushNewline() {\n    const ch = this.buffer[this.pos];\n    if (ch === '\\n') return yield* this.pushCount(1);else if (ch === '\\r' && this.charAt(1) === '\\n') return yield* this.pushCount(2);else return 0;\n  }\n  *pushSpaces(allowTabs) {\n    let i = this.pos - 1;\n    let ch;\n    do {\n      ch = this.buffer[++i];\n    } while (ch === ' ' || allowTabs && ch === '\\t');\n    const n = i - this.pos;\n    if (n > 0) {\n      yield this.buffer.substr(this.pos, n);\n      this.pos = i;\n    }\n    return n;\n  }\n  *pushUntil(test) {\n    let i = this.pos;\n    let ch = this.buffer[i];\n    while (!test(ch)) ch = this.buffer[++i];\n    return yield* this.pushToIndex(i, false);\n  }\n}\nexport { Lexer };","import { tokenType } from './cst.js';\nimport { Lexer } from './lexer.js';\nfunction includesToken(list, type) {\n  for (let i = 0; i < list.length; ++i) if (list[i].type === type) return true;\n  return false;\n}\nfunction findNonEmptyIndex(list) {\n  for (let i = 0; i < list.length; ++i) {\n    switch (list[i].type) {\n      case 'space':\n      case 'comment':\n      case 'newline':\n        break;\n      default:\n        return i;\n    }\n  }\n  return -1;\n}\nfunction isFlowToken(token) {\n  switch (token?.type) {\n    case 'alias':\n    case 'scalar':\n    case 'single-quoted-scalar':\n    case 'double-quoted-scalar':\n    case 'flow-collection':\n      return true;\n    default:\n      return false;\n  }\n}\nfunction getPrevProps(parent) {\n  switch (parent.type) {\n    case 'document':\n      return parent.start;\n    case 'block-map':\n      {\n        const it = parent.items[parent.items.length - 1];\n        return it.sep ?? it.start;\n      }\n    case 'block-seq':\n      return parent.items[parent.items.length - 1].start;\n    /* istanbul ignore next should not happen */\n    default:\n      return [];\n  }\n}\n/** Note: May modify input array */\nfunction getFirstKeyStartProps(prev) {\n  if (prev.length === 0) return [];\n  let i = prev.length;\n  loop: while (--i >= 0) {\n    switch (prev[i].type) {\n      case 'doc-start':\n      case 'explicit-key-ind':\n      case 'map-value-ind':\n      case 'seq-item-ind':\n      case 'newline':\n        break loop;\n    }\n  }\n  while (prev[++i]?.type === 'space') {\n    /* loop */\n  }\n  return prev.splice(i, prev.length);\n}\nfunction fixFlowSeqItems(fc) {\n  if (fc.start.type === 'flow-seq-start') {\n    for (const it of fc.items) {\n      if (it.sep && !it.value && !includesToken(it.start, 'explicit-key-ind') && !includesToken(it.sep, 'map-value-ind')) {\n        if (it.key) it.value = it.key;\n        delete it.key;\n        if (isFlowToken(it.value)) {\n          if (it.value.end) Array.prototype.push.apply(it.value.end, it.sep);else it.value.end = it.sep;\n        } else Array.prototype.push.apply(it.start, it.sep);\n        delete it.sep;\n      }\n    }\n  }\n}\n/**\n * A YAML concrete syntax tree (CST) parser\n *\n * ```ts\n * const src: string = ...\n * for (const token of new Parser().parse(src)) {\n *   // token: Token\n * }\n * ```\n *\n * To use the parser with a user-provided lexer:\n *\n * ```ts\n * function* parse(source: string, lexer: Lexer) {\n *   const parser = new Parser()\n *   for (const lexeme of lexer.lex(source))\n *     yield* parser.next(lexeme)\n *   yield* parser.end()\n * }\n *\n * const src: string = ...\n * const lexer = new Lexer()\n * for (const token of parse(src, lexer)) {\n *   // token: Token\n * }\n * ```\n */\nclass Parser {\n  /**\n   * @param onNewLine - If defined, called separately with the start position of\n   *   each new line (in `parse()`, including the start of input).\n   */\n  constructor(onNewLine) {\n    /** If true, space and sequence indicators count as indentation */\n    this.atNewLine = true;\n    /** If true, next token is a scalar value */\n    this.atScalar = false;\n    /** Current indentation level */\n    this.indent = 0;\n    /** Current offset since the start of parsing */\n    this.offset = 0;\n    /** On the same line with a block map key */\n    this.onKeyLine = false;\n    /** Top indicates the node that's currently being built */\n    this.stack = [];\n    /** The source of the current token, set in parse() */\n    this.source = '';\n    /** The type of the current token, set in parse() */\n    this.type = '';\n    // Must be defined after `next()`\n    this.lexer = new Lexer();\n    this.onNewLine = onNewLine;\n  }\n  /**\n   * Parse `source` as a YAML stream.\n   * If `incomplete`, a part of the last line may be left as a buffer for the next call.\n   *\n   * Errors are not thrown, but yielded as `{ type: 'error', message }` tokens.\n   *\n   * @returns A generator of tokens representing each directive, document, and other structure.\n   */\n  *parse(source, incomplete = false) {\n    if (this.onNewLine && this.offset === 0) this.onNewLine(0);\n    for (const lexeme of this.lexer.lex(source, incomplete)) yield* this.next(lexeme);\n    if (!incomplete) yield* this.end();\n  }\n  /**\n   * Advance the parser by the `source` of one lexical token.\n   */\n  *next(source) {\n    this.source = source;\n    if (this.atScalar) {\n      this.atScalar = false;\n      yield* this.step();\n      this.offset += source.length;\n      return;\n    }\n    const type = tokenType(source);\n    if (!type) {\n      const message = `Not a YAML token: ${source}`;\n      yield* this.pop({\n        type: 'error',\n        offset: this.offset,\n        message,\n        source\n      });\n      this.offset += source.length;\n    } else if (type === 'scalar') {\n      this.atNewLine = false;\n      this.atScalar = true;\n      this.type = 'scalar';\n    } else {\n      this.type = type;\n      yield* this.step();\n      switch (type) {\n        case 'newline':\n          this.atNewLine = true;\n          this.indent = 0;\n          if (this.onNewLine) this.onNewLine(this.offset + source.length);\n          break;\n        case 'space':\n          if (this.atNewLine && source[0] === ' ') this.indent += source.length;\n          break;\n        case 'explicit-key-ind':\n        case 'map-value-ind':\n        case 'seq-item-ind':\n          if (this.atNewLine) this.indent += source.length;\n          break;\n        case 'doc-mode':\n        case 'flow-error-end':\n          return;\n        default:\n          this.atNewLine = false;\n      }\n      this.offset += source.length;\n    }\n  }\n  /** Call at end of input to push out any remaining constructions */\n  *end() {\n    while (this.stack.length > 0) yield* this.pop();\n  }\n  get sourceToken() {\n    const st = {\n      type: this.type,\n      offset: this.offset,\n      indent: this.indent,\n      source: this.source\n    };\n    return st;\n  }\n  *step() {\n    const top = this.peek(1);\n    if (this.type === 'doc-end' && (!top || top.type !== 'doc-end')) {\n      while (this.stack.length > 0) yield* this.pop();\n      this.stack.push({\n        type: 'doc-end',\n        offset: this.offset,\n        source: this.source\n      });\n      return;\n    }\n    if (!top) return yield* this.stream();\n    switch (top.type) {\n      case 'document':\n        return yield* this.document(top);\n      case 'alias':\n      case 'scalar':\n      case 'single-quoted-scalar':\n      case 'double-quoted-scalar':\n        return yield* this.scalar(top);\n      case 'block-scalar':\n        return yield* this.blockScalar(top);\n      case 'block-map':\n        return yield* this.blockMap(top);\n      case 'block-seq':\n        return yield* this.blockSequence(top);\n      case 'flow-collection':\n        return yield* this.flowCollection(top);\n      case 'doc-end':\n        return yield* this.documentEnd(top);\n    }\n    /* istanbul ignore next should not happen */\n    yield* this.pop();\n  }\n  peek(n) {\n    return this.stack[this.stack.length - n];\n  }\n  *pop(error) {\n    const token = error ?? this.stack.pop();\n    /* istanbul ignore if should not happen */\n    if (!token) {\n      const message = 'Tried to pop an empty stack';\n      yield {\n        type: 'error',\n        offset: this.offset,\n        source: '',\n        message\n      };\n    } else if (this.stack.length === 0) {\n      yield token;\n    } else {\n      const top = this.peek(1);\n      if (token.type === 'block-scalar') {\n        // Block scalars use their parent rather than header indent\n        token.indent = 'indent' in top ? top.indent : 0;\n      } else if (token.type === 'flow-collection' && top.type === 'document') {\n        // Ignore all indent for top-level flow collections\n        token.indent = 0;\n      }\n      if (token.type === 'flow-collection') fixFlowSeqItems(token);\n      switch (top.type) {\n        case 'document':\n          top.value = token;\n          break;\n        case 'block-scalar':\n          top.props.push(token); // error\n          break;\n        case 'block-map':\n          {\n            const it = top.items[top.items.length - 1];\n            if (it.value) {\n              top.items.push({\n                start: [],\n                key: token,\n                sep: []\n              });\n              this.onKeyLine = true;\n              return;\n            } else if (it.sep) {\n              it.value = token;\n            } else {\n              Object.assign(it, {\n                key: token,\n                sep: []\n              });\n              this.onKeyLine = !it.explicitKey;\n              return;\n            }\n            break;\n          }\n        case 'block-seq':\n          {\n            const it = top.items[top.items.length - 1];\n            if (it.value) top.items.push({\n              start: [],\n              value: token\n            });else it.value = token;\n            break;\n          }\n        case 'flow-collection':\n          {\n            const it = top.items[top.items.length - 1];\n            if (!it || it.value) top.items.push({\n              start: [],\n              key: token,\n              sep: []\n            });else if (it.sep) it.value = token;else Object.assign(it, {\n              key: token,\n              sep: []\n            });\n            return;\n          }\n        /* istanbul ignore next should not happen */\n        default:\n          yield* this.pop();\n          yield* this.pop(token);\n      }\n      if ((top.type === 'document' || top.type === 'block-map' || top.type === 'block-seq') && (token.type === 'block-map' || token.type === 'block-seq')) {\n        const last = token.items[token.items.length - 1];\n        if (last && !last.sep && !last.value && last.start.length > 0 && findNonEmptyIndex(last.start) === -1 && (token.indent === 0 || last.start.every(st => st.type !== 'comment' || st.indent < token.indent))) {\n          if (top.type === 'document') top.end = last.start;else top.items.push({\n            start: last.start\n          });\n          token.items.splice(-1, 1);\n        }\n      }\n    }\n  }\n  *stream() {\n    switch (this.type) {\n      case 'directive-line':\n        yield {\n          type: 'directive',\n          offset: this.offset,\n          source: this.source\n        };\n        return;\n      case 'byte-order-mark':\n      case 'space':\n      case 'comment':\n      case 'newline':\n        yield this.sourceToken;\n        return;\n      case 'doc-mode':\n      case 'doc-start':\n        {\n          const doc = {\n            type: 'document',\n            offset: this.offset,\n            start: []\n          };\n          if (this.type === 'doc-start') doc.start.push(this.sourceToken);\n          this.stack.push(doc);\n          return;\n        }\n    }\n    yield {\n      type: 'error',\n      offset: this.offset,\n      message: `Unexpected ${this.type} token in YAML stream`,\n      source: this.source\n    };\n  }\n  *document(doc) {\n    if (doc.value) return yield* this.lineEnd(doc);\n    switch (this.type) {\n      case 'doc-start':\n        {\n          if (findNonEmptyIndex(doc.start) !== -1) {\n            yield* this.pop();\n            yield* this.step();\n          } else doc.start.push(this.sourceToken);\n          return;\n        }\n      case 'anchor':\n      case 'tag':\n      case 'space':\n      case 'comment':\n      case 'newline':\n        doc.start.push(this.sourceToken);\n        return;\n    }\n    const bv = this.startBlockValue(doc);\n    if (bv) this.stack.push(bv);else {\n      yield {\n        type: 'error',\n        offset: this.offset,\n        message: `Unexpected ${this.type} token in YAML document`,\n        source: this.source\n      };\n    }\n  }\n  *scalar(scalar) {\n    if (this.type === 'map-value-ind') {\n      const prev = getPrevProps(this.peek(2));\n      const start = getFirstKeyStartProps(prev);\n      let sep;\n      if (scalar.end) {\n        sep = scalar.end;\n        sep.push(this.sourceToken);\n        delete scalar.end;\n      } else sep = [this.sourceToken];\n      const map = {\n        type: 'block-map',\n        offset: scalar.offset,\n        indent: scalar.indent,\n        items: [{\n          start,\n          key: scalar,\n          sep\n        }]\n      };\n      this.onKeyLine = true;\n      this.stack[this.stack.length - 1] = map;\n    } else yield* this.lineEnd(scalar);\n  }\n  *blockScalar(scalar) {\n    switch (this.type) {\n      case 'space':\n      case 'comment':\n      case 'newline':\n        scalar.props.push(this.sourceToken);\n        return;\n      case 'scalar':\n        scalar.source = this.source;\n        // block-scalar source includes trailing newline\n        this.atNewLine = true;\n        this.indent = 0;\n        if (this.onNewLine) {\n          let nl = this.source.indexOf('\\n') + 1;\n          while (nl !== 0) {\n            this.onNewLine(this.offset + nl);\n            nl = this.source.indexOf('\\n', nl) + 1;\n          }\n        }\n        yield* this.pop();\n        break;\n      /* istanbul ignore next should not happen */\n      default:\n        yield* this.pop();\n        yield* this.step();\n    }\n  }\n  *blockMap(map) {\n    const it = map.items[map.items.length - 1];\n    // it.sep is true-ish if pair already has key or : separator\n    switch (this.type) {\n      case 'newline':\n        this.onKeyLine = false;\n        if (it.value) {\n          const end = 'end' in it.value ? it.value.end : undefined;\n          const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n          if (last?.type === 'comment') end?.push(this.sourceToken);else map.items.push({\n            start: [this.sourceToken]\n          });\n        } else if (it.sep) {\n          it.sep.push(this.sourceToken);\n        } else {\n          it.start.push(this.sourceToken);\n        }\n        return;\n      case 'space':\n      case 'comment':\n        if (it.value) {\n          map.items.push({\n            start: [this.sourceToken]\n          });\n        } else if (it.sep) {\n          it.sep.push(this.sourceToken);\n        } else {\n          if (this.atIndentedComment(it.start, map.indent)) {\n            const prev = map.items[map.items.length - 2];\n            const end = prev?.value?.end;\n            if (Array.isArray(end)) {\n              Array.prototype.push.apply(end, it.start);\n              end.push(this.sourceToken);\n              map.items.pop();\n              return;\n            }\n          }\n          it.start.push(this.sourceToken);\n        }\n        return;\n    }\n    if (this.indent >= map.indent) {\n      const atMapIndent = !this.onKeyLine && this.indent === map.indent;\n      const atNextItem = atMapIndent && (it.sep || it.explicitKey) && this.type !== 'seq-item-ind';\n      // For empty nodes, assign newline-separated not indented empty tokens to following node\n      let start = [];\n      if (atNextItem && it.sep && !it.value) {\n        const nl = [];\n        for (let i = 0; i < it.sep.length; ++i) {\n          const st = it.sep[i];\n          switch (st.type) {\n            case 'newline':\n              nl.push(i);\n              break;\n            case 'space':\n              break;\n            case 'comment':\n              if (st.indent > map.indent) nl.length = 0;\n              break;\n            default:\n              nl.length = 0;\n          }\n        }\n        if (nl.length >= 2) start = it.sep.splice(nl[1]);\n      }\n      switch (this.type) {\n        case 'anchor':\n        case 'tag':\n          if (atNextItem || it.value) {\n            start.push(this.sourceToken);\n            map.items.push({\n              start\n            });\n            this.onKeyLine = true;\n          } else if (it.sep) {\n            it.sep.push(this.sourceToken);\n          } else {\n            it.start.push(this.sourceToken);\n          }\n          return;\n        case 'explicit-key-ind':\n          if (!it.sep && !it.explicitKey) {\n            it.start.push(this.sourceToken);\n            it.explicitKey = true;\n          } else if (atNextItem || it.value) {\n            start.push(this.sourceToken);\n            map.items.push({\n              start,\n              explicitKey: true\n            });\n          } else {\n            this.stack.push({\n              type: 'block-map',\n              offset: this.offset,\n              indent: this.indent,\n              items: [{\n                start: [this.sourceToken],\n                explicitKey: true\n              }]\n            });\n          }\n          this.onKeyLine = true;\n          return;\n        case 'map-value-ind':\n          if (it.explicitKey) {\n            if (!it.sep) {\n              if (includesToken(it.start, 'newline')) {\n                Object.assign(it, {\n                  key: null,\n                  sep: [this.sourceToken]\n                });\n              } else {\n                const start = getFirstKeyStartProps(it.start);\n                this.stack.push({\n                  type: 'block-map',\n                  offset: this.offset,\n                  indent: this.indent,\n                  items: [{\n                    start,\n                    key: null,\n                    sep: [this.sourceToken]\n                  }]\n                });\n              }\n            } else if (it.value) {\n              map.items.push({\n                start: [],\n                key: null,\n                sep: [this.sourceToken]\n              });\n            } else if (includesToken(it.sep, 'map-value-ind')) {\n              this.stack.push({\n                type: 'block-map',\n                offset: this.offset,\n                indent: this.indent,\n                items: [{\n                  start,\n                  key: null,\n                  sep: [this.sourceToken]\n                }]\n              });\n            } else if (isFlowToken(it.key) && !includesToken(it.sep, 'newline')) {\n              const start = getFirstKeyStartProps(it.start);\n              const key = it.key;\n              const sep = it.sep;\n              sep.push(this.sourceToken);\n              // @ts-expect-error type guard is wrong here\n              delete it.key;\n              // @ts-expect-error type guard is wrong here\n              delete it.sep;\n              this.stack.push({\n                type: 'block-map',\n                offset: this.offset,\n                indent: this.indent,\n                items: [{\n                  start,\n                  key,\n                  sep\n                }]\n              });\n            } else if (start.length > 0) {\n              // Not actually at next item\n              it.sep = it.sep.concat(start, this.sourceToken);\n            } else {\n              it.sep.push(this.sourceToken);\n            }\n          } else {\n            if (!it.sep) {\n              Object.assign(it, {\n                key: null,\n                sep: [this.sourceToken]\n              });\n            } else if (it.value || atNextItem) {\n              map.items.push({\n                start,\n                key: null,\n                sep: [this.sourceToken]\n              });\n            } else if (includesToken(it.sep, 'map-value-ind')) {\n              this.stack.push({\n                type: 'block-map',\n                offset: this.offset,\n                indent: this.indent,\n                items: [{\n                  start: [],\n                  key: null,\n                  sep: [this.sourceToken]\n                }]\n              });\n            } else {\n              it.sep.push(this.sourceToken);\n            }\n          }\n          this.onKeyLine = true;\n          return;\n        case 'alias':\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n          {\n            const fs = this.flowScalar(this.type);\n            if (atNextItem || it.value) {\n              map.items.push({\n                start,\n                key: fs,\n                sep: []\n              });\n              this.onKeyLine = true;\n            } else if (it.sep) {\n              this.stack.push(fs);\n            } else {\n              Object.assign(it, {\n                key: fs,\n                sep: []\n              });\n              this.onKeyLine = true;\n            }\n            return;\n          }\n        default:\n          {\n            const bv = this.startBlockValue(map);\n            if (bv) {\n              if (atMapIndent && bv.type !== 'block-seq') {\n                map.items.push({\n                  start\n                });\n              }\n              this.stack.push(bv);\n              return;\n            }\n          }\n      }\n    }\n    yield* this.pop();\n    yield* this.step();\n  }\n  *blockSequence(seq) {\n    const it = seq.items[seq.items.length - 1];\n    switch (this.type) {\n      case 'newline':\n        if (it.value) {\n          const end = 'end' in it.value ? it.value.end : undefined;\n          const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n          if (last?.type === 'comment') end?.push(this.sourceToken);else seq.items.push({\n            start: [this.sourceToken]\n          });\n        } else it.start.push(this.sourceToken);\n        return;\n      case 'space':\n      case 'comment':\n        if (it.value) seq.items.push({\n          start: [this.sourceToken]\n        });else {\n          if (this.atIndentedComment(it.start, seq.indent)) {\n            const prev = seq.items[seq.items.length - 2];\n            const end = prev?.value?.end;\n            if (Array.isArray(end)) {\n              Array.prototype.push.apply(end, it.start);\n              end.push(this.sourceToken);\n              seq.items.pop();\n              return;\n            }\n          }\n          it.start.push(this.sourceToken);\n        }\n        return;\n      case 'anchor':\n      case 'tag':\n        if (it.value || this.indent <= seq.indent) break;\n        it.start.push(this.sourceToken);\n        return;\n      case 'seq-item-ind':\n        if (this.indent !== seq.indent) break;\n        if (it.value || includesToken(it.start, 'seq-item-ind')) seq.items.push({\n          start: [this.sourceToken]\n        });else it.start.push(this.sourceToken);\n        return;\n    }\n    if (this.indent > seq.indent) {\n      const bv = this.startBlockValue(seq);\n      if (bv) {\n        this.stack.push(bv);\n        return;\n      }\n    }\n    yield* this.pop();\n    yield* this.step();\n  }\n  *flowCollection(fc) {\n    const it = fc.items[fc.items.length - 1];\n    if (this.type === 'flow-error-end') {\n      let top;\n      do {\n        yield* this.pop();\n        top = this.peek(1);\n      } while (top && top.type === 'flow-collection');\n    } else if (fc.end.length === 0) {\n      switch (this.type) {\n        case 'comma':\n        case 'explicit-key-ind':\n          if (!it || it.sep) fc.items.push({\n            start: [this.sourceToken]\n          });else it.start.push(this.sourceToken);\n          return;\n        case 'map-value-ind':\n          if (!it || it.value) fc.items.push({\n            start: [],\n            key: null,\n            sep: [this.sourceToken]\n          });else if (it.sep) it.sep.push(this.sourceToken);else Object.assign(it, {\n            key: null,\n            sep: [this.sourceToken]\n          });\n          return;\n        case 'space':\n        case 'comment':\n        case 'newline':\n        case 'anchor':\n        case 'tag':\n          if (!it || it.value) fc.items.push({\n            start: [this.sourceToken]\n          });else if (it.sep) it.sep.push(this.sourceToken);else it.start.push(this.sourceToken);\n          return;\n        case 'alias':\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n          {\n            const fs = this.flowScalar(this.type);\n            if (!it || it.value) fc.items.push({\n              start: [],\n              key: fs,\n              sep: []\n            });else if (it.sep) this.stack.push(fs);else Object.assign(it, {\n              key: fs,\n              sep: []\n            });\n            return;\n          }\n        case 'flow-map-end':\n        case 'flow-seq-end':\n          fc.end.push(this.sourceToken);\n          return;\n      }\n      const bv = this.startBlockValue(fc);\n      /* istanbul ignore else should not happen */\n      if (bv) this.stack.push(bv);else {\n        yield* this.pop();\n        yield* this.step();\n      }\n    } else {\n      const parent = this.peek(2);\n      if (parent.type === 'block-map' && (this.type === 'map-value-ind' && parent.indent === fc.indent || this.type === 'newline' && !parent.items[parent.items.length - 1].sep)) {\n        yield* this.pop();\n        yield* this.step();\n      } else if (this.type === 'map-value-ind' && parent.type !== 'flow-collection') {\n        const prev = getPrevProps(parent);\n        const start = getFirstKeyStartProps(prev);\n        fixFlowSeqItems(fc);\n        const sep = fc.end.splice(1, fc.end.length);\n        sep.push(this.sourceToken);\n        const map = {\n          type: 'block-map',\n          offset: fc.offset,\n          indent: fc.indent,\n          items: [{\n            start,\n            key: fc,\n            sep\n          }]\n        };\n        this.onKeyLine = true;\n        this.stack[this.stack.length - 1] = map;\n      } else {\n        yield* this.lineEnd(fc);\n      }\n    }\n  }\n  flowScalar(type) {\n    if (this.onNewLine) {\n      let nl = this.source.indexOf('\\n') + 1;\n      while (nl !== 0) {\n        this.onNewLine(this.offset + nl);\n        nl = this.source.indexOf('\\n', nl) + 1;\n      }\n    }\n    return {\n      type,\n      offset: this.offset,\n      indent: this.indent,\n      source: this.source\n    };\n  }\n  startBlockValue(parent) {\n    switch (this.type) {\n      case 'alias':\n      case 'scalar':\n      case 'single-quoted-scalar':\n      case 'double-quoted-scalar':\n        return this.flowScalar(this.type);\n      case 'block-scalar-header':\n        return {\n          type: 'block-scalar',\n          offset: this.offset,\n          indent: this.indent,\n          props: [this.sourceToken],\n          source: ''\n        };\n      case 'flow-map-start':\n      case 'flow-seq-start':\n        return {\n          type: 'flow-collection',\n          offset: this.offset,\n          indent: this.indent,\n          start: this.sourceToken,\n          items: [],\n          end: []\n        };\n      case 'seq-item-ind':\n        return {\n          type: 'block-seq',\n          offset: this.offset,\n          indent: this.indent,\n          items: [{\n            start: [this.sourceToken]\n          }]\n        };\n      case 'explicit-key-ind':\n        {\n          this.onKeyLine = true;\n          const prev = getPrevProps(parent);\n          const start = getFirstKeyStartProps(prev);\n          start.push(this.sourceToken);\n          return {\n            type: 'block-map',\n            offset: this.offset,\n            indent: this.indent,\n            items: [{\n              start,\n              explicitKey: true\n            }]\n          };\n        }\n      case 'map-value-ind':\n        {\n          this.onKeyLine = true;\n          const prev = getPrevProps(parent);\n          const start = getFirstKeyStartProps(prev);\n          return {\n            type: 'block-map',\n            offset: this.offset,\n            indent: this.indent,\n            items: [{\n              start,\n              key: null,\n              sep: [this.sourceToken]\n            }]\n          };\n        }\n    }\n    return null;\n  }\n  atIndentedComment(start, indent) {\n    if (this.type !== 'comment') return false;\n    if (this.indent <= indent) return false;\n    return start.every(st => st.type === 'newline' || st.type === 'space');\n  }\n  *documentEnd(docEnd) {\n    if (this.type !== 'doc-mode') {\n      if (docEnd.end) docEnd.end.push(this.sourceToken);else docEnd.end = [this.sourceToken];\n      if (this.type === 'newline') yield* this.pop();\n    }\n  }\n  *lineEnd(token) {\n    switch (this.type) {\n      case 'comma':\n      case 'doc-start':\n      case 'doc-end':\n      case 'flow-seq-end':\n      case 'flow-map-end':\n      case 'map-value-ind':\n        yield* this.pop();\n        yield* this.step();\n        break;\n      case 'newline':\n        this.onKeyLine = false;\n      // fallthrough\n      case 'space':\n      case 'comment':\n      default:\n        // all other values are errors\n        if (token.end) token.end.push(this.sourceToken);else token.end = [this.sourceToken];\n        if (this.type === 'newline') yield* this.pop();\n    }\n  }\n}\nexport { Parser };","import { Composer } from './compose/composer.js';\nimport { Document } from './doc/Document.js';\nimport { prettifyError, YAMLParseError } from './errors.js';\nimport { warn } from './log.js';\nimport { isDocument } from './nodes/identity.js';\nimport { LineCounter } from './parse/line-counter.js';\nimport { Parser } from './parse/parser.js';\nfunction parseOptions(options) {\n  const prettyErrors = options.prettyErrors !== false;\n  const lineCounter = options.lineCounter || prettyErrors && new LineCounter() || null;\n  return {\n    lineCounter,\n    prettyErrors\n  };\n}\n/**\n * Parse the input as a stream of YAML documents.\n *\n * Documents should be separated from each other by `...` or `---` marker lines.\n *\n * @returns If an empty `docs` array is returned, it will be of type\n *   EmptyStream and contain additional stream information. In\n *   TypeScript, you should use `'empty' in docs` as a type guard for it.\n */\nfunction parseAllDocuments(source, options = {}) {\n  const {\n    lineCounter,\n    prettyErrors\n  } = parseOptions(options);\n  const parser = new Parser(lineCounter?.addNewLine);\n  const composer = new Composer(options);\n  const docs = Array.from(composer.compose(parser.parse(source)));\n  if (prettyErrors && lineCounter) for (const doc of docs) {\n    doc.errors.forEach(prettifyError(source, lineCounter));\n    doc.warnings.forEach(prettifyError(source, lineCounter));\n  }\n  if (docs.length > 0) return docs;\n  return Object.assign([], {\n    empty: true\n  }, composer.streamInfo());\n}\n/** Parse an input string into a single YAML.Document */\nfunction parseDocument(source, options = {}) {\n  const {\n    lineCounter,\n    prettyErrors\n  } = parseOptions(options);\n  const parser = new Parser(lineCounter?.addNewLine);\n  const composer = new Composer(options);\n  // `doc` is always set by compose.end(true) at the very latest\n  let doc = null;\n  for (const _doc of composer.compose(parser.parse(source), true, source.length)) {\n    if (!doc) doc = _doc;else if (doc.options.logLevel !== 'silent') {\n      doc.errors.push(new YAMLParseError(_doc.range.slice(0, 2), 'MULTIPLE_DOCS', 'Source contains multiple documents; please use YAML.parseAllDocuments()'));\n      break;\n    }\n  }\n  if (prettyErrors && lineCounter) {\n    doc.errors.forEach(prettifyError(source, lineCounter));\n    doc.warnings.forEach(prettifyError(source, lineCounter));\n  }\n  return doc;\n}\nfunction parse(src, reviver, options) {\n  let _reviver = undefined;\n  if (typeof reviver === 'function') {\n    _reviver = reviver;\n  } else if (options === undefined && reviver && typeof reviver === 'object') {\n    options = reviver;\n  }\n  const doc = parseDocument(src, options);\n  if (!doc) return null;\n  doc.warnings.forEach(warning => warn(doc.options.logLevel, warning));\n  if (doc.errors.length > 0) {\n    if (doc.options.logLevel !== 'silent') throw doc.errors[0];else doc.errors = [];\n  }\n  return doc.toJS(Object.assign({\n    reviver: _reviver\n  }, options));\n}\nfunction stringify(value, replacer, options) {\n  let _replacer = null;\n  if (typeof replacer === 'function' || Array.isArray(replacer)) {\n    _replacer = replacer;\n  } else if (options === undefined && replacer) {\n    options = replacer;\n  }\n  if (typeof options === 'string') options = options.length;\n  if (typeof options === 'number') {\n    const indent = Math.round(options);\n    options = indent < 1 ? undefined : indent > 8 ? {\n      indent: 8\n    } : {\n      indent\n    };\n  }\n  if (value === undefined) {\n    const {\n      keepUndefined\n    } = options ?? replacer ?? {};\n    if (!keepUndefined) return undefined;\n  }\n  if (isDocument(value) && !_replacer) return value.toString(options);\n  return new Document(value, _replacer, options).toString(options);\n}\nexport { parse, parseAllDocuments, parseDocument, stringify };"],"mappings":"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","names":["res","res","map","schema","node","schema","i","end","isBlock","map","value","map","schema","stringify","comment","str","schema","map","map","schema","schema","seq","seq","schema","intIdentify","schema","seq","schema","pairs","map","schema","pairs","omap","seq","floatNaN","floatExp","float","intIdentify","intResolve","n","intStringify","intOct","int","intHex","schema","set","map","res","schema","intOct","int","intHex","floatNaN","floatExp","float","schema","tags","merge","schema","res","composeNode","composeEmptyNode","map","composeNode","composeEmptyNode","seq","composeNode","composeEmptyNode","isMap","map","CN","value","end","schema","tag","BREAK","SKIP","REMOVE","visit","SCALAR","SCALAR","i","ch","SCALAR","map","start","seq"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68]}