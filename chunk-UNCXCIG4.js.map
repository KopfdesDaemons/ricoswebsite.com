{
  "version": 3,
  "sources": ["src/app/environment/enviroment.ts", "src/app/services/script.service.ts", "src/app/services/disqus.service.ts", "src/app/services/consent.service.ts"],
  "sourcesContent": ["export const DISQUS_SHORTNAME = 'ricoswebsite-com';\nexport const BASE_URL = 'https://ricoswebsite.com';\n", "import { DOCUMENT } from '@angular/common';\nimport { Injectable, Renderer2, inject } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ScriptService {\n  private document = inject<Document>(DOCUMENT);\n\n  addJsScript(renderer: Renderer2, src: string): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      const existingScript = this.document.querySelector(`script[src=\"${src}\"]`);\n      if (existingScript) {\n        resolve();\n        return;\n      }\n\n      const script = renderer.createElement('script');\n      script.type = 'text/javascript';\n      script.src = src;\n      script.onload = () => resolve();\n      script.onerror = () => reject(new Error(`Error loading script: ${src}`));\n      renderer.appendChild(this.document.body, script);\n    });\n  }\n\n  async reloadJsScript(renderer: Renderer2, src: string) {\n    this.removeJsScript(src);\n    await this.addJsScript(renderer, src);\n  }\n\n  removeJsScript(src: string): void {\n    const existingScript = this.document.querySelector(`script[src=\"${src}\"]`);\n    if (existingScript) {\n      existingScript.remove();\n    }\n  }\n\n  ceckIfJsScriptExist(src: string): boolean {\n    return !!this.document.querySelector(`script[src=\"${src}\"]`);\n  }\n}\n", "import { Injectable, Renderer2, inject } from '@angular/core';\nimport { ScriptService } from './script.service';\nimport { LanguageService } from './language.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DisqusService {\n  scriptS = inject(ScriptService);\n  languageS = inject(LanguageService);\n\n  disqus: any;\n  shortname: string = 'ricoswebsite-com';\n\n  async loadDisqus(renderer: Renderer2, title: string): Promise<void> {\n    this.disqus = (window as any)['DISQUS'];\n    const lang = this.languageS.userLanguage;\n    if (!this.disqus) {\n      (window as any).disqus_config = function () {\n        this.page.identifier = title;\n        this.language = lang;\n      };\n      await this.scriptS.addJsScript(renderer, 'https://' + this.shortname + '.disqus.com/embed.js');\n    } else {\n      (window as any)['DISQUS'].reset({\n        reload: true,\n        config: function () {\n          this.page.identifier = title;\n          this.language = lang;\n        },\n      });\n    }\n  }\n\n  removeDisqus() {\n    this.scriptS.removeJsScript('https://' + this.shortname + '.disqus.com/embed.js');\n    (window as any)['DISQUS'] = undefined;\n  }\n}\n", "import { isPlatformServer } from '@angular/common';\nimport { Injectable, PLATFORM_ID, inject } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { DISQUS_SHORTNAME } from '../environment/enviroment';\nimport { ScriptService } from './script.service';\nimport { DisqusService } from './disqus.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConsentService {\n  private platformId = inject<object>(PLATFORM_ID);\n  private scriptS = inject(ScriptService);\n  private disqusS = inject(DisqusService);\n\n  consentMangerIsVisible: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  possibleConsents: { name: string; domains: string[] | undefined; descriptionTransString: string }[] = [\n    {\n      name: 'Disqus',\n      domains: ['disqus.com'],\n      descriptionTransString: 'disqus_descr',\n    },\n    {\n      name: 'CodePen',\n      domains: ['codepen.io', 'cdpn.io'],\n      descriptionTransString: 'codepen_descr',\n    },\n    {\n      name: 'Custom Language',\n      domains: [],\n      descriptionTransString: 'custom_language',\n    },\n  ];\n\n  giveConsent(serviceName: string) {\n    if (isPlatformServer(this.platformId)) return;\n    localStorage.setItem(serviceName, '');\n  }\n\n  checkConsent(serviceName: string): boolean {\n    if (isPlatformServer(this.platformId)) return false;\n    return localStorage.getItem(serviceName) != null;\n  }\n\n  revokeConsent(serviceName: string) {\n    if (isPlatformServer(this.platformId)) return;\n\n    localStorage.removeItem(serviceName);\n\n    // delete cookies\n    const consent = this.possibleConsents.find((c) => c.name === serviceName);\n    if (consent && consent.domains) {\n      consent.domains.forEach((domain) => {\n        this.deleteCookiesForDomain(domain);\n      });\n    }\n\n    if (serviceName === 'Disqus') {\n      this.scriptS.removeJsScript('https://' + DISQUS_SHORTNAME + '.disqus.com/embed.js');\n      (window as any)['DISQUS'] = undefined;\n      this.disqusS.removeDisqus();\n    }\n  }\n\n  private deleteCookiesForDomain(domain: string) {\n    const cookies = document.cookie.split(';');\n\n    cookies.forEach((cookie) => {\n      const eqPos = cookie.indexOf('=');\n      const name = eqPos > -1 ? cookie.substring(0, eqPos) : cookie;\n      document.cookie = name + `=; domain=${domain}; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT`;\n    });\n  }\n\n  openConsentmanager() {\n    this.consentMangerIsVisible.next(true);\n  }\n\n  closeConsentmanager() {\n    this.consentMangerIsVisible.next(false);\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
